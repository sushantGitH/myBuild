[1,["1brw/JvvpFnIvdrxpFCgMZ","f1KiPEuSRDIqJgPZgkKPHo@f9941","ffRMpSU6tEDKzhWOQ80I4E","c5Au50SOBA5Yy0tiwVs3Qi","28dl4vBApMZY6M+dC7edhj@f9941","12Y9dMgWdJKJGmTiZyQR9H@2e76e","93ipmDhV9Gwohb3lklqFb3@7bb43","79V6p1lpxKQpEuVHDiWp8v","87Uvy/zm1MRpTQsWp8vyHK","93ipmDhV9Gwohb3lklqFb3@edcf8","93ipmDhV9Gwohb3lklqFb3@c9f64","0ci0SZyDlOQ7qfZKM3vD0q","33Hl/53n9PlogXx8uRG4Wk@f9941","d7HqNEy+RCQoZfkpav099t@edcf8","f6LxBSlV1E46/H8YV1cq/s@edcf8","26fECbKzpCiZ9wVHDFknBY@edcf8","20rAGr3ilCJKmIiyQvTmDT@edcf8","653f2nST5OJLjtT2Ppokjb","d9V2rPDplMzY4zqLMonTr9@f9941","628hXrhG1K45ckB9n7frqC@f9941","733ZXwGiRACZ0JKDbMzLCy@c56ca","50XXbETEtHhYQMk9gpDOh7","20+rYWhExC9aspzOU+7MYJ@edcf8","20+rYWhExC9aspzOU+7MYJ@65956","20+rYWhExC9aspzOU+7MYJ@dff12","e1sJan9NxIVZCShxN8CuH0@b47c0","31EwUTSZZFHKvVq8AFhSVO@ddf69","01kHUkcGFKk6mD/C5iZxPq","f99vmrkrxNP6fq/eXQy5uQ@ce824","12Y9dMgWdJKJGmTiZyQR9H@40ece","34ChCm9zhK+Y5NYqyMmla9@f9941","6diwYuoIxKDbe/cXBgnvZf@5431f","82kq10kJtFGqyiXKO/Yuqt@400b8","83TlV5O6tME5etNGCuYEW4@6d9cc","9aMiLnPIFCjKA9cBL5lMwT@1f96e","58O5qSlE9BV7vJilQgr3mW","f0sK+/Kp1KvaGuDbpd0Jnp","f7ZPec7nBCyKUjsIOl410P@bdd2e","3eLWJyUWtLdYzaeEmeXTYD@f9941","6d/n+TfRVEsoAUjEgdzGLk","2a6Rq61ABE67f7V2dWK31y@f9941","4b4v/wZFFD77SqmTkI5eh3@f9941","95EkngnxZFbYuFpsqVTaFr@f9941","43pg0EczJGeYFzGohRPg+O@f9941","85lfIQL1ZHA7haXhL6u33d@f9941","bfr5fs6ddDHpdMb/KAGmQk","421k6XZb5GfJk14PMQu8SN@f9941","16OwRDN15Pz4O8BhYecnxa@f9941","39l49UHM5M+6pEChzBn54k","bdWROqegxPkK/dhyJHhgEW@f9941","bd9QNfkDdBDIfqJyt+sEC+@edcf8","bd9QNfkDdBDIfqJyt+sEC+@72f66","bd9QNfkDdBDIfqJyt+sEC+@78ec5","da0j12OfxJk4cqgN/mARar@bddf3","da0j12OfxJk4cqgN/mARar@edcf8","da0j12OfxJk4cqgN/mARar@5a817","733ZXwGiRACZ0JKDbMzLCy@edcf8","733ZXwGiRACZ0JKDbMzLCy@12302","0e9EdeRRtM6ox2aZ2rOEFy@6c48a","16OwRDN15Pz4O8BhYecnxa@6c48a","1bqFzw54xINKBrUPa8g92g@6c48a","20+rYWhExC9aspzOU+7MYJ@08c96","28dl4vBApMZY6M+dC7edhj@6c48a","2bjl4+i0FKV74GTRwP8oTj@6c48a","33Hl/53n9PlogXx8uRG4Wk@6c48a","34ChCm9zhK+Y5NYqyMmla9@6c48a","bcu/HTjhRI55cYnL+N1TQi@6c48a","eb+wOGIntIC5KlMkuiX3o5","3eLWJyUWtLdYzaeEmeXTYD@6c48a","421k6XZb5GfJk14PMQu8SN@6c48a","4fb+pVmKJClot4Tj4J3u/q@6c48a","52/tz+CilF35PtI5mETd/q@6c48a","628hXrhG1K45ckB9n7frqC@6c48a","db1VZ1Jv5GC6KbedLouKSI@6c48a","68vp570UVEk4QAuynkiDa9@6c48a","90DMTYrG1JV67KYZ7ntcbP@6c48a","b30FAheVJJyaGN0lwnT4h2@f9941","4fb+pVmKJClot4Tj4J3u/q@f9941","0e9EdeRRtM6ox2aZ2rOEFy@f9941","82x06owYJPFp2NbYIpQM9y@f9941","77KxZ1iWBDOKeNIeOp/Gdh@f9941","97KNPrgUJP6J7bZJY2MR8j@f9941","6diwYuoIxKDbe/cXBgnvZf@a9195","6diwYuoIxKDbe/cXBgnvZf@ad07c","6eqkeQ6ANOaJCoimi0rQxn@6c48a","758zDZUcxIH4TjMfZgzCtI@6c48a","77KxZ1iWBDOKeNIeOp/Gdh@6c48a","79a36kUfROnq5chBmy+RKg@6c48a","82kq10kJtFGqyiXKO/Yuqt@b9beb","82kq10kJtFGqyiXKO/Yuqt@2a720","82x06owYJPFp2NbYIpQM9y@6c48a","83TlV5O6tME5etNGCuYEW4@44e39","83TlV5O6tME5etNGCuYEW4@2d246","5fcwlWZWZHHL/Y4qt+E1bg@6c48a","8c3ChjI0ZG3Yv++NcaGeEW@6c48a","93ipmDhV9Gwohb3lklqFb3@08c96","97KNPrgUJP6J7bZJY2MR8j@6c48a","97qn4R091DUIg6BF+i4553@6c48a","996bGPa5lD6Zf/l5vTkWdi@6c48a","9aMiLnPIFCjKA9cBL5lMwT@3bacc","9aMiLnPIFCjKA9cBL5lMwT@108e0","e7STcM8JxInIsp9UuwSYZa","d7zqlo9zFIYIOTh+lQyZzx","d5hSMFUFFCML7/vBSl5znD@f9941","20rAGr3ilCJKmIiyQvTmDT@403ef","88f05/1ThE8LV9Ux9xJ+4O@f9941","26fECbKzpCiZ9wVHDFknBY@99e73","531+xyRlVA/ZRrE/fvvml5@f9941","f6LxBSlV1E46/H8YV1cq/s@dc0c5","99zwAHpS1BzJE3AoED+w/l@f9941","d7HqNEy+RCQoZfkpav099t@47aab","4aqJCjCmpMm78uc437Ou89","bbcp3T8U5ETJXhag7/x+b/","32bGz/eS9PtKckhTQNG9xB","c0ZqnqhxVHH6Zu98sr8DTc","2feDrwPAlFOYk892llvzEw","ccdpNjPgNLkpL6cjAs+wvk","1bEm4VpJ5LPpfHUiJitU88","6diwYuoIxKDbe/cXBgnvZf@64fde","83TlV5O6tME5etNGCuYEW4@b8021","9aMiLnPIFCjKA9cBL5lMwT@3726e","f7ZPec7nBCyKUjsIOl410P@b73ce","82kq10kJtFGqyiXKO/Yuqt@ceda0","2bjl4+i0FKV74GTRwP8oTj@f9941","8c3ChjI0ZG3Yv++NcaGeEW@f9941","758zDZUcxIH4TjMfZgzCtI@f9941","faTFenFmZGHaa3sHUK42jY@f9941","e0Itv+Q35Oea0kWKRJEH1E@f9941","f0bTkK7qxH0r6/js1FWJTT@f9941","97qn4R091DUIg6BF+i4553@f9941","c9skhhtSlFZIS7MiEswaMM@f9941","07khs5FqFEFKM7JRJRFClk@f9941","5bvb6o375PZbE0d6SFGUDg@f9941","abfOluwthHroHhFjzEBBct@f9941","caSF5BHl9Nb6ElMb6H7RPa","e3kV3TCN9KT4U84Qts7XHw","52/tz+CilF35PtI5mETd/q@f9941","1bqFzw54xINKBrUPa8g92g@f9941","6eqkeQ6ANOaJCoimi0rQxn@f9941","f69aMx9MtGDaGZgOOIllKz@f9941","f2ZFf9uUhOo5Hiuwu3CDAh@f9941","abttIsB0lFMrLFpPPV9/v/","ffuIqPr2JI9I8dPLYGRDpD@f9941","falhHAbFtA/JKZjz7AhfWW@f9941","6c7ELhiF1Iq7SvYnly9jRR","b2Wu9Px6FBu6C30kbePqQT@f9941","79a36kUfROnq5chBmy+RKg@f9941","ecKNz1SIFMBoyEiJGSohqj@f9941","f9uod9Z7JE3puCZTsYtdDF@f9941","996bGPa5lD6Zf/l5vTkWdi@f9941","c5Uqq1hSpNRowhAylcOWam@f9941","b5YblIktNKea4sOMcSUKgG","e7Mr/w9rlBU7uj+P07wnKv","12Y9dMgWdJKJGmTiZyQR9H@a804a","beAnsENW5OkoXB49fAQJ65@64d23","3bXTV7mMRDLLOuJ0fGVXaI","68vp570UVEk4QAuynkiDa9@f9941","afxHkx8GZGsJC+n+YfITQo@f9941","b2Wu9Px6FBu6C30kbePqQT@6c48a","b30FAheVJJyaGN0lwnT4h2@6c48a","6cFY14oD1IVKpml7uMAWBi","12Y9dMgWdJKJGmTiZyQR9H@8abdc","bdWROqegxPkK/dhyJHhgEW@6c48a","bd9QNfkDdBDIfqJyt+sEC+@08c96","beAnsENW5OkoXB49fAQJ65@7d6ab","beAnsENW5OkoXB49fAQJ65@5c108","beAnsENW5OkoXB49fAQJ65@bf593","c5Uqq1hSpNRowhAylcOWam@6c48a","c9skhhtSlFZIS7MiEswaMM@6c48a","d9V2rPDplMzY4zqLMonTr9@6c48a","da0j12OfxJk4cqgN/mARar@08c96","e0Itv+Q35Oea0kWKRJEH1E@6c48a","ecKNz1SIFMBoyEiJGSohqj@6c48a","f0bTkK7qxH0r6/js1FWJTT@6c48a","f1KiPEuSRDIqJgPZgkKPHo@6c48a","f2ZFf9uUhOo5Hiuwu3CDAh@6c48a","f69aMx9MtGDaGZgOOIllKz@6c48a","f7ZPec7nBCyKUjsIOl410P@2a589","f7ZPec7nBCyKUjsIOl410P@92081","f9uod9Z7JE3puCZTsYtdDF@6c48a","falhHAbFtA/JKZjz7AhfWW@6c48a","ffuIqPr2JI9I8dPLYGRDpD@6c48a"],["node","targetInfo","_spriteFrame","root","_textureSource","value","_mesh","asset","data","_effectAsset","mainTexture","_font","_parent","_normalSprite","_target","characterMaterial","_defaultClip","target","frame","material","mesh","_hoverSprite","_pressedSprite","_disabledSprite","_userDefinedFont","_barSprite","powerwProgress","nameLabel","noiseTexture","envTexture","prefabRootNode","bannr","_cameraComponent","soundNode","initialLayer","RZslider","RXslider","RYslider","Xslider","Zslider","Yslider","cameraDebug","gameScore","gameTimer","SquarelPatform","StarPlatform","InfinePlatform","CircularPlatform","TrianglePlatform","playerCamera","directionalLight","scene","_scrollView","player","bot","gummyBear","PoisionSize","PoisionSpeed","GainSpeed","Sheild","characterHud","goldenTrophy","normalTrophy","banner","soundOff","soundOn","SheildImg","GainSpeedImg","PoisionSpeedImg","pedestal","_envmap"],["cc.SpriteFrame",["cc.Node",["_name","_layer","_active","_id","_objFlags","_components","_parent","_lpos","_children","_prefab","_lscale","_lrot","_euler","__editorExtras__"],-2,9,1,5,2,4,5,5,5,11],["cc.Widget",["_alignFlags","_isAbsTop","_isAbsLeft","_isAbsRight","_isAbsBottom","_left","_originalWidth","_bottom","_right","_originalHeight","_top","_verticalCenter","_isAbsVerticalCenter","_alignMode","_isAbsHorizontalCenter","node","_target","__prefab"],-12,1,1,4],["cc.Label",["_actualFontSize","_string","_fontSize","_lineHeight","_isSystemFontUsed","_cacheMode","_isBold","_isUnderline","_horizontalAlign","_overflow","_enableWrapText","node","__prefab","_font","_color"],-8,1,4,6,5],["cc.Sprite",["_sizeMode","_type","_fillType","_fillStart","_fillRange","node","_spriteFrame","__prefab","_color","_fillCenter"],-2,1,6,4,5,5],["cc.Node",["_name","_layer","_objFlags","__editorExtras__","_parent","_components","_lpos","_prefab","_lscale","_children"],-1,1,12,5,4,5,2],"cc.ImageAsset",["cc.Node",["_name","_id","_objFlags","__editorExtras__","_layer","_components","_prefab","_lpos","_lscale","_children","_parent"],-2,9,4,5,5,12,4],["cc.RigidBody",["_mass","_group","_angularDamping","_type","node","__prefab","_angularFactor"],-1,1,4,5],["cc.UITransform",["node","_contentSize","__prefab","_anchorPoint"],3,1,5,4,5],["cc.Animation",["playOnLoad","node","_clips","_defaultClip","__prefab"],2,1,3,6,4],["cc.PrefabInfo",["fileId","targetOverrides","root","asset","instance"],1,1,6,4],["cc.PrefabInstance",["fileId","propertyOverrides","prefabRootNode","mountedChildren","mountedComponents"],2,9,1,9,9],["cc.MeshRenderer",["_name","node","_materials","lightmapSettings","_mesh","__prefab"],2,1,3,4,6,4],["cc.Mask",["_type","_alphaThreshold","node","_spriteFrame"],1,1,6],["cc.Material",["_states","_defines","_name","_techIdx","_props"],-1,12],["cc.Button",["_transition","node","_normalSprite","clickEvents","_normalColor","_target","_hoverSprite","_pressedSprite","_disabledSprite"],2,1,6,9,5,1,6,6,6],["cc.Camera",["_visibility","_name","_fov","_clearFlags","_orthoHeight","_projection","_priority","_far","_near","node","_color"],-6,1,5],["cc.Prefab",["_name"],2],["cc.Node",["_objFlags","_parent","__editorExtras__","_name","_prefab","_children","_components","_lpos","_lscale"],-1,4,9,9,5,5],["cc.Scene",["_name","_children","_globals","_prefab"],2,2,4,4],["cc.AmbientInfo",["_skyIllum","_skyColor","_groundAlbedo"],2,5,5],["cc.ShadowsInfo",["_type","_enabled","_fixedArea","_pcf","_bias","_normalBias","_near","_far","_orthoSize","_saturation","_shadowColor","_size"],-7,5,5],["cc.SkyboxInfo",["_enabled","_envmap"],2,6],["cc.FogInfo",["_fogStart","_fogEnd","_fogAtten","_fogColor"],0,5],["cc.PrefabInfo",["fileId","root","asset","targetOverrides"],2,1,1,9],["cc.PrefabInstance",["fileId","prefabRootNode","propertyOverrides","mountedComponents"],1,9,9],["cc.ProgressBar",["_mode","_progress","_reverse","node","_barSprite","__prefab"],0,1,1,4],["cc.RichText",["_lineHeight","_string","_fontSize","_isSystemFontUsed","node","_font","_userDefinedFont"],-1,1,6,6],["cc.BoxCollider",["node","__prefab","_center","_size"],3,1,4,5,5],"cc.TextureCube",["cc.Node",["_name","_parent","_components","_lpos"],2,1,2,5],["cc.SceneGlobals",["ambient","shadows","_skybox","fog"],3,4,4,4,4],["cc.CompPrefabInfo",["fileId"],2],["2be5eRvXYVF0LgrrJn5x1sj",["node","__prefab"],3,1,4],["cc.CapsuleCollider",["_radius","_cylinderHeight","node","__prefab","_center"],1,1,4,5],["cc.TargetInfo",["localID"],2],["cc.MountedChildrenInfo",["targetInfo","nodes"],3,4,2],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,1],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,8],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,4],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,8],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,6],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,1],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,6],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,4],["cc.ModelLightmapSettings",[],3],["cc.Mesh",["_native","_hash","_struct"],1,11],["cc.RenderRoot2D",["node","__prefab"],3,1,4],["8d0a7RNVcpBfqZHaK6QYt4a",["node","__prefab","nameLabel","powerwProgress"],3,1,4,1,1],["cc.SkeletalAnimation.Socket",["path"],2],["a3addpkf1lOCoVufXlKk5xR",["node","__prefab"],3,1,4],["cc.CylinderCollider",["_isTrigger","_radius","_height","node","__prefab","_center"],0,1,4,5],["cc.TargetOverrideInfo",["propertyPath","source","sourceInfo","target","targetInfo"],2,1,4,1,4],["882e8b6yNlDmpl3SZwb5Qhi",["node","panel","trophy","bannr"],3,1,3,3,1],["cc.SceneAsset",["_name"],2],["cc.Canvas",["node","_cameraComponent"],3,1,1],["62ee6KEwbpJNKAJo5TmXRgo",["node","touchEventCallBack","sliderEventCallBack","gameStartEventCallBack","gameInitialiseEventCallBack","cameraDebug","Yslider","Zslider","Xslider","RYslider","RXslider","RZslider","initialLayer","soundNode","soundOff","soundOn"],3,1,9,9,9,9,1,1,1,1,1,1,1,1,1,6,6],["cc.ClickEvent",["_componentId","handler","target"],1,1],["607a6e7tMFM2o0KKgjUTxNF",["node","goldenTrophy","normalTrophy","banner"],3,1,6,6,6],["48d51HOjkBIObFppQAdshF3",["node","botPrefabList","playerPrefabList","foodPrefabList","bagAcceesories","headPhoneAcceesories","gogglesAcceesories","targetAcceesories","directionalLight","playerCamera","TrianglePlatform","CircularPlatform","InfinePlatform","StarPlatform","SquarelPatform","gameTimer","gameScore","gameOver","powerUpProgress","player","bot","gummyBear","PoisionSize","PoisionSpeed","GainSpeed","Sheild","characterHud","SheildImg","GainSpeedImg","PoisionSpeedImg","pedestal"],3,1,9,9,3,9,9,9,9,1,1,1,1,1,1,1,1,1,1,1,6,6,6,6,6,6,6,6,6,6,6,6],["CharacterGame",["characterMaterial"],3,6],["CharacterItem",["frame","material","mesh"],3,6,6,6],["cc.Layout",["_layoutType","_paddingTop","_paddingBottom","_spacingY","_affectedByScale","node"],-2,1],["cc.DirectionalLight",["node","_staticSettings"],3,1,4],["cc.StaticLightSettings",[],3],["cc.MountedComponentsInfo",["targetInfo","components"],3,4,9],["cc.MeshCollider",["_mesh"],3,6],["cc.Slider",["_progress","node","_handle"],2,1,1],["cc.ScrollBar",["_direction","node","_handle"],2,1,1],["cc.ScrollView",["bounceDuration","brake","horizontal","node","_content","_verticalScrollBar"],0,1,1,1],["77e533EezxA/6Pf2Q54j4sW",["node","__prefab"],3,1,4],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[36,0,2],[33,0,2],[9,0,1,1],[25,0,1,2,2],[39,0,1,2,2],[41,0,1,2,2],[40,0,1,2,3],[46,1],[1,0,1,6,5,7,3],[38,0,1,2,3],[13,1,5,2,3,4,1],[9,0,1,3,1],[4,5,6,1],[11,0,2,4,3,2],[47,0,1,2,3],[42,0,1,2,2],[43,0,1,2,2],[9,0,2,1,1],[4,1,0,5,6,3],[18,0,2],[18,1],[1,0,8,9,2],[5,2,3,4,7,3],[15,2,0,1,4,4],[1,0,6,5,9,11,12,2],[44,0,1,2,2],[58,0,1,2,3],[11,0,2,3,2],[35,0,1,2,3,4,3],[5,0,1,4,9,5,6,3],[5,0,1,4,5,6,3],[1,0,1,6,9,7,11,10,12,3],[1,0,6,5,9,7,11,12,2],[34,0,1,1],[12,0,2,3,1,2],[37,0,1,1],[13,0,1,2,3,4,2],[4,0,5,6,2],[4,0,5,2],[3,1,0,2,6,7,11,14,6],[3,1,8,0,2,11,14,5],[16,1,4,5,2,1],[61,0,1],[68,0,1,2,2],[1,0,1,6,5,7,10,3],[8,1,0,4,5,3],[8,3,2],[66,0,1,1],[67,0,1],[7,0,9,5,6,7,8,2],[1,0,1,6,5,9,7,3],[1,0,1,6,8,5,7,10,3],[1,0,1,6,8,5,3],[1,0,2,1,6,5,10,4],[1,0,3,6,5,7,11,10,12,3],[26,0,1,3,2,3],[62,0,1,2,1],[1,0,8,5,9,7,10,2],[1,0,6,8,5,9,2],[1,0,6,8,5,7,2],[13,0,1,5,2,3,4,2],[3,1,0,2,3,4,11,14,13,6],[15,0,1,4,3],[2,0,5,2,15,17,16,4],[2,0,7,4,15,16,4],[16,0,1,3,4,5,2,6,7,8,2],[1,4,6,9,13,2],[1,0,2,6,5,9,7,10,3],[1,0,2,6,8,5,3],[1,0,2,1,6,8,5,7,4],[1,0,1,6,8,5,7,3],[1,0,3,6,5,7,10,3],[5,0,1,4,5,6,8,3],[32,0,1,2,3,1],[12,0,2,1,2],[9,0,2,1,3,1],[9,0,1],[10,1,2,3,1],[14,0,1,2,3,3],[4,1,0,5,3],[15,3,0,1,4,4],[52,0,1,2,3,4,5,4],[53,0,1,2,3,4,2],[2,0,1,15,16,3],[2,0,8,7,3,4,15,16,6],[16,1,3,2,1],[28,0,1,2,3,4,5],[7,0,1,10,9,5,6,7,8,3],[7,2,3,6,3],[7,0,4,5,7,3],[7,0,5,6,7,8,2],[1,0,2,6,8,5,9,7,3],[1,0,6,5,9,2],[1,0,2,6,5,9,7,3],[1,0,1,8,5,9,7,3],[1,0,1,3,8,5,7,4],[1,0,1,8,5,7,3],[1,0,6,8,5,2],[1,0,1,8,5,10,3],[1,0,3,6,5,3],[1,0,3,6,5,7,11,12,3],[1,0,3,6,8,3],[1,0,1,6,5,3],[1,0,4,1,6,5,4],[1,0,1,6,5,7,11,12,3],[1,0,2,3,6,5,7,11,12,4],[1,0,6,5,9,11,10,12,2],[19,0,1,2,4,4],[19,3,5,6,4,7,8,2],[5,0,4,5,7,6,2],[5,0,4,5,7,6,8,2],[5,0,1,4,9,5,6,8,3],[5,0,1,4,5,3],[31,0,1,2,3,2],[20,0,1,2,2],[20,0,1,3,2,2],[21,1],[21,0,1,2,2],[22,1],[22,0,1,2,3,4,5,6,7,8,9,10,11,11],[23,1],[23,0,1,2],[24,1],[24,0,1,2,3,4],[11,1,2],[25,0,1,2,3,2],[8,0,4,5,2],[8,1,2,4,5,6,3],[8,1,0,2,4,5,6,4],[12,0,4,1,2],[26,0,1,2,3],[45,0,1,2,2],[48,0,1,1],[49,0,1,2,3,1],[10,1,4,2,3,1],[10,0,1,2,3,2],[10,1,2,1],[27,0,1,2,3,5,4,4],[27,0,1,2,3,4,4],[14,0,1,2,3],[14,2,1],[4,1,0,5,7,8,6,3],[4,1,2,0,3,4,5,7,8,9,6],[4,5,7,6,1],[4,5,7,1],[4,0,5,8,2],[4,1,2,0,3,4,5,9,6],[3,1,0,5,11,12,4],[3,0,2,3,5,11,12,5],[3,0,2,3,4,5,11,12,6],[3,1,0,2,3,4,11,12,13,6],[3,1,0,2,3,4,11,12,14,13,6],[3,1,0,3,4,11,12,14,13,5],[3,1,0,2,3,11,5],[3,1,0,2,3,9,10,4,11,13,8],[3,1,0,3,4,11,14,13,5],[50,0,2],[51,0,1,1],[54,0,1,2,3,1],[2,0,5,11,2,15,17,16,5],[2,0,15,2],[2,0,2,3,1,4,6,9,15,16,8],[2,0,10,3,1,6,15,6],[2,0,6,9,15,16,4],[2,0,8,7,3,4,15,6],[2,0,10,7,1,4,9,15,7],[2,0,2,3,1,6,15,16,6],[2,0,5,8,7,2,3,4,15,16,8],[2,0,5,8,7,2,3,4,6,15,16,9],[2,0,9,13,15,4],[2,0,7,2,3,1,4,6,9,15,9],[2,0,5,8,3,1,4,6,9,15,16,9],[2,0,8,7,3,4,12,15,16,7],[2,0,5,8,11,14,12,6,15,16,8],[2,0,10,1,15,16,4],[2,0,5,10,2,1,15,6],[2,0,5,10,11,2,1,12,15,8],[2,0,5,10,2,1,15,16,6],[55,0,2],[56,0,1,1],[57,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1],[59,0,1,2,3,1],[60,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,1],[63,0,1,2,3,4,5,6],[64,0,1,1],[65,1],[28,0,1,2,3,4,5,6,5],[29,0,1],[29,0,1,2,3,1],[17,1,2,3,0,9,10,5],[17,5,6,4,7,3,0,9,10,7],[17,1,2,4,8,0,9,10,6],[69,0,1,2,2],[70,0,1,2,3,4,5,4],[71,0,1,1],[72,0,1,2,4]],[[[[19,"PoisionSize"],[87,"PoisionSize","d27dgI4fNOV4Fw4lznVsDL",[114,"New Node",[-8],[73,[116],[118],[120],[122]]],[[-5,[31,"foodNode",8388608,-7,[27,"69PvosUUxK/IP6afBlkc9K",-6,9],[1,0.667,5.733,1],[3,0,0.7071067811865475,0,0.7071067811865476],[1,20,20,20],[1,0,90,0]]],1,4],[[126,0.0001,-2,[1,"afhWzn74lLnoQrBm8+3vnx"]],[33,-3,[1,"acEYzk36FHtK9IU141o3JI"]],[28,15,15,-4,[1,"b1p0PXi4lD6Joew/Jqh1dc"],[1,0,10,0]]],[27,"7fJOPvAvBaN4HLZl7x/4CB",-1,10],[1,-11,0,-5],[1,0.06,0.06,0.06]],[49,"PoisionSize",[[-13,[31,"foodNode",8388608,-15,[3,"69PvosUUxK/IP6afBlkc9K",-14,0],[1,0.667,0,1],[3,0,0.7071067811865475,0,0.7071067811865476],[1,20,20,20],[1,0,90,0]]],1,4],[[45,4,0.0001,-10,[1,"afhWzn74lLnoQrBm8+3vnx"]],[33,-11,[1,"acEYzk36FHtK9IU141o3JI"]],[28,15,15,-12,[1,"b1p0PXi4lD6Joew/Jqh1dc"],[1,0,15,0]]],[3,"7fJOPvAvBaN4HLZl7x/4CB",-9,0],[1,-11,0,-5],[1,0.1,0.1,0.1]],[0,["6bH8t7wehYMrRlpqW5xKeO"]],[107,0,null,null,[13,"c8+zD849FTGYXtiYPrV36q",-25,[34,"542R/XgCBAop3R0dUNV0Ot",1,[[35,[0,["c8+zD849FTGYXtiYPrV36q"]],[-24]]],[[9,"food_mushroom_01",["_name"],-16],[4,["_lpos"],-17,[1,0,13.75,0]],[4,["_lrot"],-18,[3,0,0,0,1]],[4,["_euler"],-19,[1,0,0,0]],[4,["_lscale"],-20,[1,10,10,10]],[4,["_lpos"],-21,[1,1,0.01,0]],[4,["_lrot"],-22,[3,-0.5792279653395692,-0.4055797876726388,-0.5792279653395691,0.40557978767263886]],[4,["_euler"],-23,[1,-110,-90,0]]]],4]],[0,["c8+zD849FTGYXtiYPrV36q"]],[66,0,2,[13,"6bH8t7wehYMrRlpqW5xKeO",-30,[34,"90LzH8oo5BRbqM22tfN/8C",2,[[35,[0,["6bH8t7wehYMrRlpqW5xKeO"]],[-29]]],[[9,"food_skull_01",["_name"],3],[4,["_lpos"],3,[1,0,9,1.4210854715202004e-14]],[4,["_lrot"],3,[3,0,0,0,1]],[4,["_euler"],3,[1,0,0,0]],[4,["_lrot"],-26,[3,-0.5792279653395692,0.4055797876726388,0.5792279653395691,0.40557978767263886]],[4,["_euler"],-27,[1,-110,90,0]],[4,["_lpos"],-28,[1,1,0.01,0]],[4,["_lscale"],3,[1,10,10,10]]]],0],[{},"mountedRoot",1,4]],[66,0,1,[13,"6bH8t7wehYMrRlpqW5xKeO",-39,[34,"90LzH8oo5BRbqM22tfN/8C",1,[[35,[0,["6bH8t7wehYMrRlpqW5xKeO"]],[-38]]],[[9,"food_skull_01",["_name"],-31],[4,["_lpos"],-32,[1,0,13.749999999999996,1.4210854715202004e-14]],[4,["_lrot"],-33,[3,0,0,0,1]],[4,["_euler"],-34,[1,0,0,0]],[4,["_lrot"],-35,[3,-0.5792279653395692,0.4055797876726388,0.5792279653395691,0.40557978767263886]],[4,["_euler"],-36,[1,-110,90,0]],[4,["_lpos"],-37,[1,1,0.01,0]]]],5],[{},"mountedRoot",1,4]],[0,["6bH8t7wehYMrRlpqW5xKeO"]],[0,["46twUe4M1aRarlrApFO9pT"]],[0,["46twUe4M1aRarlrApFO9pT"]],[0,["09FQzaei5RkrVKCZkqXHx5"]],[32,"food_skull_02",6,[[10,-40,[1,"abgEbdCSpFWau0bvRywTG5"],[1],[7],2]],[27,"7eKGAIBR9JZrUleUdO0Kai",6,3],[1,-1,-0.015,0],[3,-0.5792279653395692,-0.4055797876726388,-0.5792279653395691,0.40557978767263886],[1,-110,-90,0]],[32,"food_skull_02",7,[[10,-41,[1,"abgEbdCSpFWau0bvRywTG5"],[6],[7],7]],[27,"7eKGAIBR9JZrUleUdO0Kai",7,8],[1,-1,-0.015,0],[3,-0.5792279653395692,-0.4055797876726388,-0.5792279653395691,0.40557978767263886],[1,-110,-90,0]],[32,"food_mushroom_02",4,[[10,-42,[1,"7bLD8rK0JMl7f6yPDqGz3h"],[11],[7],12]],[27,"36ZqEtFapCZbfobfvzERUO",4,13],[1,-1,-0.015,0],[3,-0.7462478063070415,0.056405662432178,0.33782363422946166,0.5707957646860341],[1,-111.021,36.608,17.546]]],0,[0,3,1,0,0,1,0,0,1,0,0,1,0,-1,7,0,3,1,0,12,1,0,-1,1,0,3,2,0,0,2,0,0,2,0,0,2,0,-1,6,0,3,2,0,12,2,0,1,5,0,1,5,0,1,5,0,1,5,0,1,5,0,1,11,0,1,11,0,1,11,0,-1,14,0,3,4,0,1,9,0,1,9,0,1,9,0,-1,12,0,3,6,0,1,8,0,1,8,0,1,8,0,1,8,0,1,10,0,1,10,0,1,10,0,-1,13,0,3,7,0,0,12,0,0,13,0,0,14,0,8,2,42],[0,0,0,0,0,0,0,0,0,0,0,0,0,0],[7,-1,6,7,7,7,-1,6,7,7,7,-1,6,7],[6,9,10,6,20,6,9,10,6,11,11,56,57,20]],[[{"name":"3","rect":{"x":0,"y":0,"width":883,"height":104},"offset":{"x":0,"y":0},"originalSize":{"width":883,"height":104},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[58]],[[[14,".bin",1806736691,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":72632,"length":12288,"count":6144,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":72632,"count":1297,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-0.09999999403953552,-0.5],"maxPosition",8,[1,0.5,0.09999999403953552,0.5]]],-1],0,0,[],[],[]],[[[14,".bin",3873752485,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":14560,"length":768,"count":384,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":14560,"count":260,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-1,-0.5],"maxPosition",8,[1,0.5,1,0.5]]],-1],0,0,[],[],[]],[[[14,".bin",4094896171,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1344,"length":72,"count":36,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":1344,"count":24,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-0.5,-0.5],"maxPosition",8,[1,0.5,0.5,0.5]]],-1],0,0,[],[],[]],[[{"name":"skinbtnOC","rect":{"x":0,"y":0,"width":561,"height":191},"offset":{"x":0,"y":0},"originalSize":{"width":561,"height":191},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[59]],[[[19,"characterHud"],[57,"characterHud",[-8,-9,-10],[[17,-2,[1,"a4+vibwdtCDrwy/CVtdJhU"],[5,226.79,60]],[132,-3,[1,"0aPUXzHilPua/KgxHlapPV"]],[133,-6,[1,"60PCFleA1B2IcrOYYVJZ80"],-5,-4],[134,-7,[1,"44MdiTm4pDI55o/HKphcoS"],[1],2]],[3,"1aHlA5BnNDZL4RSDXC4EuK",-1,0],[1,0,3.5,0],[1,0.01,0.01,0.01]],[91,"powerup",false,1,[-12,-13],[[17,-11,[1,"d7AwWS/ilCV6i9iC2l3bQW"],[5,126,126]]],[3,"d9FRNlrhlEV4n6WNKC77yx",1,0],[1,0,114,0]],[58,"progress",2,[-18],[[17,-14,[1,"95+QLJYMlNF7qC0F9Kg2ox"],[5,126,126]],[137,2,1,true,-16,[1,"796sEhN5JBGKgKKq0niicw"],-15],[139,1,0.3,-17]],[3,"92CiW5/XtGlZBx4rlGAdbW",1,0]],[58,"counterBg",2,[-21],[[17,-19,[1,"9aZZN8C+JExbxc5ZIhVNM4"],[5,80,80]],[141,1,0,-20,[1,"57+wbwFV9Hj4uUcZQT1VXE"],[4,4278190080],0]],[3,"a9i66HPoJFYqctlWXp+3vD",1,0]],[109,"name",1,[[[17,-22,[1,"4fblyNZClNwpQb2ZZUKU0z"],[5,124.44,60]],-23],4,1],[3,"27z0BDq6JEyKy6TiZdKU6t",1,0],[1,0,3.5,0]],[110,"maskSprite",3,[[[17,-24,[1,"86x0rhPGxKkYl5WFLjKlKB"],[5,63,75.6]],-25],4,1],[3,"92wNtRlw9AuqISYZonqfNm",1,0],[1,1.2,0,0],[1,2,2,1]],[92,"counter",4,[[17,-26,[1,"9fxnRd92tHLaio8/h8uI2l"],[5,22.25,40]],[147,"0",40,2,-27,[1,"514R/SarxIMLZOyVYQvIiW"]]],[3,"db5EA9I7tL6qfWnzS/Dkqk",1,0]],[93,"score",false,1,[[17,-28,[1,"03ACL6q1RO2rvvYftGtTyK"],[5,126.77,60]],[148,60,60,60,2,-29,[1,"994F9imTxKnrQDL3yHB6BL"]]],[3,"41H+G3GypGVKETPTcc616y",1,0],[1,0,3.5,0]],[149,60,60,60,false,2,5,[1,"fbdFibGulLTqCUh6UUS/Hh"]],[142,3,2,0,1,-1,6,[1,"f7dgL2mdBEoqW+bCU5LJu5"],[4,4280942336],[0,0.5,0.5]]],0,[0,3,1,0,0,1,0,0,1,0,26,2,0,27,9,0,0,1,0,0,1,0,-1,5,0,-2,2,0,-3,8,0,0,2,0,-1,3,0,-2,4,0,0,3,0,25,10,0,0,3,0,0,3,0,-1,6,0,0,4,0,0,4,0,-1,7,0,0,5,0,-2,9,0,0,6,0,-2,10,0,0,7,0,0,7,0,0,8,0,0,8,0,8,1,29],[0,0,0,9,10],[2,-1,16,11,2],[12,21,21,2,12]],[[{"name":"progress","rect":{"x":0,"y":0,"width":515,"height":508},"offset":{"x":-0.5,"y":0},"originalSize":{"width":516,"height":508},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[60]],[[[14,".bin",2404708901,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":11712,"length":1296,"count":324,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":11712,"count":244,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.3841770887374878,-0.06552372872829437,-0.5702511668205261],"maxPosition",8,[1,0.38417720794677734,0.06552373617887497,0.5702511668205261]]],-1],0,0,[],[],[]],[[[20],[21,"food_lightning_01",[-2],[3,"d0EpRplH9fFpRIADPk0YQ1",-1,0]],[24,"food_lightning_01",1,[[10,-3,[1,"126Ft8iiVXtq0eD/Cqq/P7"],[0],[7],1]],[3,"7bHAAq0bJf567Q9EpHfI5p",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,3,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[22,23]],[[[23,"Food and props",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[10,9],[61,0]],[[{"name":"default_scrollbar_bg","rect":{"x":0,"y":0,"width":30,"height":15},"offset":{"x":0,"y":0},"originalSize":{"width":30,"height":15},"rotated":false,"capInsets":[10,4,10,4],"packable":true}],[0],0,[0],[4],[62]],[[{"name":"Last man standing wins","rect":{"x":0,"y":0,"width":665,"height":54},"offset":{"x":0,"y":0},"originalSize":{"width":665,"height":54},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[63]],[[[19,"GainSpeed"],[49,"GainSpeed",[[-5,[31,"foodNode",8388608,-7,[3,"71NezUM1FPdZw7NnEEYLJd",-6,0],[1,0.667,0,1],[3,0,0.7071067811865475,0,0.7071067811865476],[1,20,20,20],[1,0,90,0]]],1,4],[[45,4,0.0001,-2,[1,"afhWzn74lLnoQrBm8+3vnx"]],[33,-3,[1,"acEYzk36FHtK9IU141o3JI"]],[28,15,15,-4,[1,"27wjRGYsdG679/p1yOTr+F"],[1,0,15,0]]],[3,"7fJOPvAvBaN4HLZl7x/4CB",-1,0],[1,-11,0,-5],[1,0.1,0.1,0.1]],[22,0,null,1,[13,"d0EpRplH9fFpRIADPk0YQ1",-9,[34,"e4OzQikqlAYYmggX9dUIO/",1,[[35,[0,["d0EpRplH9fFpRIADPk0YQ1"]],[-8]]],[[6,"food_lightning_01",["_name"],[0,["d0EpRplH9fFpRIADPk0YQ1"]]],[5,["_lpos"],[0,["d0EpRplH9fFpRIADPk0YQ1"]],[1,0,4,0]],[5,["_lrot"],[0,["d0EpRplH9fFpRIADPk0YQ1"]],[3,0,0,0,1]],[5,["_euler"],[0,["d0EpRplH9fFpRIADPk0YQ1"]],[1,0,0,0]],[5,["_lscale"],[0,["d0EpRplH9fFpRIADPk0YQ1"]],[1,10,10,10]],[5,["_lrot"],[0,["7bHAAq0bJf567Q9EpHfI5p"]],[3,0.6830127018922194,-0.1830127018922193,0.6830127018922193,0.18301270189221933]],[5,["_euler"],[0,["7bHAAq0bJf567Q9EpHfI5p"]],[1,150,-90,0]],[5,["_lpos"],[0,["7bHAAq0bJf567Q9EpHfI5p"]],[1,0.753,0.417,0]]]],0]],[32,"food_lightning_02",2,[[10,-10,[1,"84z8OI3/1KQpM6pON5hWW+"],[1],[7],2]],[27,"e1r9oHq81CdpJwqkO1T3xs",2,3],[1,-0.753,0.417,0],[3,0.6830127018922194,0.1830127018922193,-0.6830127018922193,0.18301270189221933],[1,150,90,0]]],0,[0,3,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,3,1,0,12,1,0,-1,3,0,3,2,0,0,3,0,8,1,10],[0,0,0,0],[7,-1,6,7],[24,22,23,24]],[[[19,"GummyBear"],[108,"GummyBear",[[31,"foodNode",8388608,-6,[3,"2bUrP05I1NJbT4+3O20SI6",-5,0],[1,0.667,0,1],[3,0,0.7071067811865475,0,0.7071067811865476],[1,20,20,20],[1,0,90,0]]],[[45,4,0.0001,-2,[1,"afhWzn74lLnoQrBm8+3vnx"]],[33,-3,[1,"acEYzk36FHtK9IU141o3JI"]],[28,15,15,-4,[1,"fbpqiW+8BBRKNaKQ1m4+U8"],[1,0,15,0]]],[3,"7fJOPvAvBaN4HLZl7x/4CB",-1,0],[1,-11,0,-5],[1,0.1,0.1,0.1]]],0,[0,3,1,0,0,1,0,0,1,0,0,1,0,3,1,0,12,1,0,8,1,6],[],[],[]],[[{"name":"progressBg","rect":{"x":1,"y":1,"width":224,"height":224},"offset":{"x":0.5,"y":-0.5},"originalSize":{"width":225,"height":225},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[64]],[[{"name":"4","rect":{"x":0,"y":0,"width":883,"height":104},"offset":{"x":0,"y":0},"originalSize":{"width":883,"height":104},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[65]],[[[62,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainColor",8,[4,4294959104],"rimColor",8,[4,4289483264],"noiseTexture",6,0,"envTexture",6,1]],11]]],0,0,[0,0,0],[28,29,9],[66,25,67]],[[{"name":"initialDragPopup","rect":{"x":0,"y":0,"width":952,"height":464},"offset":{"x":0,"y":0},"originalSize":{"width":952,"height":464},"rotated":false,"capInsets":[46,46,46,46],"packable":true}],[0],0,[0],[4],[68]],[[{"name":"Trophy","rect":{"x":0,"y":1,"width":259,"height":277},"offset":{"x":0,"y":-0.5},"originalSize":{"width":259,"height":278},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[69]],[[[19,"Player"],[88,0,null,[13,"59R3ZReSlZU7cMWe65LSQi",-32,[74,"92uqoTwkxFH5FhCi9gjv2+",-31,[[9,"Penguine_Anim",["_name"],-1],[4,["_lpos"],-2,[1,0,0,0]],[4,["_lrot"],-3,[3,0,0,0,1]],[4,["_euler"],-4,[1,0,0,0]],[4,["_lscale"],-5,[1,2,2,2]],[15,["_materials","0"],-6,1],[16,["_skinningRoot"],-8,-7],[15,["_materials","0"],-9,2],[16,["_skinningRoot"],-11,-10],[15,["_materials","0"],-12,3],[16,["_skinningRoot"],-14,-13],[15,["_materials","0"],-15,4],[16,["_skinningRoot"],-17,-16],[15,["_materials","0"],-18,5],[16,["_skinningRoot"],-20,-19],[6,false,["_active"],[0,["a4XnWWsFpa0q6OII23wIxY"]]],[15,["_materials","0"],-21,6],[16,["_skinningRoot"],-23,-22],[6,true,["_active"],[0,["80yrlWw7tX+qfj1eTKKFSr"]]],[25,["_materials","0"],[0,["c8Mf8OJd9SSopbw7I4dmAK"]],7],[25,["_materials","0"],[0,["52W5PEObtTbK2Gr8yJqCzT"]],8],[25,["_materials","0"],[0,["ac8i6xedBXE6SPaMdY2WcE"]],9],[6,false,["_active"],[0,["6dsK1yA0layY9a7cZcTtz+"]]],[25,["_materials","0"],[0,["819cNtzSlQ1awf6gO8ffno"]],10],[6,true,["_active"],[0,["b0x8EtlAhQk7RHG2eMCOf/"]]],[6,true,["_active"],[0,["46knerlmRVDpcwqpceH8RK"]]],[6,true,["_active"],[0,["8dvUL1vQ5XxoG8o26o+Fcq"]]],[9,false,["lightmapSettings","_bakeable"],-24],[9,true,["lightmapSettings","_castShadow"],-25],[9,false,["lightmapSettings","_receiveShadow"],-26],[9,0,["_shadowReceivingMode"],-27],[9,1,["_shadowCastingMode"],-28],[9,2,["_sockets","length"],-29],[131,["_sockets","2"],-30,[156,"Root_M/RootPart1_M/RootPart2_M/Spine1_M/Spine1Part1_M/Spine1Part2_M/Chest_M/Neck_M/NeckPart1_M/NeckPart2_M/Head_M"]]]],0]],[57,"Player",[1,-38],[[127,2,0,-34,[1,"59x7ieeltEa4rvb1W6kbV1"],[1,0,0,0]],[28,2,1.5,-35,[1,"643EqAHm1JLryaQlFTjfmI"],[1,0,2.8,0]],[157,-36,[1,"c2HIvNJpFEZZyJ0Aw1/ZjM"]],[81,true,2.3,5,-37,[1,"77FDg2fuhBI4rUwfePWNPi"],[1,0,3,-0.4]]],[125,"8auOi9DE1RmYUynG+RD2O9",-33,0,[[82,["_sockets","0","target"],1,[0,["12Z3qA5LlTuYfRfKQNlUdg"]],1,[0,["82bhDJZFFTWZjbeqVpS7C2"]]],[82,["_sockets","1","target"],1,[0,["12Z3qA5LlTuYfRfKQNlUdg"]],1,[0,["bdyUN4J0FTUpY69AAmjkUK"]]]]],[1,-14.7,0.28,-2.326],[1,0.5,0.5,0.5]],[0,["abcyXcjPtYq4Nmb/o/8s3M"]],[0,["59R3ZReSlZU7cMWe65LSQi"]],[0,["ceDhL0m+pZ0rGVulvjLeZL"]],[0,["cfdsdtnK5R6JLMeVwlEFfv"]],[0,["38uO2hvglS+q1AO1isog4B"]],[0,["3cbn2yQcVViL5L5h+em31f"]],[0,["eeimR7NmZccZ+rhZGcguNN"]],[0,["12Z3qA5LlTuYfRfKQNlUdg"]],[67,"floaty",false,2,[[60,"Torus<ModelComponent>",-39,[1,"82n7213mVLoJ99J9PLeDe/"],[11],[7],12]],[3,"a9TLyTLh1Hs68G4rkvM/3I",2,0],[1,0,2.242,0],[1,4.5,4.5,4.5]]],0,[0,1,4,0,1,4,0,1,4,0,1,4,0,1,4,0,1,3,0,5,1,0,1,3,0,1,5,0,5,1,0,1,5,0,1,6,0,5,1,0,1,6,0,1,7,0,5,1,0,1,7,0,1,8,0,5,1,0,1,8,0,1,9,0,5,1,0,1,9,0,1,3,0,1,3,0,1,3,0,1,3,0,1,3,0,1,10,0,1,10,0,30,2,0,3,1,0,3,2,0,0,2,0,0,2,0,0,2,0,0,2,0,-2,11,0,0,11,0,8,2,1,12,2,39],[0,0,0,0,0,0,0,0,0,0,0,0,0],[7,5,5,5,5,5,5,5,5,5,5,-1,6],[26,3,3,3,3,27,13,14,15,28,16,17,29]],[[{"name":"2","rect":{"x":0,"y":0,"width":883,"height":104},"offset":{"x":0,"y":0},"originalSize":{"width":883,"height":104},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[70]],[[{"name":"circle 1","rect":{"x":0,"y":0,"width":322,"height":316},"offset":{"x":0,"y":0},"originalSize":{"width":322,"height":316},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[71]],[[{"name":"sound on","rect":{"x":0,"y":0,"width":106,"height":114},"offset":{"x":0,"y":0},"originalSize":{"width":106,"height":114},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[72]],[[[80,"1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":1,"metallic":0.645},"tilingOffset",8,[2,20,20,0,0],"mainColor",8,[4,1694498815],"emissive",8,[4,4281079040],"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[10,9],[73,0]],[[{"name":"circle 2","rect":{"x":0,"y":0,"width":325,"height":334},"offset":{"x":0,"y":0},"originalSize":{"width":325,"height":334},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[74]],[[[62,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true},{},{},{}],[[[{"roughness":0.762,"metallic":0.799,"SpecularIntensity":0.903},"tilingOffset",8,[2,1,6,4,4],"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[10,9],[75,0]],[[[19,"banner"],[94,"banner",33554432,[-6],[[17,-2,[1,"e17D86w65HXZNyxEPY/TC5"],[5,883,104]],[143,-3,[1,"99LbJyFgdAcJ/lDJBBrkm4"],3],[158,-5,[4,5,6,7],[8,9,10],-4]],[3,"1fhpZzUzFPgYg74HaYB6Nw",-1,0],[1,0,-62,0]],[58,"bannr",1,[-8,-9,-10,-11],[[17,-7,[1,"1dgULEWeNBE60JuIUdoW1E"],[5,883,104]]],[3,"0cN6AfjoBCTKHqZw4jlshF",1,0]],[50,"medal",33554432,2,[[17,-12,[1,"51/UlYZtJIhbtZZBC09oRY"],[5,59,77]],[144,-13,[1,"62jnnPGINKNKkUilBy+KI2"]],[63,10,0.18,false,-14,[1,"aeFdvyKmlLho9AZTcWRdiY"],1]],[3,"49zzo1KLhD04GaiyUnONNl",1,0],[1,-253.06,0,0]],[50,"rankText",33554432,2,[[17,-15,[1,"c0On+2CnVHuaX1lQT2SlAD"],[5,33.9,75.6]],[150,"1",60,60,60,false,-16,[1,"78AtAr5M1FOaMh/u8DtIz3"],0],[63,10,0.05,false,-17,[1,"b02nSoROVBWbUqiiCOmvr9"],1]],[3,"d4UrvTY29JPrA7ewk5YyyY",1,0],[1,-380.40000000000003,0,0]],[50,"nameText",33554432,2,[[75,-18,[1,"adrYSXwn5HXZoreA+iN8sx"],[5,94.08,75.6],[0,0,0.5]],[151,"you",60,60,60,false,-19,[1,"82wP70MsBOsqLq5thjK5m7"],[4,4278190080],1],[159,10,0.27,10,false,-20,[1,"e45pkbdh9CdKrOIAXUqXVf"],1]],[3,"8dc5bewTFJRapjweF4pax2",1,0],[1,-203.08999999999997,10,0]],[50,"timer",33554432,2,[[75,-21,[1,"36k0RS+L1F9Z4Wbx7W5KRB"],[5,21.76,75.6],[0,0,0.5]],[152,"",40,60,false,-22,[1,"78kRAPL4dD8phQCLl3OoBw"],[4,4278190080],2],[63,10,0.735797281993205,false,-23,[1,"86W5ky311Efalj4V272Btk"],1]],[3,"83wazhYKdGtaisnfuG+O0o",1,0],[1,208.20900000000006,0,0]]],0,[0,3,1,0,0,1,0,0,1,0,31,2,0,0,1,0,-1,2,0,0,2,0,-1,3,0,-2,4,0,-3,5,0,-4,6,0,0,3,0,0,3,0,0,3,0,0,4,0,0,4,0,0,4,0,0,5,0,0,5,0,0,5,0,0,6,0,0,6,0,0,6,0,8,1,23],[0,0,0,0,0,0,0,0,0,0,0],[11,11,11,2,-1,-2,-3,-4,-1,-2,-3],[7,2,2,30,76,77,78,30,79,80,81]],[[[14,".bin",2689776742,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":7152,"length":2316,"count":579,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":7152,"count":149,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-13.351829528808594,-9.097012519836426,-1.9378661875180114e-7],"maxPosition",8,[1,13.351825714111328,14.153785705566406,2.3124239444732666]]],-1],0,0,[],[],[]],[[[20],[21,"terrain_01",[-2],[3,"b5Qd3c1fJes6v7mFKO1kkV",-1,0]],[24,"terrain_01",1,[[10,-3,[1,"d1T6mroe1Rf5rRJE+lW2OV"],[0],[7],1]],[3,"20gWZ5aqpUeIsoSE8SdrGf",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,3,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[82,31]],[[[23,"terrain_01",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[10,9],[83,0]],[[{"name":"ray","rect":{"x":0,"y":0,"width":716,"height":716},"offset":{"x":0,"y":0},"originalSize":{"width":716,"height":716},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[84]],[[{"name":"hand","rect":{"x":0,"y":0,"width":96,"height":151},"offset":{"x":0,"y":0},"originalSize":{"width":96,"height":151},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[85]],[[{"name":"silver medal","rect":{"x":0,"y":0,"width":59,"height":77},"offset":{"x":0,"y":0},"originalSize":{"width":59,"height":77},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[86]],[[{"name":"people di","rect":{"x":0,"y":0,"width":197,"height":121},"offset":{"x":0,"y":0},"originalSize":{"width":197,"height":121},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[87]],[[[23,"terrain_06",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[10,9],[88,0]],[[[14,".bin",3032168833,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":11760,"length":1536,"count":384,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":11760,"count":245,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-12.5,-12.5,0],"maxPosition",8,[1,12.5,12.5,3.3172192573547363]]],-1],0,0,[],[],[]],[[[20],[21,"terrain_06",[-2],[3,"39Yg4gdvpXfJljRrkH8pSj",-1,0]],[24,"terrain_06",1,[[10,-3,[1,"44rjrUIeZZeJ/k/3ciO8hy"],[0],[7],1]],[3,"27nahhq4tdv7YWoFN3ceOX",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,3,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[89,32]],[[{"name":"gold medal","rect":{"x":0,"y":0,"width":59,"height":77},"offset":{"x":0,"y":0},"originalSize":{"width":59,"height":77},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[90]],[[[23,"terrain_03",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[10,9],[91,0]],[[[14,".bin",3714978440,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":13488,"length":5280,"count":1320,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":13488,"count":281,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-12.162240028381348,-12.162246704101562,0],"maxPosition",8,[1,12.162240028381348,12.162246704101562,3.50469970703125]]],-1],0,0,[],[],[]],[[[20],[21,"terrain_03",[-2],[3,"19i6LE3Lxbr67QR9kBqRaV",-1,0]],[24,"terrain_03",1,[[10,-3,[1,"d68E2tUmJfjYPy9KtAggue"],[0],[7],1]],[3,"a2K8j5nwxah6iP3wevwRuB",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,3,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[92,33]],[[[62,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true},{},{},{}],[[[{},"tilingOffset",8,[2,3,1,0,0],"emissive",8,[4,4279435520],"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[10,9],[93,0]],[[{"name":"topInitialPopup","rect":{"x":0,"y":0,"width":1083,"height":202},"offset":{"x":0,"y":0},"originalSize":{"width":1083,"height":202},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[94]],[[[20],[21,"food_skull_01",[-2],[3,"6bH8t7wehYMrRlpqW5xKeO",-1,0]],[24,"food_skull_01",1,[[10,-3,[1,"dcdcQvwNtbk7O17E7skTux"],[0],[7],1]],[3,"46twUe4M1aRarlrApFO9pT",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,3,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[9,10]],[[[14,".bin",2161776520,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":13872,"length":4752,"count":1188,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":13872,"count":289,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.4196104407310486,-0.44333457946777344,-0.4582909345626831],"maxPosition",8,[1,0.4196104407310486,0.44333457946777344,0.4582909345626831]]],-1],0,0,[],[],[]],[[[23,"Food and props",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[10,9],[95,0]],[[{"name":"bronze medal","rect":{"x":0,"y":0,"width":59,"height":77},"offset":{"x":0,"y":0},"originalSize":{"width":59,"height":77},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[96]],[[{"name":"countdown1","rect":{"x":56,"y":20,"width":90,"height":209},"offset":{"x":-2,"y":2.5},"originalSize":{"width":206,"height":254},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[97]],[[{"name":"GainSpeed","rect":{"x":0,"y":0,"width":135,"height":213},"offset":{"x":0,"y":0},"originalSize":{"width":135,"height":213},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[98]],[[[14,".bin",2908190170,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":30048,"length":9168,"count":2292,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":30048,"count":626,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-20.665525436401367,-11.736836433410645,-5.813598704662581e-7],"maxPosition",8,[1,20.665525436401367,11.736836433410645,3.2952888011932373]]],-1],0,0,[],[],[]],[[[20],[21,"terrain_04",[-2],[3,"24p/KMVkhZ/4Kv+WkM8LfU",-1,0]],[24,"terrain_04",1,[[10,-3,[1,"85FsaPzTBfyajmAS7ZcjcL"],[0],[7],1]],[3,"d2kdcDiuRbRrPmIDF/gAm8",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,3,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[99,34]],[[[23,"terrain_04",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[10,9],[100,0]],[[[178,"GameScene"],[95,"Canvas",33554432,"53SKiIhr5MqafaGjzyZ7hn",[-19,-20,-21,-22,-23,-24,-25],[[2,-1,[5,750,1334]],[179,-3,-2],[160,45,-4],[180,-18,[[26,"48d51HOjkBIObFppQAdshF3","touchCallBack",-17]],[[26,"48d51HOjkBIObFppQAdshF3","sliderCallBack",-16]],[[26,"48d51HOjkBIObFppQAdshF3","onGameStart",-15]],[[26,"48d51HOjkBIObFppQAdshF3","initialiseGameUIController",-14]],-13,-12,-11,-10,-9,-8,-7,-6,-5,103,104]],[1,375,667,0]],[115,"GameScene",[-26,-27,-28,1,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41],[124,[]],[73,[117,80000,[4,33351891],[4,4286611618]],[119,1,true,true,2,0,1,0,100,50,0.8,[4,4278979598],[0,2048,2048]],[121,true,131],[123,0,500,1,[4,4293651435]]]],[68,"gameOverPopup",false,1,[-45,-46,-47,-48],[[2,-42,[5,750,1334]],[181,-43,98,99,100],[161,45,false,false,false,false,100,100,-44,1]]],[96,"hudbar",33554432,[-52,-53,-54,-55,-56],[[11,-49,[5,750,180],[0,0.5,1]],[37,0,-50,112],[162,41,-1.6666666666666667,false,false,1081,-51]],[1,0,200,0]],[97,"initialLayer",1,[-60,-61,-62],[[2,-57,[5,750,1334]],[163,45,100,100,-58,1],[135,true,-59,[60],61]]],[51,"hud",33554432,3,[-67,-68,-69,-70],[[2,-63,[5,1082,450]],[37,0,-64,87],[83,17,false,-65,3],[136,-66,[88]]],[1,0,509.5,0],[1,0.7,0.7,0.7]],[68,"cameraDebug",false,1,[-72,-73,-74,-75,-76,-77],[[76,-71]]],[98,"popup",33554432,[-80,-81,-82,-83],[[2,-78,[5,999,835]],[12,-79,74]],[1,0.65,0.65,0.65]],[29,"YSlider",33554432,7,[-87,-88,-89],[[[2,-84,[5,300,20]],[18,1,0,-85,39],-86],4,4,1],[1,202.96299999999997,419.55500000000006,0]],[29,"ZSlider",33554432,7,[-93,-94,-95],[[[2,-90,[5,300,20]],[18,1,0,-91,41],-92],4,4,1],[1,28.574,344.504,0]],[29,"XSlider",33554432,7,[-99,-100,-101],[[[2,-96,[5,300,20]],[18,1,0,-97,43],-98],4,4,1],[1,-163.977,419.555,0]],[29,"RYSlider",33554432,7,[-105,-106,-107],[[[2,-102,[5,300,20]],[18,1,0,-103,45],-104],4,4,1],[1,-166.136,276.795,0]],[29,"RXSlider",33554432,7,[-111,-112,-113],[[[2,-108,[5,300,20]],[18,1,0,-109,47],-110],4,4,1],[1,202.963,276.795,0]],[29,"RZSlider",33554432,7,[-117,-118,-119],[[[2,-114,[5,300,20]],[18,1,0,-115,49],-116],4,4,1],[1,31.745,208.743,0]],[51,"initiaDragPopup",33554432,5,[-123,-124],[[2,-120,[5,952,464]],[12,-121,55],[64,4,0.1,false,-122,5]],[1,0,-371.20000000000005,0],[1,0.7,0.7,0.7]],[69,"powerUpProgress",false,33554432,1,[-127,-128,-129],[[2,-125,[5,150,150]],[164,36,0.05,0.05,false,false,-126]],[1,262.5,-525.3,0]],[111,"leaderBoard",33554432,3,[-134,-135],[[[2,-130,[5,1082,952.8571428571429]],[79,1,0,-131],-132,[165,21,0.3,0.2,false,false,250,-133]],4,4,1,4],[1,0,-66.69999999999999,0],[1,0.7,0.7,0.7]],[69,"homeButton",false,33554432,3,[-141],[[2,-136,[5,300,120]],[18,1,0,-137,91],[65,2,-139,[[26,"607a6e7tMFM2o0KKgjUTxNF","onHomeClicked",3]],[4,4292269782],-138,92,93,94,95],[64,20,0.1,false,-140,3]],[1,0,-473.6,0]],[99,"gameController","63fzU6BcNDT6vtpZB1sA7i",2,[[182,-151,[[42,0],[42,1],[42,2]],[[42,3],[42,4],[42,5]],[6,7],[[56,8,9,10]],[[56,11,12,13]],[[56,14,15,16]],[[56,17,18,19]],-150,-149,-148,-147,-146,-145,-144,-143,-142,3,16,20,21,22,23,24,25,26,27,113,114,115,116]]],[0,["39Yg4gdvpXfJljRrkH8pSj"]],[70,"topPopup",33554432,5,[-155],[[2,-152,[5,750,180]],[37,0,-153,51],[166,41,false,false,false,1083,-154,5]],[1,0,577,0]],[59,"countDown",5,[-157,-158,-159,-160],[[76,-156]],[1,0,77.229,0]],[8,"yesButton",33554432,8,[[2,-161,[5,300,140]],[18,1,0,-162,64],[65,2,-164,[[26,"62ee6KEwbpJNKAJo5TmXRgo","onExitYesClicked",1]],[4,4292269782],-163,65,66,67,68],[167,36,0.34984984984984985,0.55,0.15,false,false,false,-165,8]],[1,-199.95000000000005,-222.25,0]],[8,"noButton",33554432,8,[[2,-166,[5,300,140]],[18,1,0,-167,69],[65,2,-169,[[26,"62ee6KEwbpJNKAJo5TmXRgo","hideExitPopup",1]],[4,4292269782],-168,70,71,72,73],[168,12,0.55,0.55,0.15,false,false,false,300,-170,8]],[1,199.95000000000005,-222.25,0]],[29,"scrollBar",33554432,17,[-175],[[[11,-171,[5,12,952.8571428571429],[0,1,0.5]],[18,1,0,-172,89],[169,37,250,1,-173],-174],4,4,4,1],[1,541,0,0]],[44,"soundButton",33554432,4,[[2,-176,[5,108,114]],[18,1,0,-177,101],[85,-178,[[26,"62ee6KEwbpJNKAJo5TmXRgo","onSoundClicked",1]],102],[84,36,0.12,0.15,false,false,-179,4]],[1,252.6,-118.80000000000001,0],[1,0.6,0.6,0.6]],[59,"Hud",1,[4],[[11,-180,[5,750,120],[0,0.5,1]],[170,41,0.4625187406296851,false,false,false,false,100,100,-181],[77,-182,[105],106]],[1,0,667,0]],[30,"Handle",33554432,9,[[[2,-183,[5,32,32]],-184,[41,-186,[4,4292269782],-185,38]],4,1,4],[1,-150,0,0]],[30,"Handle",33554432,10,[[[2,-187,[5,32,32]],-188,[41,-190,[4,4292269782],-189,40]],4,1,4],[1,-150,0,0]],[30,"Handle",33554432,11,[[[2,-191,[5,32,32]],-192,[41,-194,[4,4292269782],-193,42]],4,1,4],[1,-150,0,0]],[30,"Handle",33554432,12,[[[2,-195,[5,32,32]],-196,[41,-198,[4,4292269782],-197,44]],4,1,4],[1,-150,0,0]],[30,"Handle",33554432,13,[[[2,-199,[5,32,32]],-200,[41,-202,[4,4292269782],-201,46]],4,1,4],[1,-150,0,0]],[30,"Handle",33554432,14,[[[2,-203,[5,32,32]],-204,[41,-206,[4,4292269782],-205,48]],4,1,4],[1,-150,0,0]],[59,"exitPopup",1,[8],[[2,-207,[5,750,1334]],[171,45,900,-1.2000000000000002,false,false,false,100,100,-208,1],[77,-209,[75,76,77],78]],[1,900,0,0]],[52,"ProgressBar",33554432,16,[-214],[[2,-210,[5,160,160]],[138,2,1,true,-212,-211],[78,3,0.5,-213,80]]],[52,"powerUpImage",33554432,16,[-217,-218],[[2,-215,[5,90,90]],[145,0,-216,[4,4278242559]]]],[89,"content",33554432,[[11,-219,[5,1082,952.857143],[0,0.5,1]],[83,1,false,-221,-220],[183,2,10,10,10,true,-222]],[1,-10,476.42857142857144,0]],[52,"view",33554432,17,[37],[[2,-223,[5,1082,952.8571428571429]],[140,-224]]],[51,"popup",33554432,3,[-228],[[2,-225,[5,952,200]],[37,0,-226,97],[64,4,0.05698125937031484,false,-227,3]],[1,0,-520.987,0],[1,0.7,0.7,0.7]],[44,"cloaseButton",33554432,4,[[2,-229,[5,108,114]],[12,-230,107],[85,-231,[[26,"62ee6KEwbpJNKAJo5TmXRgo","onCloseClicked",1]],108],[172,36,0.02,0.15,false,false,false,-232,4]],[1,327.6,-118.80000000000001,0],[1,0.6,0.6,0.6]],[51,"totalPlayer",33554432,4,[-236],[[2,-233,[5,197,121]],[12,-234,111],[84,36,0.22,0.15,false,false,-235,4]],[1,150.9,-116.7,0],[1,0.6,0.6,0.6]],[44,"lastManStanding",33554432,21,[[2,-237,[5,665,54]],[12,-238,50],[173,18,42.5,42.5,-0.2,false,false,665,-239,21]],[1,0,-36,0],[1,0.8,0.8,0.8]],[70,"infiniteSign",33554432,15,[-242],[[2,-240,[5,358,165]],[12,-241,53]],[1,0,-39.544,0]],[8,"moveLabel",33554432,15,[[2,-243,[5,697.86,75.6]],[61,"Drag to move your penguin",60,60,60,false,-244,[4,4278190080],54],[174,1,0.1228448275862069,false,-245,15]],[1,0,137.2,0]],[8,"banner",33554432,8,[[2,-246,[5,670,162]],[12,-247,62],[175,9,-0.03,-0.06,false,false,-248]],[1,-194.47000000000003,386.6,0]],[8,"exitLabel",33554432,8,[[2,-249,[5,625,173]],[12,-250,63],[176,18,-0.007477477477477477,-0.06658682634730538,0.1,false,false,false,-251]],[1,0,83.5,0]],[52,"maskingNode",33554432,6,[-254],[[2,-252,[5,1082,450]],[78,3,1,-253,83]]],[8,"trophy",33554432,6,[[2,-255,[5,259,277]],[12,-256,84],[177,9,0.05,0.2,false,false,-257,6]],[1,-357.4,-3.5,0]],[100,"Directional Light","577YE8O9ZC65IMVbMYZAg9",2,[[184,-258,[185]]],[1,30.079,153.676,215.911],[3,-0.2997788238798885,0.07482776953602352,0.023593105109223914,0.9507769596760113],[1,-35,9,0]],[101,"cameraNode","08cyYq3xJFUZnw95q+2LAq",2,[-259]],[22,0,null,2,[13,"b5Qd3c1fJes6v7mFKO1kkV",-260,[55,"74+r2G+UFGk7pxLpDyZbFl",null,[[47,[0,["20gWZ5aqpUeIsoSE8SdrGf"]],[[48,29],[46,2]]]],[[6,"TrianglePlatform",["_name"],[0,["b5Qd3c1fJes6v7mFKO1kkV"]]],[5,["_lpos"],[0,["b5Qd3c1fJes6v7mFKO1kkV"]],[1,0,-7.58,0]],[5,["_lrot"],[0,["b5Qd3c1fJes6v7mFKO1kkV"]],[3,0,0,0,1]],[5,["_euler"],[0,["b5Qd3c1fJes6v7mFKO1kkV"]],[1,0,0,0]],[5,["_lpos"],[0,["20gWZ5aqpUeIsoSE8SdrGf"]],[1,0,1.468,0]],[5,["_lscale"],[0,["b5Qd3c1fJes6v7mFKO1kkV"]],[1,2,2,2]],[6,"platform",["_name"],[0,["20gWZ5aqpUeIsoSE8SdrGf"]]],[6,true,["_active"],[0,["20gWZ5aqpUeIsoSE8SdrGf"]]],[6,false,["_active"],[0,["b5Qd3c1fJes6v7mFKO1kkV"]]],[6,true,["lightmapSettings","_receiveShadow"],[0,["d1T6mroe1Rf5rRJE+lW2OV"]]]]],28]],[22,0,null,2,[13,"19i6LE3Lxbr67QR9kBqRaV",-261,[55,"5eJsGrhbdHrbJIYCeBoEGx",null,[[47,[0,["a2K8j5nwxah6iP3wevwRuB"]],[[48,31],[46,2]]]],[[6,"CircularPlatform",["_name"],[0,["19i6LE3Lxbr67QR9kBqRaV"]]],[5,["_lpos"],[0,["19i6LE3Lxbr67QR9kBqRaV"]],[1,0,-6.979,0]],[5,["_lrot"],[0,["19i6LE3Lxbr67QR9kBqRaV"]],[3,0,0,0,1]],[5,["_euler"],[0,["19i6LE3Lxbr67QR9kBqRaV"]],[1,0,0,0]],[5,["_lscale"],[0,["19i6LE3Lxbr67QR9kBqRaV"]],[1,2,2,2]],[6,false,["_active"],[0,["19i6LE3Lxbr67QR9kBqRaV"]]],[6,"platform",["_name"],[0,["a2K8j5nwxah6iP3wevwRuB"]]],[6,true,["lightmapSettings","_receiveShadow"],[0,["d68E2tUmJfjYPy9KtAggue"]]]]],30]],[22,0,null,2,[13,"24p/KMVkhZ/4Kv+WkM8LfU",-264,[55,"d1EzTqKkdD04C/XelRYzOp",null,[[47,[0,["d2kdcDiuRbRrPmIDF/gAm8"]],[[48,33],[46,2]]]],[[6,"InfinePlatform",["_name"],[0,["24p/KMVkhZ/4Kv+WkM8LfU"]]],[5,["_lpos"],[0,["24p/KMVkhZ/4Kv+WkM8LfU"]],[1,0,-6.539,0]],[5,["_lrot"],[0,["24p/KMVkhZ/4Kv+WkM8LfU"]],[3,0,0,0,1]],[5,["_euler"],[0,["24p/KMVkhZ/4Kv+WkM8LfU"]],[1,0,0,0]],[6,"platform",["_name"],[0,["d2kdcDiuRbRrPmIDF/gAm8"]]],[5,["_lscale"],[0,["24p/KMVkhZ/4Kv+WkM8LfU"]],[1,2,2,2]],[6,false,["_active"],[0,["24p/KMVkhZ/4Kv+WkM8LfU"]]],[9,true,["lightmapSettings","_receiveShadow"],-262],[9,false,["lightmapSettings","_castShadow"],-263]]],32]],[22,0,null,2,[13,"35qsdnuYxX5KuoRBS5ofmS",-265,[55,"b2t13t6dFMe48ZoxnovB1j",null,[[47,[0,["66hHjhVoxemoUDzsM/1907"]],[[48,35],[46,2]]]],[[6,"StarPlatform",["_name"],[0,["35qsdnuYxX5KuoRBS5ofmS"]]],[5,["_lpos"],[0,["35qsdnuYxX5KuoRBS5ofmS"]],[1,0,-6.372,0]],[5,["_lrot"],[0,["35qsdnuYxX5KuoRBS5ofmS"]],[3,0,0,0,1]],[5,["_euler"],[0,["35qsdnuYxX5KuoRBS5ofmS"]],[1,0,0,0]],[5,["_lscale"],[0,["35qsdnuYxX5KuoRBS5ofmS"]],[1,2,2,2]],[6,"platform",["_name"],[0,["66hHjhVoxemoUDzsM/1907"]]],[6,false,["_active"],[0,["35qsdnuYxX5KuoRBS5ofmS"]]],[6,true,["lightmapSettings","_receiveShadow"],[0,["0asUK/NwVaqK6UDizjo1fK"]]]]],34]],[22,0,null,2,[13,"39Yg4gdvpXfJljRrkH8pSj",-266,[129,"6eEAZX1DdJi5rEX9gP1Nud",[[47,[0,["27nahhq4tdv7YWoFN3ceOX"]],[[48,37],[46,2]]]],[[9,"SquarelPatform",["_name"],20],[4,["_lpos"],20,[1,0,-6.421,0]],[4,["_lrot"],20,[3,0,0,0,1]],[4,["_euler"],20,[1,0,0,0]],[4,["_lscale"],20,[1,2,2,2]],[6,"platform",["_name"],[0,["27nahhq4tdv7YWoFN3ceOX"]]],[9,false,["_active"],20],[6,true,["lightmapSettings","_receiveShadow"],[0,["44rjrUIeZZeJ/k/3ciO8hy"]]]]],36]],[72,"gameTimer",33554432,4,[[[11,-267,[5,136.56,75.6],[0,0,0.5]],-268],4,1],[1,-355.792,-90,0],[1,0.6,0.6,0.6]],[8,"yaxis",33554432,9,[[2,-269,[5,70.04,50.4]],[39,"Y-axis :",20,20,true,true,-270,[4,4278190080]]],[1,-135.032,35.501,0]],[8,"YSlider",33554432,9,[[11,-271,[5,166.85,50.4],[0,0,0.5]],[40,"",0,20,20,-272,[4,4278190080]]],[1,-93.368,35.501,0]],[8,"zaxis",33554432,10,[[2,-273,[5,70.02,50.4]],[39,"Z-axis :",20,20,true,true,-274,[4,4278190080]]],[1,-135.032,35.501,0]],[8,"ZSlider",33554432,10,[[11,-275,[5,166.85,50.4],[0,0,0.5]],[40,"",0,20,20,-276,[4,4278190080]]],[1,-93.368,35.501,0]],[8,"xaxis",33554432,11,[[2,-277,[5,71.14,50.4]],[39,"X-axis :",20,20,true,true,-278,[4,4278190080]]],[1,-135.032,35.501,0]],[8,"XSlider",33554432,11,[[11,-279,[5,166.85,50.4],[0,0,0.5]],[40,"",0,20,20,-280,[4,4278190080]]],[1,-93.368,35.501,0]],[8,"rotation",33554432,12,[[2,-281,[5,76.31,50.4]],[39,"angle Y:",20,20,true,true,-282,[4,4278190080]]],[1,-135.032,35.501,0]],[8,"RYSlider",33554432,12,[[11,-283,[5,166.85,50.4],[0,0,0.5]],[40,"",0,20,20,-284,[4,4278190080]]],[1,-93.368,35.501,0]],[8,"rotation",33554432,13,[[2,-285,[5,77.79,50.4]],[39,"angle X:",20,20,true,true,-286,[4,4278190080]]],[1,-135.032,35.501,0]],[8,"RXSlider",33554432,13,[[11,-287,[5,166.85,50.4],[0,0,0.5]],[40,"",0,20,20,-288,[4,4278190080]]],[1,-93.368,35.501,0]],[8,"rotation",33554432,14,[[2,-289,[5,76.67,50.4]],[39,"angle Z:",20,20,true,true,-290,[4,4278190080]]],[1,-135.032,35.501,0]],[8,"RZSlider",33554432,14,[[11,-291,[5,166.85,50.4],[0,0,0.5]],[40,"",0,20,20,-292,[4,4278190080]]],[1,-93.368,35.501,0]],[44,"hand",33554432,43,[[2,-293,[5,96,151]],[12,-294,52]],[1,19.013,-58.502,0],[1,0.8,0.8,0.8]],[53,"3",false,33554432,22,[[2,-295,[5,149,209]],[12,-296,56]],[1,0.75,0.75,0.75]],[53,"2",false,33554432,22,[[2,-297,[5,150,211]],[12,-298,57]],[1,0.75,0.75,0.75]],[53,"1",false,33554432,22,[[2,-299,[5,90,209]],[12,-300,58]],[1,0.75,0.75,0.75]],[53,"go",false,33554432,22,[[2,-301,[5,750,216]],[12,-302,59]],[1,0.75,0.75,0.75]],[102,"progressBg",33554432,16,[[2,-303,[5,154,154]],[37,0,-304,79]]],[112,"Bar",33554432,35,[[[2,-305,[5,160,160]],-306],4,1]],[8,"counter",33554432,36,[[2,-307,[5,33.37,75.6]],[153,"0",60,60,60,-308]],[1,0,-28.25,0]],[8,"image",33554432,36,[[2,-309,[5,50,50]],[37,0,-310,81]],[1,0,27.051,0]],[8,"ray",33554432,47,[[2,-311,[5,716,716]],[12,-312,82]],[1,-350.901,30.811,0]],[8,"scoreText",33554432,6,[[11,-313,[5,223.6,100.8],[0,1,0.5]],[61,"score :",80,80,80,false,-314,[4,4278190080],85]],[1,172.106,42,0]],[8,"score",33554432,6,[[11,-315,[5,43.52,100.8],[0,0,0.5]],[61,"0",80,80,80,false,-316,[4,4280562667],86]],[1,195.386,30.389,0]],[30,"bar",33554432,25,[[[11,-317,[5,10,156.25],[0,0,0]],-318],4,1],[1,-11,-31.25,0]],[103,"Label",512,33554432,18,[[2,-319,[5,200,100]],[154,"home",60,60,80,1,false,false,-320,90]]],[44,"redirectingLabel",33554432,39,[[2,-321,[5,505.8,100.8]],[155,"Redirecting to leaderBoard in ",40,80,false,-322,[4,4278190080],96]],[1,0,3.78,0],[1,1.4285714285714288,1.4285714285714288,1.4285714285714288]],[72,"score",33554432,4,[[[11,-323,[5,136.56,75.6],[0,0,0.5]],-324],4,1],[1,-355.792,-140,0],[1,0.6,0.6,0.6]],[8,"playerCount",33554432,41,[[2,-325,[5,33.9,75.6]],[186,60,"0",60,false,-326,109,110]],[1,40.625,-9.557,0]],[71,"deathPlatform","c6lhDreS5AFpgLZsYRxidk",2,[[36,"Cube<ModelComponent>",-327,[117],[7],118],[187,-328]],[1,0,-1,0],[1,400,0.181,400]],[104,"playerCamera",8388608,50,[[189,"Camera<CameraComponent>",60,14,1822425087,-329,[4,4286073907]]],[1,0,17.788,25.71],[3,-0.3007057995042731,0,0,0.9537169507482269],[1,-35,0,0]],[0,["85FsaPzTBfyajmAS7ZcjcL"]],[86,60,"0ssss",60,false,56],[113,"Camera",1,[-330],[1,0,0,1000]],[190,0,1073741824,667,2000,6,41943040,90,[4,4278190080]],[38,0,28],[43,0,9,92],[38,0,29],[43,0,10,94],[38,0,30],[43,0,11,96],[38,0,31],[43,0,12,98],[38,0,32],[43,0,13,100],[38,0,33],[43,0,14,102],[146,3,2,0,1,-1,75,[0,0.5,0.5]],[79,1,0,81],[192,1,25,105],[193,0.23,0.75,false,17,37,106],[86,60,"0ssss",60,false,84],[105,"Camera",false,"4a24qmwNFE97GHZ2R7VNHr",2,[[191,"Camera<CameraComponent>",90,100,4,1822425087,-331,[4,4286073907]]],[1,0,20,0],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,-90,0,0]],[22,0,null,2,[13,"79vK8I5ShcYY+Y+/YEuLkg",-332,[130,"68qJey1xFMFJD3gKSMwsYe",null,[[6,"waterTerrain",["_name"],[0,["79vK8I5ShcYY+Y+/YEuLkg"]]],[5,["_lpos"],[0,["79vK8I5ShcYY+Y+/YEuLkg"]],[1,0,-24.871,0]],[5,["_lrot"],[0,["79vK8I5ShcYY+Y+/YEuLkg"]],[3,0,0,0,1]],[5,["_euler"],[0,["79vK8I5ShcYY+Y+/YEuLkg"]],[1,0,0,0]],[5,["_lscale"],[0,["79vK8I5ShcYY+Y+/YEuLkg"]],[1,50,50,100]],[25,["_materials","0"],[0,["cf0wRAaFRcTq8MhoJKJgoF"]],120],[6,true,["_active"],[0,["79vK8I5ShcYY+Y+/YEuLkg"]]],[5,["_lpos"],[0,["653+NZDS5bqYQeQUM63Her"]],[1,0,0.194,0]],[5,["_lscale"],[0,["653+NZDS5bqYQeQUM63Her"]],[1,50,70,20]],[6,true,["_active"],[0,["653+NZDS5bqYQeQUM63Her"]]],[5,["_lrot"],[0,["653+NZDS5bqYQeQUM63Her"]],[3,-0.7071067811865475,0,0,0.7071067811865476]],[5,["_euler"],[0,["653+NZDS5bqYQeQUM63Her"]],[1,-90,0,0]]]],119]],[71,"water","dbuc4BBStAD6Q8bb9lgeP+",2,[[36,"Plane<ModelComponent>",-333,[121],[7],122]],[1,0,-0.8709999999999987,0],[1,50,50,50]],[54,"Plane","ff4LUZDU9KIYzsDLKfck5K",2,[[36,"Plane<ModelComponent>",-334,[123],[7],124]],[1,0,58.411,-193.437],[3,0.7071067811865475,0,0,0.7071067811865476],[1,50,1,15],[1,90,0,0]],[54,"Plane-001","b3vBuQ93dAi49E+2hRCgKT",2,[[36,"Plane<ModelComponent>",-335,[125],[7],126]],[1,0,58.411,242.499],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,50,1,15],[1,-90,0,0]],[54,"Plane-002","8dRlA+8ilLi5HxctLT26sT",2,[[36,"Plane<ModelComponent>",-336,[127],[7],128]],[1,-238.187,58.411,52.188],[3,0.5,0.5,-0.4999999999999999,0.5000000000000001],[1,50,1,15],[1,90,90,0]],[54,"Plane-003","ee5Dguen5N/p9zCd7FMb9C",2,[[36,"Plane<ModelComponent>",-337,[129],[7],130]],[1,238.187,58.411,52.188],[3,0.5,-0.5,0.4999999999999999,0.5000000000000001],[1,50,1,15],[1,90,-90,0]]],0,[0,0,1,0,32,91,0,0,1,0,0,1,0,33,26,0,34,5,0,35,103,0,36,101,0,37,99,0,38,97,0,39,95,0,40,93,0,41,7,0,17,19,0,17,19,0,17,19,0,17,19,0,0,1,0,-1,90,0,-2,7,0,-3,5,0,-4,27,0,-5,34,0,-6,16,0,-7,3,0,-1,49,0,-2,19,0,-3,50,0,-5,86,0,-6,109,0,-7,51,0,-8,52,0,-9,53,0,-10,54,0,-11,55,0,-12,110,0,-13,111,0,-14,112,0,-15,113,0,-16,114,0,-17,115,0,0,3,0,0,3,0,0,3,0,-1,6,0,-2,17,0,-3,18,0,-4,39,0,0,4,0,0,4,0,0,4,0,-1,40,0,-2,26,0,-3,56,0,-4,84,0,-5,41,0,0,5,0,0,5,0,0,5,0,-1,21,0,-2,15,0,-3,22,0,0,6,0,0,6,0,0,6,0,0,6,0,-1,47,0,-2,48,0,-3,79,0,-4,80,0,0,7,0,-1,9,0,-2,10,0,-3,11,0,-4,12,0,-5,13,0,-6,14,0,0,8,0,0,8,0,-1,45,0,-2,46,0,-3,23,0,-4,24,0,0,9,0,0,9,0,-3,93,0,-1,28,0,-2,57,0,-3,58,0,0,10,0,0,10,0,-3,95,0,-1,29,0,-2,59,0,-3,60,0,0,11,0,0,11,0,-3,97,0,-1,30,0,-2,61,0,-3,62,0,0,12,0,0,12,0,-3,99,0,-1,31,0,-2,63,0,-3,64,0,0,13,0,0,13,0,-3,101,0,-1,32,0,-2,65,0,-3,66,0,0,14,0,0,14,0,-3,103,0,-1,33,0,-2,67,0,-3,68,0,0,15,0,0,15,0,0,15,0,-1,43,0,-2,44,0,0,16,0,0,16,0,-1,74,0,-2,35,0,-3,36,0,0,17,0,0,17,0,-3,107,0,0,17,0,-1,25,0,-2,38,0,0,18,0,0,18,0,14,18,0,0,18,0,0,18,0,-1,82,0,42,108,0,43,89,0,44,55,0,45,54,0,46,53,0,47,52,0,48,51,0,49,50,0,50,49,0,0,19,0,0,21,0,0,21,0,0,21,0,-1,42,0,0,22,0,-1,70,0,-2,71,0,-3,72,0,-4,73,0,0,23,0,0,23,0,14,23,0,0,23,0,0,23,0,0,24,0,0,24,0,14,24,0,0,24,0,0,24,0,0,25,0,0,25,0,0,25,0,-4,106,0,-1,81,0,0,26,0,0,26,0,0,26,0,0,26,0,0,27,0,0,27,0,0,27,0,0,28,0,-2,92,0,14,28,0,0,28,0,0,29,0,-2,94,0,14,29,0,0,29,0,0,30,0,-2,96,0,14,30,0,0,30,0,0,31,0,-2,98,0,14,31,0,0,31,0,0,32,0,-2,100,0,14,32,0,0,32,0,0,33,0,-2,102,0,14,33,0,0,33,0,0,34,0,0,34,0,0,34,0,0,35,0,25,104,0,0,35,0,0,35,0,-1,75,0,0,36,0,0,36,0,-1,76,0,-2,77,0,0,37,0,14,38,0,0,37,0,0,37,0,0,38,0,0,38,0,0,39,0,0,39,0,0,39,0,-1,83,0,0,40,0,0,40,0,0,40,0,0,40,0,0,41,0,0,41,0,0,41,0,-1,85,0,0,42,0,0,42,0,0,42,0,0,43,0,0,43,0,-1,69,0,0,44,0,0,44,0,0,44,0,0,45,0,0,45,0,0,45,0,0,46,0,0,46,0,0,46,0,0,47,0,0,47,0,-1,78,0,0,48,0,0,48,0,0,48,0,0,49,0,-1,87,0,3,51,0,3,52,0,1,88,0,1,88,0,3,53,0,3,54,0,3,55,0,0,56,0,-2,89,0,0,57,0,0,57,0,0,58,0,0,58,0,0,59,0,0,59,0,0,60,0,0,60,0,0,61,0,0,61,0,0,62,0,0,62,0,0,63,0,0,63,0,0,64,0,0,64,0,0,65,0,0,65,0,0,66,0,0,66,0,0,67,0,0,67,0,0,68,0,0,68,0,0,69,0,0,69,0,0,70,0,0,70,0,0,71,0,0,71,0,0,72,0,0,72,0,0,73,0,0,73,0,0,74,0,0,74,0,0,75,0,-2,104,0,0,76,0,0,76,0,0,77,0,0,77,0,0,78,0,0,78,0,0,79,0,0,79,0,0,80,0,0,80,0,0,81,0,-2,105,0,0,82,0,0,82,0,0,83,0,0,83,0,0,84,0,-2,108,0,0,85,0,0,85,0,0,86,0,0,86,0,0,87,0,-1,91,0,0,109,0,3,110,0,0,111,0,0,112,0,0,113,0,0,114,0,0,115,0,51,2,1,12,2,4,12,27,8,12,34,37,12,38,106,52,107,337],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,94,96,98,100,102,104,105,108,108,89,89],[15,15,15,15,15,15,-1,-2,18,19,20,18,19,20,18,19,20,18,19,20,53,54,55,56,57,58,59,60,7,6,7,6,7,6,7,6,7,6,13,2,13,2,13,2,13,2,13,2,13,2,2,2,2,2,11,2,2,2,2,2,-1,16,2,2,2,13,21,22,23,2,13,21,22,23,2,-1,-2,-3,16,2,2,2,2,2,2,11,11,2,-1,2,11,2,13,21,22,23,11,2,61,62,63,2,13,64,65,-1,16,2,13,11,24,2,2,66,67,68,69,-1,6,7,5,-1,6,-1,6,-1,6,-1,6,-1,6,70,2,2,2,2,2,2,2,2,11,24,11,24],[3,35,36,3,35,36,101,102,103,16,104,105,15,106,107,14,108,109,13,110,111,112,113,11,114,115,116,117,118,31,119,33,120,34,121,37,122,32,1,4,1,4,1,4,1,4,1,4,1,4,123,124,125,126,2,38,127,128,129,130,39,39,131,132,40,40,41,41,42,43,43,44,44,42,133,134,135,45,45,136,137,12,138,139,46,2,2,140,141,142,7,18,18,47,47,18,2,38,46,143,144,19,19,145,19,48,48,49,49,7,7,146,147,148,149,150,151,152,153,154,155,17,5,8,5,8,5,8,5,8,5,25,1,1,1,1,1,1,156,157,2,2,2,2]],[[{"name":"sound off","rect":{"x":0,"y":0,"width":106,"height":114},"offset":{"x":0,"y":0},"originalSize":{"width":106,"height":114},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[158]],[[{"name":"1","rect":{"x":0,"y":0,"width":883,"height":104},"offset":{"x":0,"y":0},"originalSize":{"width":883,"height":104},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[159]],[[[19,"pedestal"],[90,"pedestal",[[60,"Cylinder<ModelComponent>",-2,[1,"54MqWga8FLO7LrHZahiDwp"],[0],[7],1],[188,-3,[1,"3c6NheI6xBN55lJspmGPmg"],[1,0,0.95,0],[1,1,0.1,1]]],[3,"2bvQu+UNZOMoEmZNiiPPl1",-1,0],[1,-1.5,-10,-37],[1,2,10,2]]],0,[0,3,1,0,0,1,0,0,1,0,8,1,3],[0,0],[-1,6],[160,161]],[[[19,"bot"],[57,"bot",[-6,-7],[[128,2,100,0,-2,[1,"59x7ieeltEa4rvb1W6kbV1"],[1,0,0,0]],[28,2,1.5,-3,[1,"643EqAHm1JLryaQlFTjfmI"],[1,0,2.8,0]],[194,-4,[1,"27ekEDysJKkZT8BuFDN6u6"]],[81,true,2.3,5,-5,[1,"fcaV/TBSBJyJ5XjF4Me2ze"],[1,0,3,-0.4]]],[3,"8auOi9DE1RmYUynG+RD2O9",-1,0],[1,-14.7,0.28,-2.326],[1,0.5,0.5,0.5]],[22,0,null,1,[13,"59R3ZReSlZU7cMWe65LSQi",-36,[74,"6bs6Jqm0pGOIfQaeHTduOx",1,[[9,"Penguine_Anim",["_name"],-8],[4,["_lpos"],-9,[1,0,0,0]],[4,["_lrot"],-10,[3,0,0,0,1]],[4,["_euler"],-11,[1,0,0,0]],[4,["_lscale"],-12,[1,2,2,2]],[25,["_materials","0"],[0,["819cNtzSlQ1awf6gO8ffno"]],1],[25,["_materials","0"],[0,["ac8i6xedBXE6SPaMdY2WcE"]],2],[25,["_materials","0"],[0,["52W5PEObtTbK2Gr8yJqCzT"]],3],[25,["_materials","0"],[0,["c8Mf8OJd9SSopbw7I4dmAK"]],4],[15,["_materials","0"],-13,5],[16,["_skinningRoot"],-15,-14],[6,false,["_active"],[0,["a4XnWWsFpa0q6OII23wIxY"]]],[15,["_materials","0"],-16,6],[16,["_skinningRoot"],-18,-17],[15,["_materials","0"],-19,7],[16,["_skinningRoot"],-21,-20],[15,["_materials","0"],-22,8],[16,["_skinningRoot"],-24,-23],[15,["_materials","0"],-25,9],[16,["_skinningRoot"],-27,-26],[15,["_materials","0"],-28,10],[16,["_skinningRoot"],-30,-29],[6,false,["_active"],[0,["6dsK1yA0layY9a7cZcTtz+"]]],[9,false,["lightmapSettings","_bakeable"],-31],[9,true,["lightmapSettings","_castShadow"],-32],[9,false,["lightmapSettings","_receiveShadow"],-33],[9,1,["_shadowCastingMode"],-34],[9,0,["_shadowReceivingMode"],-35]]],0]],[0,["abcyXcjPtYq4Nmb/o/8s3M"]],[0,["59R3ZReSlZU7cMWe65LSQi"]],[0,["eeimR7NmZccZ+rhZGcguNN"]],[0,["3cbn2yQcVViL5L5h+em31f"]],[0,["ceDhL0m+pZ0rGVulvjLeZL"]],[0,["cfdsdtnK5R6JLMeVwlEFfv"]],[0,["38uO2hvglS+q1AO1isog4B"]],[67,"floaty",false,1,[[60,"Torus<ModelComponent>",-37,[1,"b0SducFkZNXrfyhAHhVY6q"],[11],[7],12]],[3,"f39+gQj7RLB4YMmPguVsYV",1,0],[1,0,2.242,0],[1,4.5,4.5,4.5]]],0,[0,3,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,-2,10,0,1,4,0,1,4,0,1,4,0,1,4,0,1,4,0,1,5,0,5,2,0,1,5,0,1,6,0,5,2,0,1,6,0,1,3,0,5,2,0,1,3,0,1,7,0,5,2,0,1,7,0,1,8,0,5,2,0,1,8,0,1,9,0,5,2,0,1,9,0,1,3,0,1,3,0,1,3,0,1,3,0,1,3,0,3,2,0,0,10,0,8,1,37],[0,0,0,0,0,0,0,0,0,0,0,0,0],[7,5,5,5,5,5,5,5,5,5,5,-1,6],[26,16,28,15,14,13,27,3,3,3,3,17,29]],[[{"name":"shut","rect":{"x":0,"y":0,"width":108,"height":114},"offset":{"x":0,"y":0},"originalSize":{"width":108,"height":114},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[162]],[[[14,".bin",1025397960,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":8160,"length":2592,"count":648,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":8160,"count":170,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.13970166444778442,-0.13970166444778442,-0.5128788352012634],"maxPosition",8,[1,0.13970166444778442,0.13970166444778442,0.5128788352012634]]],-1],0,0,[],[],[]],[[[20],[21,"food_potion_01",[-2],[3,"03NsyTOWNYjaBy4/B1R5kv",-1,0]],[24,"food_potion_01",1,[[10,-3,[1,"2blSMJNIhfZ5HquXn2tAaR"],[0],[7],1]],[3,"19KwUusmpVk43juGWdCQSW",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,3,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[50,51]],[[[23,"Food and props",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[10,9],[163,0]],[[[23,"Material.006",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.27216553688049316},"mainTexture",6,0]],11]]],0,0,[0,0],[10,9],[164,0]],[[[20],[21,"waterTerrain",[-2],[3,"79vK8I5ShcYY+Y+/YEuLkg",-1,0]],[106,"Landscape.003",1,[[10,-3,[1,"cf0wRAaFRcTq8MhoJKJgoF"],[0],[7],1]],[3,"653+NZDS5bqYQeQUM63Her",1,0],[3,-0.7071068407911908,0,0,0.7071067215818992],[1,39.370079040527344,39.370079040527344,39.370079040527344],[1,-90.00000965934633,0,0]]],0,[0,3,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[165,166]],[[[14,".bin",3884579126,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":844560,"length":119952,"count":29988,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":844560,"count":17595,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.12700000405311584,-0.06350000202655792,0],"maxPosition",8,[1,0.12700000405311584,0.06350000202655792,0.014364982955157757]]],-1],0,0,[],[],[]],[[[19,"PoisionSpeed"],[49,"PoisionSpeed",[[-5,[31,"foodNode",8388608,-7,[3,"26oh2FqHVJL75MfBYfziTE",-6,0],[1,0.667,0,1],[3,0,0.7071067811865475,0,0.7071067811865476],[1,20,20,20],[1,0,90,0]]],1,4],[[45,4,0.0001,-2,[1,"afhWzn74lLnoQrBm8+3vnx"]],[33,-3,[1,"acEYzk36FHtK9IU141o3JI"]],[28,15,15,-4,[1,"6dOZ/mvetGi7XFR+FgBRPB"],[1,0,15,0]]],[3,"7fJOPvAvBaN4HLZl7x/4CB",-1,0],[1,-11,0,-5],[1,0.1,0.1,0.1]],[0,["03NsyTOWNYjaBy4/B1R5kv"]],[22,0,null,1,[13,"03NsyTOWNYjaBy4/B1R5kv",-12,[34,"3aLwuxl6pHiaq28SMqCStr",1,[[35,[0,["03NsyTOWNYjaBy4/B1R5kv"]],[-11]]],[[9,"food_potion_01",["_name"],2],[4,["_lpos"],2,[1,0,8,0]],[4,["_lrot"],2,[3,0,0,0,1]],[4,["_euler"],2,[1,0,0,0]],[4,["_lscale"],2,[1,10,10,10]],[4,["_lrot"],-8,[3,-0.62721137512625,-0.32650557562197685,0.3265055756219769,0.62721137512625]],[4,["_euler"],-9,[1,-90,0,55]],[4,["_lpos"],-10,[1,0.8,0.15,0.09]]]],0]],[0,["19KwUusmpVk43juGWdCQSW"]],[32,"food_potion_02",3,[[10,-13,[1,"f3JObblAhMI619LpxUY4eP"],[1],[7],2]],[27,"c5gIu80OZGX70OKfgkhHsA",3,3],[1,-0.8,0.15,0.09],[3,-0.62721137512625,0.32650557562197685,-0.3265055756219769,0.62721137512625],[1,-90,0,-55]]],0,[0,3,1,0,0,1,0,0,1,0,0,1,0,-1,3,0,3,1,0,12,1,0,1,4,0,1,4,0,1,4,0,-1,5,0,3,3,0,0,5,0,8,1,13],[0,0,0,0],[7,-1,6,7],[52,50,51,52]],[[{"name":"PoisionSpeed","rect":{"x":0,"y":0,"width":138,"height":190},"offset":{"x":0,"y":0},"originalSize":{"width":138,"height":190},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[167]],[[{"name":"GO","rect":{"x":0,"y":0,"width":750,"height":216},"offset":{"x":0,"y":0},"originalSize":{"width":750,"height":216},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[168]],[[[19,"Sheild"],[49,"Sheild",[[-5,[31,"foodNode",8388608,-7,[3,"d1FfcvxchIU5Jmij/990jz",-6,0],[1,0.667,0,1],[3,0,0.7071067811865475,0,0.7071067811865476],[1,20,20,20],[1,0,90,0]]],1,4],[[45,4,0.0001,-2,[1,"afhWzn74lLnoQrBm8+3vnx"]],[33,-3,[1,"acEYzk36FHtK9IU141o3JI"]],[28,15,15,-4,[1,"39Fhd9clxG06gkyRf4Teca"],[1,0,15,0]]],[3,"7fJOPvAvBaN4HLZl7x/4CB",-1,0],[1,-11,0,-5],[1,0.1,0.1,0.1]],[0,["a25tUyq7xTcJPeX+rDtaaI"]],[22,0,null,1,[13,"a25tUyq7xTcJPeX+rDtaaI",-12,[34,"eadpq2fWdFw5KJ1AUxLNqJ",1,[[35,[0,["a25tUyq7xTcJPeX+rDtaaI"]],[-11]]],[[9,"food_shield_01",["_name"],2],[4,["_lpos"],2,[1,0,4,0]],[4,["_lrot"],2,[3,0,0,0,1]],[4,["_euler"],2,[1,0,0,0]],[4,["_lscale"],2,[1,10,10,10]],[4,["_lpos"],-8,[1,1,0.45,0]],[4,["_lrot"],-9,[3,-0.6830127018922194,0.1830127018922193,0.6830127018922193,0.18301270189221933]],[4,["_euler"],-10,[1,-150,90,0]]]],0]],[0,["4fxBaRzUVfl7yP7REtxF12"]],[32,"food_shield_02",3,[[10,-13,[1,"fe2aO1wRxLR4D85gWoehT6"],[1],[7],2]],[27,"a52mNNiU5BnrGSWXahqxK8",3,3],[1,-1,0.45,0],[3,-0.6830127018922194,-0.1830127018922193,-0.6830127018922193,0.18301270189221933],[1,-150,-90,0]]],0,[0,3,1,0,0,1,0,0,1,0,0,1,0,-1,3,0,3,1,0,12,1,0,1,4,0,1,4,0,1,4,0,-1,5,0,3,3,0,0,5,0,8,1,13],[0,0,0,0],[7,-1,6,7],[53,54,55,53]],[[{"name":"skinbtn","rect":{"x":0,"y":0,"width":550,"height":179},"offset":{"x":0,"y":0},"originalSize":{"width":550,"height":179},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[169]],[[[14,".bin",402916057,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":18144,"length":1512,"count":378,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":18144,"count":378,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.47761270403862,-0.05840218812227249,-0.5371884107589722],"maxPosition",8,[1,0.47761270403862,0.05840218812227249,0.5371884107589722]]],-1],0,0,[],[],[]],[[[20],[21,"food_shield_01",[-2],[3,"a25tUyq7xTcJPeX+rDtaaI",-1,0]],[24,"food_shield_01",1,[[10,-3,[1,"2e2P8JJklVzZiLIQ1FtR7L"],[0],[7],1]],[3,"4fxBaRzUVfl7yP7REtxF12",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,3,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[54,55]],[[[23,"Food and props",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[10,9],[170,0]],[[{"name":"countdown3","rect":{"x":30,"y":20,"width":149,"height":209},"offset":{"x":1.5,"y":2.5},"originalSize":{"width":206,"height":254},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[171]],[[{"base":"2,2,0,0,2,0","rgbe":false,"mipmaps":[{"front":"e1b096a7-f4dc-4855-9092-87137c0ae1f4@b47c0@e9a6d","back":"e1b096a7-f4dc-4855-9092-87137c0ae1f4@b47c0@40c10","left":"e1b096a7-f4dc-4855-9092-87137c0ae1f4@b47c0@8fd34","right":"e1b096a7-f4dc-4855-9092-87137c0ae1f4@b47c0@74afd","top":"e1b096a7-f4dc-4855-9092-87137c0ae1f4@b47c0@bb97f","bottom":"e1b096a7-f4dc-4855-9092-87137c0ae1f4@b47c0@7d38f"}]}],[30],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[6],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[6],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[6],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[6],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[6],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[6],0,[],[],[]],[[[80,"1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{},{},{}],[[[{"roughness":1,"metallic":0,"SpecularIntensity":0.333},"mainColor",8,[4,1090513819],"emissive",8,[4,4093640704],"emissiveScale",8,[1,0,0,0]],{},{}],11,0,0]]],0,0,[0],[9],[0]],[[[195,"../Material/waterEffect/water",[{"hash":4232010801,"name":"../Material/waterEffect/water|unlit-vs:vert|unlit-fs:frag","glsl4":{"vert":"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\n  layout(location = 6) in vec4 a_matWorld0;\n  layout(location = 7) in vec4 a_matWorld1;\n  layout(location = 8) in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    layout(location = 9) in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  layout(location = 10) in float a_dyn_batch_id;\n  layout(set = 2, binding = 0) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(set = 2, binding = 0) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\n    int getVertexId() {\n      return gl_VertexIndex;\n    }\n  layout(set = 2, binding = 4) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    layout(set = 2, binding = 6) uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    layout(set = 2, binding = 7) uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    layout(set = 2, binding = 8) uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    layout(location = 4) in u32vec4 a_joints;\n  layout(location = 5) in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      layout(location = 12) in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(set = 2, binding = 3) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(set = 2, binding = 2) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    layout(set = 2, binding = 5) uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(set = 2, binding = 3) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nlayout(location = 0) out vec4 v_uv;\nlayout(location = 1) out vec3 v_normal;\nlayout(location = 2) out vec3 v_view;\nvec4 vert() {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 worldPos = matWorld * In.position;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  v_view = cc_cameraPos.xyz - worldPos.xyz;\n  v_uv.xy = worldPos.xz * 0.05  + cc_time.x * 0.1  ;\n  v_uv.zw = a_texCoord;\n  return cc_matProj * cc_matView * worldPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(location = 0) in vec4 v_uv;\nlayout(location = 1) in vec3 v_normal;\nlayout(location = 2) in vec3 v_view;\nlayout(set = 1, binding = 1) uniform sampler2D noiseTexture;\nlayout(set = 1, binding = 2) uniform samplerCube envTexture;\nlayout(set = 1, binding = 0) uniform Constant {\n  vec4 mainColor;\n  vec4 rimColor;\n};\nvec4 frag () {\n  float t = texture(noiseTexture, v_uv.xy).r;\n  vec3  n = normalize(v_normal);\n  vec3  v = normalize(v_view);\n  vec3  r = -v + t * 0.5;\n  vec3  reflectColor = texture(envTexture, r).rgb;\n  float fresnel = mix(0.15, 1.0, pow(1.0 - dot(n, v), 2.0));\n  vec3  color = mix(mainColor.rgb, reflectColor, fresnel);\n  color = mix(color, vec3(1.0), smoothstep(0.9, 0.901, t));\n  vec2 d = v_uv.zw - vec2(0.5, 0.5);\n  color = mix(color, rimColor.rgb, rimColor.a * smoothstep(0.0, 0.8, dot(d,d)));\n  return vec4(color, mainColor.a);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n  layout(std140) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(std140) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nout vec4 v_uv;\nout vec3 v_normal;\nout vec3 v_view;\nvec4 vert() {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 worldPos = matWorld * In.position;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  v_view = cc_cameraPos.xyz - worldPos.xyz;\n  v_uv.xy = worldPos.xz * 0.05  + cc_time.x * 0.1  ;\n  v_uv.zw = a_texCoord;\n  return cc_matProj * cc_matView * worldPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nin vec4 v_uv;\nin vec3 v_normal;\nin vec3 v_view;\nuniform sampler2D noiseTexture;\nuniform samplerCube envTexture;\nlayout(std140) uniform Constant {\n  vec4 mainColor;\n  vec4 rimColor;\n};\nvec4 frag () {\n  float t = texture(noiseTexture, v_uv.xy).r;\n  vec3  n = normalize(v_normal);\n  vec3  v = normalize(v_view);\n  vec3  r = -v + t * 0.5;\n  vec3  reflectColor = texture(envTexture, r).rgb;\n  float fresnel = mix(0.15, 1.0, pow(1.0 - dot(n, v), 2.0));\n  vec3  color = mix(mainColor.rgb, reflectColor, fresnel);\n  color = mix(color, vec3(1.0), smoothstep(0.9, 0.901, t));\n  vec2 d = v_uv.zw - vec2(0.5, 0.5);\n  color = mix(color, rimColor.rgb, rimColor.a * smoothstep(0.0, 0.8, dot(d,d)));\n  return vec4(color, mainColor.a);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp vec4 cc_time;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp vec4 cc_cameraPos;\n#if USE_INSTANCING\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n  uniform highp mat4 cc_matWorlds[10];\n#else\n  uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      attribute highp vec4 a_jointAnimInfo;\n    #endif\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    uniform highp vec4 cc_joints[90];\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvarying vec4 v_uv;\nvarying vec3 v_normal;\nvarying vec3 v_view;\nvec4 vert() {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 worldPos = matWorld * In.position;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  v_view = cc_cameraPos.xyz - worldPos.xyz;\n  v_uv.xy = worldPos.xz * 0.05  + cc_time.x * 0.1  ;\n  v_uv.zw = a_texCoord;\n  return cc_matProj * cc_matView * worldPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvarying vec4 v_uv;\nvarying vec3 v_normal;\nvarying vec3 v_view;\nuniform sampler2D noiseTexture;\nuniform samplerCube envTexture;\n  uniform vec4 mainColor;\n  uniform vec4 rimColor;\nvec4 frag () {\n  float t = texture2D(noiseTexture, v_uv.xy).r;\n  vec3  n = normalize(v_normal);\n  vec3  v = normalize(v_view);\n  vec3  r = -v + t * 0.5;\n  vec3  reflectColor = textureCube(envTexture, r).rgb;\n  float fresnel = mix(0.15, 1.0, pow(1.0 - dot(n, v), 2.0));\n  vec3  color = mix(mainColor.rgb, reflectColor, fresnel);\n  color = mix(color, vec3(1.0), smoothstep(0.9, 0.901, t));\n  vec2 d = v_uv.zw - vec2(0.5, 0.5);\n  color = mix(color, rimColor.rgb, rimColor.a * smoothstep(0.0, 0.8, dot(d,d)));\n  return vec4(color, mainColor.a);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[]},"locals":{"blocks":[{"name":"CCLocalBatched","defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"CCLocal","defines":["!USE_INSTANCING","!USE_BATCHING"]},{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":194,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":2}},"defines":[{"name":"USE_INSTANCING","type":"boolean","defines":[],"editor":{"elevated":true}},{"name":"USE_BATCHING","type":"boolean","defines":["!USE_INSTANCING"],"editor":{"elevated":true}},{"name":"USE_LIGHTMAP","type":"boolean","defines":["USE_INSTANCING"]},{"name":"CC_USE_MORPH","type":"boolean","defines":[]},{"name":"CC_MORPH_TARGET_COUNT","type":"number","defines":["CC_USE_MORPH"],"range":[2,8]},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_USE_SKINNING","type":"boolean","defines":[]},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean","defines":["CC_USE_SKINNING"]}],"blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"mainColor","type":16,"count":1},{"name":"rimColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"noiseTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]},{"name":"envTexture","type":31,"count":1,"stageFlags":16,"binding":2,"defines":[]}],"attributes":[{"name":"a_matWorld0","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING","USE_LIGHTMAP"]},{"name":"a_dyn_batch_id","type":13,"count":1,"stageFlags":1,"format":11,"location":10,"defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"a_position","type":15,"count":1,"stageFlags":1,"format":32,"location":0,"defines":[]},{"name":"a_normal","type":15,"count":1,"stageFlags":1,"format":32,"location":1,"defines":[]},{"name":"a_texCoord","type":14,"count":1,"stageFlags":1,"format":21,"location":2,"defines":[]},{"name":"a_tangent","type":16,"count":1,"stageFlags":1,"format":44,"location":3,"defines":[]},{"name":"a_vertexId","type":13,"count":1,"stageFlags":1,"format":11,"location":11,"defines":["CC_USE_MORPH"]},{"name":"a_joints","type":"u32vec4","count":1,"stageFlags":1,"location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","type":16,"count":1,"stageFlags":1,"format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":12,"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"]}],"varyings":[{"name":"v_uv","type":16,"count":1,"stageFlags":1,"location":0,"defines":[]},{"name":"v_normal","type":15,"count":1,"stageFlags":1,"location":1,"defines":[]},{"name":"v_view","type":15,"count":1,"stageFlags":1,"location":2,"defines":[]}]}],[{"name":"opaque","passes":[{"program":"../Material/waterEffect/water|unlit-vs:vert|unlit-fs:frag","properties":{"noiseTexture":{"value":"white","type":28},"envTexture":{"value":"white","type":31},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"type":"color"}},"rimColor":{"type":16,"value":[1,1,1,1],"editor":{"type":"color"}}}}]}]]],0,0,[],[],[]],[[{"name":"tap bar di","rect":{"x":0,"y":0,"width":1081,"height":198},"offset":{"x":0,"y":0},"originalSize":{"width":1081,"height":198},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[172]],[[{"name":"countdown","rect":{"x":29,"y":18,"width":150,"height":211},"offset":{"x":1,"y":3.5},"originalSize":{"width":206,"height":254},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[173]],[[{"name":"default_radio_button_off","rect":{"x":3,"y":3,"width":26,"height":26},"offset":{"x":0,"y":0},"originalSize":{"width":32,"height":32},"rotated":false,"capInsets":[13,13,13,13],"packable":true}],[0],0,[0],[4],[174]],[[{"name":"di","rect":{"x":0,"y":0,"width":1082,"height":532},"offset":{"x":0,"y":0},"originalSize":{"width":1082,"height":532},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[175]],[[{"name":"di-1","rect":{"x":0,"y":0,"width":1082,"height":532},"offset":{"x":0,"y":0},"originalSize":{"width":1082,"height":532},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[176]],[[[23,"terrain_05",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[10,9],[177,0]],[[[20],[21,"terrain_05",[-2],[3,"35qsdnuYxX5KuoRBS5ofmS",-1,0]],[24,"terrain_05",1,[[10,-3,[1,"0asUK/NwVaqK6UDizjo1fK"],[0],[7],1]],[3,"66hHjhVoxemoUDzsM/1907",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,3,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[178,37]],[[[14,".bin",2206778167,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":18768,"length":5796,"count":1449,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":18768,"count":391,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-13.52660083770752,-12.873780250549316,-0.0000027130126909469254],"maxPosition",8,[1,13.52660083770752,12.873780250549316,3.2294259071350098]]],-1],0,0,[],[],[]],[[{"name":"Sheild","rect":{"x":0,"y":0,"width":156,"height":184},"offset":{"x":0,"y":0},"originalSize":{"width":156,"height":184},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[179]],[[{"name":"Trophy 2","rect":{"x":0,"y":0,"width":258,"height":278},"offset":{"x":0,"y":0},"originalSize":{"width":258,"height":278},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[180]],[[{"name":"default_scrollbar_vertical_bg","rect":{"x":0,"y":0,"width":15,"height":30},"offset":{"x":0,"y":0},"originalSize":{"width":15,"height":30},"rotated":false,"capInsets":[4,10,4,10],"packable":true}],[0],0,[0],[4],[181]]]]
