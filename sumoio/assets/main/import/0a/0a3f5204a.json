[1,["f12a23c4-b924-4322-a260-3d982428f1e8@f9941","1baf0fc9-befa-459c-8bdd-af1a450a0319","c502ee74-48e0-40e5-8cb4-b62c15b37422","267c409b-2b3a-4289-9f70-5470c5927058@edcf8","ff44ca52-53ab-440c-ace1-58e43cd08e04","5b3954d4-c612-4c06-8ca9-279aba8822b3@ce824","28765e2f-040a-4c65-8e8c-f9d0bb79d863@f9941","5b3954d4-c612-4c06-8ca9-279aba8822b3@e4c18","938a9983-855f-46c2-885b-de5925a856f7@7bb43","7957aa75-969c-4a42-912e-5470e25a9f2f","938a9983-855f-46c2-885b-de5925a856f7@edcf8","938a9983-855f-46c2-885b-de5925a856f7@c9f64","0c8b4499-c839-4e43-ba9f-64a337bc3d2a","331e5ff9-de7f-4f96-8817-c7cb911b85a4@f9941","d9576acf-0e99-4ccd-8e33-a8b3289d3afd@f9941","62f215eb-846d-4ae3-9724-07d9fb7eba82@f9941","73dd95f0-1a24-4009-9d09-2836ccccb0b2@c56ca","505d76c4-4c4b-4785-840c-93d8290ce87b","20fab616-844c-42f5-ab29-cce53eecc609@edcf8","20fab616-844c-42f5-ab29-cce53eecc609@65956","20fab616-844c-42f5-ab29-cce53eecc609@dff12","e1b096a7-f4dc-4855-9092-87137c0ae1f4@b47c0","31130513-4996-451c-abd5-abc00585254e@ddf69","31130513-4996-451c-abd5-abc00585254e@1f586","f9f6f9ab-92bc-4d3f-a7ea-fde5d0cb9b90@ce824","340a10a6-f738-4af9-8e4d-62ac8c9a56bd@f9941","6d8b062e-a08c-4a0d-b7bf-7170609ef65f@5431f","8292ad74-909b-451a-aca2-5ca3bf62eaad@400b8","834e5579-3bab-4c13-97ad-3460ae6045b8@6d9cc","9a3222e7-3c81-428c-a03d-7012f994cc13@1f96e","583b9a92-944f-4157-bbc9-8a5420af7996","f0b0afbf-2a9d-4abd-a1ae-0dba5dd099e9","f764f79c-ee70-42c8-a523-b083a5e35d0f@bdd2e","6dfe7f93-7d15-44b2-8014-8c481dcc62e4","2ae91aba-d400-44eb-b7fb-5767562b7d72@f9941","4be2fff0-6451-43ef-b4aa-993908e5e877@f9941","951249e0-9f16-456d-8b85-a6ca954da16b@f9941","43a60d04-7332-4679-8173-1a88513e0f8e@f9941","8595f210-2f56-4703-b85a-5e12fabb7ddd@f9941","42d64e97-65be-467c-9935-e0f310bbc48d@f9941","163b0443-375e-4fcf-83bc-06161e727c5a@f9941","39978f54-1cce-4cfb-aa44-0a1cc19f9e24","bd5913aa-7a0c-4f90-afdd-872247860116@f9941","1263d74c-8167-4928-91a6-4e2672411f47@a804a","bdf5035f-9037-410c-87ea-272b7eb040be@edcf8","bdf5035f-9037-410c-87ea-272b7eb040be@72f66","bdf5035f-9037-410c-87ea-272b7eb040be@78ec5","dad23d76-39fc-4993-872a-80dfe60116ab@bddf3","dad23d76-39fc-4993-872a-80dfe60116ab@edcf8","dad23d76-39fc-4993-872a-80dfe60116ab@5a817","07921b39-16a1-4414-a33b-251251142964@6c48a","73dd95f0-1a24-4009-9d09-2836ccccb0b2@edcf8","73dd95f0-1a24-4009-9d09-2836ccccb0b2@12302","0ef4475e-451b-4cea-8c76-699dab384172@6c48a","163b0443-375e-4fcf-83bc-06161e727c5a@6c48a","1ba85cf0-e78c-4834-a06b-50f6bc83dda0@6c48a","20fab616-844c-42f5-ab29-cce53eecc609@08c96","28765e2f-040a-4c65-8e8c-f9d0bb79d863@6c48a","2b8e5e3e-8b41-4a57-be06-4d1c0ff284e3@6c48a","331e5ff9-de7f-4f96-8817-c7cb911b85a4@6c48a","340a10a6-f738-4af9-8e4d-62ac8c9a56bd@6c48a","bcbbf1d3-8e14-48e7-9718-9cbf8dd53422@6c48a","ebfb0386-227b-480b-92a5-324ba25f7a39","3e2d6272-516b-4b75-8cda-78499e5d3603@6c48a","42d64e97-65be-467c-9935-e0f310bbc48d@6c48a","4be2fff0-6451-43ef-b4aa-993908e5e877@6c48a","4f6fea55-98a2-4296-8b78-4e3e09deefea@6c48a","52fedcfe-0a29-45df-93ed-2399844ddfea@6c48a","5bbdbea8-dfbe-4f65-b134-77a4851940e0@6c48a","62f215eb-846d-4ae3-9724-07d9fb7eba82@6c48a","dbd55675-26fe-460b-a29b-79d2e8b8a488@6c48a","68be9e7b-d145-4493-8400-bb29e48836bd@6c48a","b3d05021-7952-49c9-a18d-d25c274f8876@f9941","4f6fea55-98a2-4296-8b78-4e3e09deefea@f9941","0ef4475e-451b-4cea-8c76-699dab384172@f9941","82c74ea8-c182-4f16-9d8d-6d822940cf72@f9941","772b1675-8960-4338-a78d-21e3a9fc6761@f9941","9728d3eb-8142-4fe8-9edb-649636311f23@f9941","6d8b062e-a08c-4a0d-b7bf-7170609ef65f@a9195","6d8b062e-a08c-4a0d-b7bf-7170609ef65f@ad07c","75f330d9-51cc-481f-84e3-31f660cc2b48@6c48a","772b1675-8960-4338-a78d-21e3a9fc6761@6c48a","796b7ea4-51f4-4e9e-ae5c-8419b2f912a0@6c48a","8292ad74-909b-451a-aca2-5ca3bf62eaad@b9beb","8292ad74-909b-451a-aca2-5ca3bf62eaad@2a720","82c74ea8-c182-4f16-9d8d-6d822940cf72@6c48a","834e5579-3bab-4c13-97ad-3460ae6045b8@44e39","834e5579-3bab-4c13-97ad-3460ae6045b8@2d246","8595f210-2f56-4703-b85a-5e12fabb7ddd@6c48a","8cdc2863-2346-46dd-8bfe-f8d71a19e116@6c48a","938a9983-855f-46c2-885b-de5925a856f7@08c96","9728d3eb-8142-4fe8-9edb-649636311f23@6c48a","97aa7e11-d3dd-4350-883a-045fa2e39e77@6c48a","99e9b18f-6b99-43e9-97ff-979bd3916762@6c48a","9a3222e7-3c81-428c-a03d-7012f994cc13@3bacc","9a3222e7-3c81-428c-a03d-7012f994cc13@108e0","e749370c-f09c-489c-8b29-f54bb049865a","d7cea968-f731-4860-8393-87e950c99cf1","d5852305-5051-4230-beff-bc14a5e739c3@f9941","20ac01ab-de29-4224-a988-8b242f4e60d3@edcf8","20ac01ab-de29-4224-a988-8b242f4e60d3@403ef","887f4e7f-d538-44f0-b57d-531f7127ee0e@f9941","267c409b-2b3a-4289-9f70-5470c5927058@99e73","53d7ec72-4655-40fd-946b-13f7efbe6979@f9941","f62f1052-955d-44e3-afc7-f1857572afec@edcf8","f62f1052-955d-44e3-afc7-f1857572afec@dc0c5","99cf0007-a52d-41cc-9137-028103fb0fe5@f9941","d71ea344-cbe4-4242-865f-9296afd3df6d@edcf8","d71ea344-cbe4-4242-865f-9296afd3df6d@47aab","4aa890a3-0a6a-4c9b-bf2e-738dfb3aef3d","bb729dd3-f14e-444c-95e1-6a0effc7e6ff","326c6cff-792f-4fb4-a724-85340d1bdc41","c066a9ea-8715-471f-a66e-f7cb2bf034dc","2f783af0-3c09-4539-893c-f76965bf3130","cc769363-3e03-4b92-92fa-72302cfb0be4","1b126e15-a49e-4b3e-97c7-522262b54f3c","6d8b062e-a08c-4a0d-b7bf-7170609ef65f@64fde","834e5579-3bab-4c13-97ad-3460ae6045b8@b8021","9a3222e7-3c81-428c-a03d-7012f994cc13@3726e","f764f79c-ee70-42c8-a523-b083a5e35d0f@b73ce","8292ad74-909b-451a-aca2-5ca3bf62eaad@ceda0","2b8e5e3e-8b41-4a57-be06-4d1c0ff284e3@f9941","8cdc2863-2346-46dd-8bfe-f8d71a19e116@f9941","75f330d9-51cc-481f-84e3-31f660cc2b48@f9941","fa4c57a7-1666-461d-a6b7-b0750ae368d8@f9941","3e2d6272-516b-4b75-8cda-78499e5d3603@f9941","e022dbfe-437e-4e79-ad24-58a449107d44@f9941","f06d390a-eeac-47d2-bebf-8ecd455894d3@f9941","97aa7e11-d3dd-4350-883a-045fa2e39e77@f9941","c9b24861-b529-4564-84bb-32212cc1a30c@f9941","07921b39-16a1-4414-a33b-251251142964@f9941","5bbdbea8-dfbe-4f65-b134-77a4851940e0@f9941","ab7ce96e-c2d8-47ae-81e1-163cc404172d@f9941","ca485e41-1e5f-4d6f-a125-31be87ed13da","e3915dd3-08df-4a4f-853c-e10b6ced71f0","52fedcfe-0a29-45df-93ed-2399844ddfea@f9941","1ba85cf0-e78c-4834-a06b-50f6bc83dda0@f9941","f26457fd-b948-4ea3-91e2-bb0bb7083021@f9941","ffb88a8f-af62-48f4-8f1d-3cb606443a43@f9941","fa9611c0-6c5b-40fc-9299-8f3ec085f596@f9941","6cec42e1-885d-48ab-b4af-627972f63451","b25aef4f-c7a1-41bb-a0b7-d246de3ea413@f9941","796b7ea4-51f4-4e9e-ae5c-8419b2f912a0@f9941","ec28dcf5-4881-4c06-8c84-889192a21aa3@f9941","f9ba877d-67b2-44de-9b82-653b18b5d0c5@f9941","99e9b18f-6b99-43e9-97ff-979bd3916762@f9941","c552aab5-852a-4d46-8c21-03295c3966a6@f9941","e732bff0-f6b9-4153-bba3-f8fd3bc272af","65ddfda7-493e-4e24-b8ed-4f63e9a248db","1263d74c-8167-4928-91a6-4e2672411f47@2e76e","3b5d357b-98c4-432c-b3ae-2747c6557688","68be9e7b-d145-4493-8400-bb29e48836bd@f9941","afc47931-f066-46b0-90be-9fe61f213428@f9941","b25aef4f-c7a1-41bb-a0b7-d246de3ea413@6c48a","b3d05021-7952-49c9-a18d-d25c274f8876@6c48a","bd5913aa-7a0c-4f90-afdd-872247860116@6c48a","bdf5035f-9037-410c-87ea-272b7eb040be@08c96","c552aab5-852a-4d46-8c21-03295c3966a6@6c48a","c9b24861-b529-4564-84bb-32212cc1a30c@6c48a","d9576acf-0e99-4ccd-8e33-a8b3289d3afd@6c48a","dad23d76-39fc-4993-872a-80dfe60116ab@08c96","e022dbfe-437e-4e79-ad24-58a449107d44@6c48a","ec28dcf5-4881-4c06-8c84-889192a21aa3@6c48a","f06d390a-eeac-47d2-bebf-8ecd455894d3@6c48a","f12a23c4-b924-4322-a260-3d982428f1e8@6c48a","f26457fd-b948-4ea3-91e2-bb0bb7083021@6c48a","f764f79c-ee70-42c8-a523-b083a5e35d0f@2a589","f764f79c-ee70-42c8-a523-b083a5e35d0f@92081","f9ba877d-67b2-44de-9b82-653b18b5d0c5@6c48a","fa4c57a7-1666-461d-a6b7-b0750ae368d8@6c48a","fa9611c0-6c5b-40fc-9299-8f3ec085f596@6c48a","ffb88a8f-af62-48f4-8f1d-3cb606443a43@6c48a"],["node","targetInfo","value","_spriteFrame","_textureSource","root","_mesh","asset","data","_parent","_effectAsset","_normalSprite","mainTexture","_font","_target","characterMaterial","frame","material","mesh","_defaultClip","target","_hoverSprite","_pressedSprite","_disabledSprite","_userDefinedFont","_barSprite","prefabRootNode","powerwProgress","nameLabel","noiseTexture","envTexture","bannr","_cameraComponent","soundNode","initialLayer","RZslider","RXslider","RYslider","Xslider","Zslider","Yslider","cameraDebug","gameScore","gameTimer","SquarelPatform","StarPlatform","InfinePlatform","CircularPlatform","TrianglePlatform","playerCamera","directionalLight","scene","_scrollView","player","bot","gummyBear","PoisionSize","PoisionSpeed","GainSpeed","Sheild","characterHud","goldenTrophy","normalTrophy","banner","soundOff","soundOn","SheildImg","GainSpeedImg","PoisionSpeedImg","_envmap"],["cc.SpriteFrame",["cc.Node",["_name","_layer","_id","_active","_objFlags","_components","_parent","_lpos","_children","_prefab","_lscale","_lrot","_euler","__editorExtras__"],-2,9,1,5,2,4,5,5,5,11],["cc.Widget",["_alignFlags","_isAbsTop","_isAbsLeft","_isAbsRight","_isAbsBottom","_left","_originalWidth","_bottom","_right","_top","_originalHeight","_verticalCenter","_isAbsVerticalCenter","_alignMode","_isAbsHorizontalCenter","node","_target","__prefab"],-12,1,1,4],["cc.Sprite",["_sizeMode","_type","_fillType","_fillStart","_fillRange","node","_spriteFrame","__prefab","_color","_fillCenter"],-2,1,6,4,5,5],["cc.Label",["_actualFontSize","_string","_fontSize","_lineHeight","_isSystemFontUsed","_cacheMode","_isBold","_isUnderline","_horizontalAlign","_overflow","_enableWrapText","node","__prefab","_font","_color"],-8,1,4,6,5],["cc.Node",["_name","_layer","_objFlags","__editorExtras__","_parent","_components","_lpos","_prefab","_lscale","_children"],-1,1,12,5,4,5,2],"cc.ImageAsset",["cc.UITransform",["node","_contentSize","__prefab","_anchorPoint"],3,1,5,4,5],["cc.Node",["_name","_id","_objFlags","__editorExtras__","_layer","_components","_prefab","_lpos","_children","_lscale","_parent"],-2,9,4,5,12,5,4],["cc.RigidBody",["_mass","_group","_angularDamping","_type","node","__prefab","_angularFactor"],-1,1,4,5],["cc.Animation",["playOnLoad","node","_clips","_defaultClip","__prefab"],2,1,3,6,4],["cc.PrefabInfo",["fileId","targetOverrides","root","asset","instance"],1,1,6,4],["cc.PrefabInstance",["fileId","propertyOverrides","prefabRootNode","mountedChildren","mountedComponents"],2,9,1,9,9],["cc.Mask",["_type","_alphaThreshold","node","_spriteFrame"],1,1,6],["cc.Material",["_states","_defines","_name","_techIdx","_props"],-1,12],["cc.Button",["_transition","node","_normalSprite","clickEvents","_normalColor","_target","_hoverSprite","_pressedSprite","_disabledSprite"],2,1,6,9,5,1,6,6,6],["cc.Camera",["_visibility","_name","_fov","_clearFlags","_orthoHeight","_projection","_priority","_far","_near","node","_color"],-6,1,5],["cc.Prefab",["_name"],2],["cc.Node",["_objFlags","_parent","__editorExtras__","_name","_prefab","_children","_components","_lpos","_lscale"],-1,4,9,9,5,5],["cc.Scene",["_name","_children","_globals","_prefab"],2,2,4,4],["cc.ShadowsInfo",["_type","_enabled","_fixedArea","_pcf","_bias","_normalBias","_near","_far","_orthoSize","_saturation","_shadowColor","_size"],-7,5,5],["cc.SkyboxInfo",["_enabled","_envmap"],2,6],["cc.FogInfo",["_fogStart","_fogEnd","_fogAtten","_fogColor"],0,5],["cc.MeshRenderer",["_name","node","_materials","lightmapSettings","_mesh","__prefab"],2,1,3,4,6,4],["cc.ProgressBar",["_mode","_progress","_reverse","node","_barSprite","__prefab"],0,1,1,4],["cc.RichText",["_lineHeight","_string","_fontSize","_isSystemFontUsed","node","_font","_userDefinedFont"],-1,1,6,6],"cc.TextureCube",["cc.Node",["_name","_parent","_components","_lpos"],2,1,2,5],["cc.SceneGlobals",["ambient","shadows","_skybox","fog"],3,4,4,4,4],["cc.AmbientInfo",[],3],["cc.PrefabInfo",["fileId","root","asset"],2,1,1],["cc.CompPrefabInfo",["fileId"],2],["2be5eRvXYVF0LgrrJn5x1sj",["node","__prefab"],3,1,4],["cc.CapsuleCollider",["_radius","_cylinderHeight","node","__prefab","_center"],1,1,4,5],["cc.TargetInfo",["localID"],2],["cc.PrefabInstance",["fileId","prefabRootNode","mountedComponents","propertyOverrides"],1,9,9],["cc.MountedChildrenInfo",["targetInfo","nodes"],3,4,2],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,1],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,8],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,4],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,8],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,6],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,1],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,6],["cc.ModelLightmapSettings",[],3],["cc.Mesh",["_native","_hash","_struct"],1,11],["cc.RenderRoot2D",["node","__prefab"],3,1,4],["8d0a7RNVcpBfqZHaK6QYt4a",["node","__prefab","nameLabel","powerwProgress"],3,1,4,1,1],["a3addpkf1lOCoVufXlKk5xR",["node","__prefab"],3,1,4],["882e8b6yNlDmpl3SZwb5Qhi",["node","panel","trophy","bannr"],3,1,3,3,1],["cc.SceneAsset",["_name"],2],["cc.Canvas",["node","_cameraComponent"],3,1,1],["62ee6KEwbpJNKAJo5TmXRgo",["node","touchEventCallBack","sliderEventCallBack","gameStartEventCallBack","cameraDebug","Yslider","Zslider","Xslider","RYslider","RXslider","RZslider","initialLayer","soundNode","soundOff","soundOn"],3,1,9,9,9,1,1,1,1,1,1,1,1,1,6,6],["cc.ClickEvent",["_componentId","handler","target"],1,1],["607a6e7tMFM2o0KKgjUTxNF",["node","goldenTrophy","normalTrophy","banner"],3,1,6,6,6],["48d51HOjkBIObFppQAdshF3",["node","botPrefabList","playerPrefabList","foodPrefabList","bagAcceesories","headPhoneAcceesories","gogglesAcceesories","targetAcceesories","directionalLight","playerCamera","TrianglePlatform","CircularPlatform","InfinePlatform","StarPlatform","SquarelPatform","gameTimer","gameScore","gameOver","powerUpProgress","player","bot","gummyBear","PoisionSize","PoisionSpeed","GainSpeed","Sheild","characterHud","SheildImg","GainSpeedImg","PoisionSpeedImg"],3,1,9,9,3,9,9,9,9,1,1,1,1,1,1,1,1,1,1,1,6,6,6,6,6,6,6,6,6,6,6],["CharacterGame",["characterMaterial"],3,6],["CharacterItem",["frame","material","mesh"],3,6,6,6],["cc.Layout",["_layoutType","_paddingTop","_paddingBottom","_spacingY","_affectedByScale","node"],-2,1],["cc.DirectionalLight",["node","_staticSettings"],3,1,4],["cc.StaticLightSettings",[],3],["cc.MountedComponentsInfo",["targetInfo","components"],3,4,9],["cc.MeshCollider",["_mesh"],3,6],["cc.BoxCollider",["node"],3,1],["cc.Slider",["_progress","node","_handle"],2,1,1],["cc.ScrollBar",["_direction","node","_handle"],2,1,1],["cc.ScrollView",["bounceDuration","brake","horizontal","node","_content","_verticalScrollBar"],0,1,1,1],["77e533EezxA/6Pf2Q54j4sW",["node","__prefab"],3,1,4],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[34,0,2],[39,0,1,2,3],[31,0,2],[7,0,1,1],[38,0,1,2,2],[37,0,1,2,3],[30,0,1,2,2],[41,0,1,2,2],[1,0,1,6,5,7,3],[42,0,1,2,2],[40,0,1,2,2],[44,1],[23,1,5,2,3,4,1],[7,0,1,3,1],[3,5,6,1],[11,0,2,4,3,2],[7,0,2,1,1],[3,1,0,5,6,3],[45,0,1,2,3],[17,0,2],[17,1],[1,0,8,9,2],[1,0,6,5,9,11,12,2],[14,2,0,1,4,4],[5,2,3,4,7,3],[11,0,2,3,2],[33,0,1,2,3,4,3],[43,0,1,2,2],[53,0,1,2,3],[5,0,1,4,9,5,6,3],[5,0,1,4,5,6,3],[1,0,1,6,9,7,11,10,12,3],[1,0,6,5,9,7,11,12,2],[32,0,1,1],[12,0,2,3,1,2],[36,0,1,1],[3,0,5,2],[4,1,0,2,6,7,11,14,6],[4,1,8,0,2,11,14,5],[15,1,4,5,2,1],[56,0,1],[64,0,1,2,2],[9,1,0,4,5,3],[9,3,2],[3,0,5,6,2],[61,0,1,1],[62,0,1],[8,0,8,5,6,7,9,2],[1,0,1,6,5,9,7,3],[1,0,1,6,5,7,10,3],[1,0,3,1,6,5,10,4],[57,0,1,2,1],[1,0,8,5,9,7,10,2],[1,0,6,8,5,9,2],[1,0,1,6,8,5,7,10,3],[1,0,1,6,8,5,7,3],[1,0,6,8,5,7,2],[1,0,1,6,8,5,3],[35,0,1,2,3,3],[23,0,1,2,3,4,2],[4,1,0,2,3,4,11,14,13,6],[2,0,5,2,15,17,16,4],[15,0,1,3,4,5,2,6,7,8,2],[8,2,3,6,3],[1,4,6,9,13,2],[1,0,3,6,8,5,3],[5,0,1,4,5,6,8,3],[28,0,1,2,3,1],[29,1],[9,1,2,4,5,6,3],[12,0,2,1,2],[12,0,4,1,2],[7,0,2,1,3,1],[7,0,1],[3,1,0,5,3],[4,0,2,3,5,11,12,5],[14,3,0,1,4,4],[2,0,1,15,16,3],[2,0,7,4,15,16,4],[2,0,8,7,3,4,15,16,6],[15,1,3,2,1],[25,0,1,2,3,4,5],[8,0,1,10,8,5,6,7,9,3],[8,0,4,5,7,3],[1,0,3,6,8,5,9,7,3],[1,0,6,5,9,2],[1,0,3,6,5,9,7,3],[1,0,1,8,5,9,7,3],[1,0,1,2,8,5,7,4],[1,0,1,8,5,7,3],[1,0,6,8,5,2],[1,0,1,8,5,10,3],[1,0,3,1,6,8,5,7,4],[1,0,2,6,5,3],[1,0,2,6,5,7,11,12,3],[1,0,2,6,8,3],[1,0,1,6,5,3],[1,0,4,1,6,5,4],[1,0,2,6,5,7,10,3],[1,0,2,6,8,5,7,10,3],[1,0,6,5,7,11,12,2],[1,0,6,5,7,10,2],[1,0,3,2,6,5,7,11,12,4],[18,0,1,2,4,4],[18,3,5,6,4,7,8,2],[5,0,4,5,7,6,2],[5,0,4,5,7,6,8,2],[5,0,1,4,9,5,6,8,3],[5,0,1,4,5,3],[27,0,1,2,3,2],[19,0,1,2,2],[19,0,1,3,2,2],[20,1],[20,0,1,2,3,4,5,6,7,8,9,10,11,11],[21,1],[21,0,1,2],[22,1],[22,0,1,2,3,4],[11,1,2],[9,0,4,5,2],[46,0,1,1],[47,0,1,2,3,1],[10,1,4,2,3,1],[10,0,1,2,3,2],[10,1,2,3,1],[10,1,2,1],[24,0,1,2,3,5,4,4],[24,0,1,2,3,4,4],[13,0,1,2,3],[13,0,1,2,3,3],[13,2,1],[3,1,0,5,7,8,6,3],[3,1,2,0,3,4,5,7,8,9,6],[3,5,7,6,1],[3,5,7,1],[3,0,5,8,2],[3,1,2,0,3,4,5,9,6],[4,1,0,5,11,12,4],[4,1,0,2,3,4,11,12,13,6],[4,1,0,2,3,4,11,12,14,13,6],[4,1,0,3,4,11,12,14,13,5],[4,1,0,2,3,11,5],[4,1,0,2,3,9,10,4,11,13,8],[14,0,1,4,3],[48,0,1,1],[49,0,1,2,3,1],[2,0,5,11,2,15,17,16,5],[2,0,15,2],[2,0,9,3,1,6,15,6],[2,0,2,3,1,4,6,10,15,16,8],[2,0,6,10,15,16,4],[2,0,8,7,3,4,15,6],[2,0,9,7,1,4,10,15,7],[2,0,2,3,1,6,15,16,6],[2,0,5,8,7,2,3,4,15,16,8],[2,0,5,8,7,2,3,4,6,15,16,9],[2,0,10,13,15,4],[2,0,7,2,3,1,4,6,10,15,9],[2,0,5,8,3,1,4,6,10,15,16,9],[2,0,8,7,3,4,12,15,16,7],[2,0,5,8,11,14,12,6,15,16,8],[2,0,9,1,15,16,4],[2,0,5,9,2,1,15,6],[2,0,5,9,11,2,1,12,15,8],[2,0,5,9,2,1,15,16,6],[50,0,2],[51,0,1,1],[52,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,1],[54,0,1,2,3,1],[55,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,1],[58,0,1,2,3,4,5,6],[59,0,1,1],[60,1],[25,0,1,2,3,4,5,6,5],[63,0,1],[16,1,2,3,0,9,10,5],[16,5,6,4,7,3,0,9,10,7],[16,1,2,4,8,0,9,10,6],[65,0,1,2,2],[66,0,1,2,3,4,5,4],[67,0,1,1],[68,0,1,2,4]],[[[{"name":"QUIT","rect":{"x":0,"y":0,"width":670,"height":162},"offset":{"x":0,"y":0},"originalSize":{"width":670,"height":162},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[50]],[[[19,"PoisionSize"],[82,"PoisionSize","d27dgI4fNOV4Fw4lznVsDL",[110,"New Node",[-8],[67,[68],[112],[114],[116]]],[[-5,[31,"foodNode",8388608,-7,[25,"69PvosUUxK/IP6afBlkc9K",-6,9],[1,0.667,5.733,1],[3,0,0.7071067811865475,0,0.7071067811865476],[1,20,20,20],[1,0,90,0]]],1,4],[[119,0.0001,-2,[2,"afhWzn74lLnoQrBm8+3vnx"]],[33,-3,[2,"acEYzk36FHtK9IU141o3JI"]],[26,15,15,-4,[2,"b1p0PXi4lD6Joew/Jqh1dc"],[1,0,10,0]]],[25,"7fJOPvAvBaN4HLZl7x/4CB",-1,10],[1,-11,0,-5],[1,0.06,0.06,0.06]],[47,"PoisionSize",[[-13,[31,"foodNode",8388608,-15,[6,"69PvosUUxK/IP6afBlkc9K",-14,0],[1,0.667,5.733,1],[3,0,0.7071067811865475,0,0.7071067811865476],[1,20,20,20],[1,0,90,0]]],1,4],[[42,4,0.0001,-10,[2,"afhWzn74lLnoQrBm8+3vnx"]],[33,-11,[2,"acEYzk36FHtK9IU141o3JI"]],[26,15,15,-12,[2,"b1p0PXi4lD6Joew/Jqh1dc"],[1,0,10,0]]],[6,"7fJOPvAvBaN4HLZl7x/4CB",-9,0],[1,-11,0,-5],[1,0.06,0.06,0.06]],[0,["6bH8t7wehYMrRlpqW5xKeO"]],[103,0,null,null,[15,"c8+zD849FTGYXtiYPrV36q",-25,[34,"542R/XgCBAop3R0dUNV0Ot",1,[[35,[0,["c8+zD849FTGYXtiYPrV36q"]],[-24]]],[[5,"food_mushroom_01",["_name"],-16],[4,["_lpos"],-17,[1,0,13.75,0]],[4,["_lrot"],-18,[3,0,0,0,1]],[4,["_euler"],-19,[1,0,0,0]],[4,["_lscale"],-20,[1,10,10,10]],[4,["_lpos"],-21,[1,1,0.01,0]],[4,["_lrot"],-22,[3,-0.5792279653395692,-0.4055797876726388,-0.5792279653395691,0.40557978767263886]],[4,["_euler"],-23,[1,-110,-90,0]]]],4]],[0,["c8+zD849FTGYXtiYPrV36q"]],[64,0,2,[15,"6bH8t7wehYMrRlpqW5xKeO",-30,[34,"90LzH8oo5BRbqM22tfN/8C",2,[[35,[0,["6bH8t7wehYMrRlpqW5xKeO"]],[-29]]],[[5,"food_skull_01",["_name"],3],[4,["_lpos"],3,[1,0,13.749999999999996,1.4210854715202004e-14]],[4,["_lrot"],3,[3,0,0,0,1]],[4,["_euler"],3,[1,0,0,0]],[4,["_lrot"],-26,[3,-0.5792279653395692,0.4055797876726388,0.5792279653395691,0.40557978767263886]],[4,["_euler"],-27,[1,-110,90,0]],[4,["_lpos"],-28,[1,1,0.01,0]],[4,["_lscale"],3,[1,10,10,10]]]],0],[{},"mountedRoot",1,4]],[64,0,1,[15,"6bH8t7wehYMrRlpqW5xKeO",-39,[34,"90LzH8oo5BRbqM22tfN/8C",1,[[35,[0,["6bH8t7wehYMrRlpqW5xKeO"]],[-38]]],[[5,"food_skull_01",["_name"],-31],[4,["_lpos"],-32,[1,0,13.749999999999996,1.4210854715202004e-14]],[4,["_lrot"],-33,[3,0,0,0,1]],[4,["_euler"],-34,[1,0,0,0]],[4,["_lrot"],-35,[3,-0.5792279653395692,0.4055797876726388,0.5792279653395691,0.40557978767263886]],[4,["_euler"],-36,[1,-110,90,0]],[4,["_lpos"],-37,[1,1,0.01,0]]]],5],[{},"mountedRoot",1,4]],[0,["6bH8t7wehYMrRlpqW5xKeO"]],[0,["46twUe4M1aRarlrApFO9pT"]],[0,["46twUe4M1aRarlrApFO9pT"]],[0,["09FQzaei5RkrVKCZkqXHx5"]],[32,"food_skull_02",6,[[12,-40,[2,"abgEbdCSpFWau0bvRywTG5"],[1],[11],2]],[25,"7eKGAIBR9JZrUleUdO0Kai",6,3],[1,-1,-0.015,0],[3,-0.5792279653395692,-0.4055797876726388,-0.5792279653395691,0.40557978767263886],[1,-110,-90,0]],[32,"food_skull_02",7,[[12,-41,[2,"abgEbdCSpFWau0bvRywTG5"],[6],[11],7]],[25,"7eKGAIBR9JZrUleUdO0Kai",7,8],[1,-1,-0.015,0],[3,-0.5792279653395692,-0.4055797876726388,-0.5792279653395691,0.40557978767263886],[1,-110,-90,0]],[32,"food_mushroom_02",4,[[12,-42,[2,"7bLD8rK0JMl7f6yPDqGz3h"],[11],[11],12]],[25,"36ZqEtFapCZbfobfvzERUO",4,13],[1,-1,-0.015,0],[3,-0.7462478063070415,0.056405662432178,0.33782363422946166,0.5707957646860341],[1,-111.021,36.608,17.546]]],0,[0,5,1,0,0,1,0,0,1,0,0,1,0,-1,7,0,5,1,0,9,1,0,-1,1,0,5,2,0,0,2,0,0,2,0,0,2,0,-1,6,0,5,2,0,9,2,0,1,5,0,1,5,0,1,5,0,1,5,0,1,5,0,1,11,0,1,11,0,1,11,0,-1,14,0,5,4,0,1,9,0,1,9,0,1,9,0,-1,12,0,5,6,0,1,8,0,1,8,0,1,8,0,1,8,0,1,10,0,1,10,0,1,10,0,-1,13,0,5,7,0,0,12,0,0,13,0,0,14,0,8,2,42],[0,0,0,0,0,0,0,0,0,0,0,0,0,0],[7,-1,6,7,7,7,-1,6,7,7,7,-1,6,7],[8,10,11,8,16,8,10,11,8,12,12,51,52,16]],[[{"name":"3","rect":{"x":0,"y":0,"width":883,"height":104},"offset":{"x":0,"y":0},"originalSize":{"width":883,"height":104},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[53]],[[[18,".bin",4094896171,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1344,"length":72,"count":36,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":1344,"count":24,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-0.5,-0.5],"maxPosition",8,[1,0.5,0.5,0.5]]],-1],0,0,[],[],[]],[[{"name":"skinbtnOC","rect":{"x":0,"y":0,"width":561,"height":191},"offset":{"x":0,"y":0},"originalSize":{"width":561,"height":191},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[54]],[[[19,"characterHud"],[52,"characterHud",[-8,-9,-10],[[16,-2,[2,"a4+vibwdtCDrwy/CVtdJhU"],[5,226.79,60]],[120,-3,[2,"0aPUXzHilPua/KgxHlapPV"]],[121,-6,[2,"60PCFleA1B2IcrOYYVJZ80"],-5,-4],[122,-7,[2,"44MdiTm4pDI55o/HKphcoS"],[1],2]],[6,"1aHlA5BnNDZL4RSDXC4EuK",-1,0],[1,0,3.5,0],[1,0.01,0.01,0.01]],[84,"powerup",false,1,[-12,-13],[[16,-11,[2,"d7AwWS/ilCV6i9iC2l3bQW"],[5,126,126]]],[6,"d9FRNlrhlEV4n6WNKC77yx",1,0],[1,0,114,0]],[53,"progress",2,[-18],[[16,-14,[2,"95+QLJYMlNF7qC0F9Kg2ox"],[5,126,126]],[126,2,1,true,-16,[2,"796sEhN5JBGKgKKq0niicw"],-15],[128,1,0.3,-17]],[6,"92CiW5/XtGlZBx4rlGAdbW",1,0]],[53,"counterBg",2,[-21],[[16,-19,[2,"9aZZN8C+JExbxc5ZIhVNM4"],[5,80,80]],[131,1,0,-20,[2,"57+wbwFV9Hj4uUcZQT1VXE"],[4,4278190080],0]],[6,"a9i66HPoJFYqctlWXp+3vD",1,0]],[105,"name",1,[[[16,-22,[2,"4fblyNZClNwpQb2ZZUKU0z"],[5,126.77,60]],-23],4,1],[6,"27z0BDq6JEyKy6TiZdKU6t",1,0],[1,0,3.5,0]],[106,"maskSprite",3,[[[16,-24,[2,"86x0rhPGxKkYl5WFLjKlKB"],[5,63,75.6]],-25],4,1],[6,"92wNtRlw9AuqISYZonqfNm",1,0],[1,1.2,0,0],[1,2,2,1]],[85,"counter",4,[[16,-26,[2,"9fxnRd92tHLaio8/h8uI2l"],[5,22.25,40]],[137,"0",40,2,-27,[2,"514R/SarxIMLZOyVYQvIiW"]]],[6,"db5EA9I7tL6qfWnzS/Dkqk",1,0]],[86,"score",false,1,[[16,-28,[2,"03ACL6q1RO2rvvYftGtTyK"],[5,126.77,60]],[75,60,60,60,2,-29,[2,"994F9imTxKnrQDL3yHB6BL"]]],[6,"41H+G3GypGVKETPTcc616y",1,0],[1,0,3.5,0]],[75,60,60,60,2,5,[2,"fbdFibGulLTqCUh6UUS/Hh"]],[132,3,2,0,1,-1,6,[2,"f7dgL2mdBEoqW+bCU5LJu5"],[4,4280942336],[0,0.5,0.5]]],0,[0,5,1,0,0,1,0,0,1,0,27,2,0,28,9,0,0,1,0,0,1,0,-1,5,0,-2,2,0,-3,8,0,0,2,0,-1,3,0,-2,4,0,0,3,0,25,10,0,0,3,0,0,3,0,-1,6,0,0,4,0,0,4,0,-1,7,0,0,5,0,-2,9,0,0,6,0,-2,10,0,0,7,0,0,7,0,0,8,0,0,8,0,8,1,29],[0,0,0,10],[3,-1,19,3],[13,17,17,13]],[[{"name":"progress","rect":{"x":0,"y":0,"width":515,"height":508},"offset":{"x":-0.5,"y":0},"originalSize":{"width":516,"height":508},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[55]],[[[18,".bin",2404708901,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":11712,"length":1296,"count":324,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":11712,"count":244,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.3841770887374878,-0.06552372872829437,-0.5702511668205261],"maxPosition",8,[1,0.38417720794677734,0.06552373617887497,0.5702511668205261]]],-1],0,0,[],[],[]],[[[20],[21,"food_lightning_01",[-2],[6,"d0EpRplH9fFpRIADPk0YQ1",-1,0]],[22,"food_lightning_01",1,[[12,-3,[2,"126Ft8iiVXtq0eD/Cqq/P7"],[0],[11],1]],[6,"7bHAAq0bJf567Q9EpHfI5p",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,5,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[18,19]],[[[23,"Food and props",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[12,10],[56,1]],[[{"name":"default_scrollbar_bg","rect":{"x":0,"y":0,"width":30,"height":15},"offset":{"x":0,"y":0},"originalSize":{"width":30,"height":15},"rotated":false,"capInsets":[10,4,10,4],"packable":true}],[0],0,[0],[4],[57]],[[{"name":"Last man standing wins","rect":{"x":0,"y":0,"width":665,"height":54},"offset":{"x":0,"y":0},"originalSize":{"width":665,"height":54},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[58]],[[[19,"GainSpeed"],[47,"GainSpeed",[[-5,[31,"foodNode",8388608,-7,[6,"71NezUM1FPdZw7NnEEYLJd",-6,0],[1,0.667,5.733,1],[3,0,0.7071067811865475,0,0.7071067811865476],[1,20,20,20],[1,0,90,0]]],1,4],[[42,4,0.0001,-2,[2,"afhWzn74lLnoQrBm8+3vnx"]],[33,-3,[2,"acEYzk36FHtK9IU141o3JI"]],[26,15,15,-4,[2,"27wjRGYsdG679/p1yOTr+F"],[1,0,10,0]]],[6,"7fJOPvAvBaN4HLZl7x/4CB",-1,0],[1,-11,0,-5],[1,0.06,0.06,0.06]],[24,0,null,1,[15,"d0EpRplH9fFpRIADPk0YQ1",-9,[34,"e4OzQikqlAYYmggX9dUIO/",1,[[35,[0,["d0EpRplH9fFpRIADPk0YQ1"]],[-8]]],[[1,"food_lightning_01",["_name"],[0,["d0EpRplH9fFpRIADPk0YQ1"]]],[10,["_lpos"],[0,["d0EpRplH9fFpRIADPk0YQ1"]],[1,0,9.867,0]],[10,["_lrot"],[0,["d0EpRplH9fFpRIADPk0YQ1"]],[3,0,0,0,1]],[10,["_euler"],[0,["d0EpRplH9fFpRIADPk0YQ1"]],[1,0,0,0]],[10,["_lscale"],[0,["d0EpRplH9fFpRIADPk0YQ1"]],[1,10,10,10]],[10,["_lrot"],[0,["7bHAAq0bJf567Q9EpHfI5p"]],[3,0.6830127018922194,-0.1830127018922193,0.6830127018922193,0.18301270189221933]],[10,["_euler"],[0,["7bHAAq0bJf567Q9EpHfI5p"]],[1,150,-90,0]],[10,["_lpos"],[0,["7bHAAq0bJf567Q9EpHfI5p"]],[1,0.753,0.417,0]]]],0]],[32,"food_lightning_02",2,[[12,-10,[2,"84z8OI3/1KQpM6pON5hWW+"],[1],[11],2]],[25,"e1r9oHq81CdpJwqkO1T3xs",2,3],[1,-0.753,0.417,0],[3,0.6830127018922194,0.1830127018922193,-0.6830127018922193,0.18301270189221933],[1,150,90,0]]],0,[0,5,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,5,1,0,9,1,0,-1,3,0,5,2,0,0,3,0,8,1,10],[0,0,0,0],[7,-1,6,7],[20,18,19,20]],[[[19,"GummyBear"],[104,"GummyBear",[[31,"foodNode",8388608,-6,[6,"2bUrP05I1NJbT4+3O20SI6",-5,0],[1,0.667,5.733,1],[3,0,0.7071067811865475,0,0.7071067811865476],[1,20,20,20],[1,0,90,0]]],[[42,4,0.0001,-2,[2,"afhWzn74lLnoQrBm8+3vnx"]],[33,-3,[2,"acEYzk36FHtK9IU141o3JI"]],[26,15,15,-4,[2,"fbpqiW+8BBRKNaKQ1m4+U8"],[1,0,10,0]]],[6,"7fJOPvAvBaN4HLZl7x/4CB",-1,0],[1,-11,0,-5],[1,0.06,0.06,0.06]]],0,[0,5,1,0,0,1,0,0,1,0,0,1,0,5,1,0,9,1,0,8,1,6],[],[],[]],[[{"name":"progressBg","rect":{"x":1,"y":1,"width":224,"height":224},"offset":{"x":0.5,"y":-0.5},"originalSize":{"width":225,"height":225},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[59]],[[{"name":"4","rect":{"x":0,"y":0,"width":883,"height":104},"offset":{"x":0,"y":0},"originalSize":{"width":883,"height":104},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[60]],[[[143,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainColor",8,[4,4294959104],"rimColor",8,[4,4289483264],"noiseTexture",6,0,"envTexture",6,1]],11]]],0,0,[0,0,0],[29,30,10],[61,21,62]],[[{"name":"initialDragPopup","rect":{"x":0,"y":0,"width":952,"height":464},"offset":{"x":0,"y":0},"originalSize":{"width":952,"height":464},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[63]],[[{"name":"Trophy","rect":{"x":0,"y":0,"width":259,"height":278},"offset":{"x":0,"y":0},"originalSize":{"width":259,"height":278},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[64]],[[[19,"Player"],[63,0,null,[15,"59R3ZReSlZU7cMWe65LSQi",-59,[70,"63Jh77sxtCSYUnqAPeP98G",-58,[[5,"Penguine_Anim",["_name"],-1],[4,["_lpos"],-2,[1,0,0,0]],[4,["_lrot"],-3,[3,0,0,0,1]],[4,["_euler"],-4,[1,0,0,0]],[7,["_defaultClip"],-5,1],[5,false,["playOnLoad"],-6],[7,["_materials","0"],-7,2],[9,["_skinningRoot"],-9,-8],[7,["_materials","0"],-10,3],[9,["_skinningRoot"],-12,-11],[7,["_materials","0"],-13,4],[9,["_skinningRoot"],-15,-14],[7,["_materials","0"],-16,5],[9,["_skinningRoot"],-18,-17],[7,["_materials","0"],-19,6],[9,["_skinningRoot"],-21,-20],[5,false,["_active"],-22],[7,["_materials","0"],-23,7],[9,["_skinningRoot"],-25,-24],[27,["_materials","0"],[0,["c8Mf8OJd9SSopbw7I4dmAK"]],8],[27,["_materials","0"],[0,["52W5PEObtTbK2Gr8yJqCzT"]],9],[27,["_materials","0"],[0,["ac8i6xedBXE6SPaMdY2WcE"]],10],[27,["_materials","0"],[0,["819cNtzSlQ1awf6gO8ffno"]],11],[5,8388608,["_layer"],-26],[1,8388608,["_layer"],[0,["96yw4Q85dVxptKWW2wqF1D"]]],[1,8388608,["_layer"],[0,["c3bbXflZZcNIM9QP0P/TNQ"]]],[1,8388608,["_layer"],[0,["2dV7OdxyhaIruREgjqht4J"]]],[1,8388608,["_layer"],[0,["6ch1kxAMZcdKYx+ifKzvKX"]]],[1,8388608,["_layer"],[0,["8fQ+mHA8xdG74tm4o0kY52"]]],[5,8388608,["_layer"],-27],[5,8388608,["_layer"],-28],[1,8388608,["_layer"],[0,["3ffWIdHGlahIh485X1Qy51"]]],[5,8388608,["_layer"],-29],[1,8388608,["_layer"],[0,["bdyUN4J0FTUpY69AAmjkUK"]]],[1,8388608,["_layer"],[0,["1dwgRR+DhR1bKrV22k3Q0m"]]],[1,8388608,["_layer"],[0,["8avRX+N8lUVI1h+NE3Sgg0"]]],[1,8388608,["_layer"],[0,["694kIJvZpfOI+7rGLgKNWY"]]],[1,8388608,["_layer"],[0,["68NhpExhtfw6GeRnEIVJ+H"]]],[5,8388608,["_layer"],-30],[5,8388608,["_layer"],-31],[5,8388608,["_layer"],-32],[5,8388608,["_layer"],-33],[1,8388608,["_layer"],[0,["a4yLL3/0dYR4ucE0kJtkG6"]]],[1,8388608,["_layer"],[0,["74A0GcUGFZVKYEknTFiqyT"]]],[1,8388608,["_layer"],[0,["277bjaV/1dZormCHG8jRH4"]]],[1,8388608,["_layer"],[0,["274EYf5TFWU4doC6fYRN70"]]],[1,8388608,["_layer"],[0,["c0Rcs1WgNRRrJ+tzsu0urQ"]]],[1,8388608,["_layer"],[0,["55GZhWbz5auZhcrCp3QDHt"]]],[1,8388608,["_layer"],[0,["80/nQRwsNaMaIOSbtpL9GB"]]],[1,8388608,["_layer"],[0,["3dChcWtL5UaaJLZfMNdrab"]]],[1,8388608,["_layer"],[0,["d6RdgISadcMZXx6DCiYt1n"]]],[1,8388608,["_layer"],[0,["8flcT1k0BQpqNhjo7jxtgi"]]],[1,8388608,["_layer"],[0,["91abixZWdZ/aistBp2XL6i"]]],[1,8388608,["_layer"],[0,["db9N/nxB1QNpHixWNxASTY"]]],[1,8388608,["_layer"],[0,["46bK5nNUBRdZeL4RGxzY42"]]],[1,8388608,["_layer"],[0,["8eLx5XRIFZUr9aE68WpRM2"]]],[1,8388608,["_layer"],[0,["c72SjnMxdcobd1Iw3Yveu6"]]],[1,8388608,["_layer"],[0,["ffqPBHD1JeCpeHmLaAvb8u"]]],[1,8388608,["_layer"],[0,["551oQVUEFXF6fwXyOwhKBD"]]],[1,8388608,["_layer"],[0,["e2+eZa9Q1a5alS6EXCdmk8"]]],[1,8388608,["_layer"],[0,["2asmQYCa1QyJa7636Ya9ui"]]],[1,8388608,["_layer"],[0,["04o9XyVkJQgbR2WXK5GW2H"]]],[1,8388608,["_layer"],[0,["ffZxRfYPZcn4+cxOVI7Uu9"]]],[1,8388608,["_layer"],[0,["42jXtMCclehKJI7a/C7jCU"]]],[1,8388608,["_layer"],[0,["34aHiWUutYlJVCW1oti1EV"]]],[1,8388608,["_layer"],[0,["771azSM+hZaZ0+7yxUO7nH"]]],[1,8388608,["_layer"],[0,["28crAR0UdQcK/fT6UOKuRS"]]],[1,8388608,["_layer"],[0,["fbpFzPQa9UVJ6fBjznHFUz"]]],[1,8388608,["_layer"],[0,["e9z1yvYj1Sm6arMonpVzn5"]]],[1,8388608,["_layer"],[0,["ccOxIdPENT3o4LJU0etOMl"]]],[1,8388608,["_layer"],[0,["9crQhRFJpbp4TwcL8vbEAd"]]],[1,8388608,["_layer"],[0,["e7NJLdgyxdFKp36Oi53P9z"]]],[1,8388608,["_layer"],[0,["92gJ2RFBpTPL449CrG7Bk9"]]],[1,8388608,["_layer"],[0,["edmAgawBFaDa9Eq07kTaJV"]]],[1,8388608,["_layer"],[0,["81W3w9sjZRKZdOZpfQD6sW"]]],[1,8388608,["_layer"],[0,["10DfdzrHdeCaZj1sKGa2Kj"]]],[1,8388608,["_layer"],[0,["42md2OMaVeOqrYQZwtzxeb"]]],[1,8388608,["_layer"],[0,["abp4QmWIBaLLouS9gOgDpF"]]],[1,8388608,["_layer"],[0,["95W4swAcJTWbEh/t6egnzM"]]],[4,["_lscale"],-34,[1,2,2,2]],[5,true,["_active"],-35],[5,true,["_active"],-36],[5,true,["_active"],-37],[5,false,["_active"],-38],[5,true,["_active"],-39],[5,true,["_active"],-40],[7,["_materials","0"],-41,12],[9,["_skinningRoot"],-43,-42],[1,false,["_active"],[0,["0fGm586DtV1JNUvToFS6mz"]]],[7,["_materials","0"],-44,13],[9,["_skinningRoot"],-46,-45],[7,["_materials","0"],-47,14],[9,["_skinningRoot"],-49,-48],[7,["_materials","0"],-50,15],[9,["_skinningRoot"],-52,-51],[5,1,["_materials","length"],-53],[7,["_materials","1"],-54,16],[9,["_skinningRoot"],-56,-55],[7,["_materials","0"],-57,17]]],0]],[52,"Player",[1],[[69,2,0,-61,[2,"59x7ieeltEa4rvb1W6kbV1"],[1,0,0,0]],[26,2,1.5,-62,[2,"643EqAHm1JLryaQlFTjfmI"],[1,0,2.8,0]],[144,-63,[2,"c2HIvNJpFEZZyJ0Aw1/ZjM"]]],[6,"8auOi9DE1RmYUynG+RD2O9",-60,0],[1,-14.7,0.28,-2.326],[1,0.5,0.5,0.5]],[0,["59R3ZReSlZU7cMWe65LSQi"]],[0,["8988B+LalX+KPkcb+WaTPP"]],[0,["12Z3qA5LlTuYfRfKQNlUdg"]],[0,["abcyXcjPtYq4Nmb/o/8s3M"]],[0,["ceDhL0m+pZ0rGVulvjLeZL"]],[0,["cfdsdtnK5R6JLMeVwlEFfv"]],[0,["38uO2hvglS+q1AO1isog4B"]],[0,["3cbn2yQcVViL5L5h+em31f"]],[0,["a4XnWWsFpa0q6OII23wIxY"]],[0,["eeimR7NmZccZ+rhZGcguNN"]],[0,["80yrlWw7tX+qfj1eTKKFSr"]],[0,["82bhDJZFFTWZjbeqVpS7C2"]],[0,["8dvUL1vQ5XxoG8o26o+Fcq"]],[0,["46knerlmRVDpcwqpceH8RK"]],[0,["6dsK1yA0layY9a7cZcTtz+"]],[0,["b0x8EtlAhQk7RHG2eMCOf/"]],[0,["faNRfpEktQGYtGG9GzKnCS"]],[0,["25PPxcceNa6LwhFdJjyFNK"]],[0,["bfhvBMNYBe07H5cdfTIjL0"]],[0,["656RzC+cxd/JUJ99/e7JI/"]]],0,[0,1,3,0,1,3,0,1,3,0,1,3,0,1,5,0,1,5,0,1,6,0,2,1,0,1,6,0,1,7,0,2,1,0,1,7,0,1,8,0,2,1,0,1,8,0,1,9,0,2,1,0,1,9,0,1,10,0,2,1,0,1,10,0,1,11,0,1,12,0,2,1,0,1,12,0,1,3,0,1,11,0,1,13,0,1,14,0,1,15,0,1,16,0,1,17,0,1,18,0,1,3,0,1,13,0,1,15,0,1,16,0,1,17,0,1,18,0,1,14,0,1,19,0,2,1,0,1,19,0,1,20,0,2,1,0,1,20,0,1,21,0,2,1,0,1,21,0,1,22,0,2,1,0,1,22,0,1,4,0,1,4,0,2,1,0,1,4,0,1,4,0,26,2,0,5,1,0,5,2,0,0,2,0,0,2,0,0,2,0,8,2,1,9,2,63],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[22,23,2,2,2,2,7,3,3,3,24,3,5,5,5,5,7,7]],[[{"name":"yes–tap","rect":{"x":0,"y":0,"width":366,"height":185},"offset":{"x":0,"y":0},"originalSize":{"width":366,"height":185},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[65]],[[{"name":"2","rect":{"x":0,"y":0,"width":883,"height":104},"offset":{"x":0,"y":0},"originalSize":{"width":883,"height":104},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[66]],[[{"name":"circle 1","rect":{"x":0,"y":0,"width":322,"height":316},"offset":{"x":0,"y":0},"originalSize":{"width":322,"height":316},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[67]],[[{"name":"Are you sure you  want to exit_","rect":{"x":0,"y":0,"width":625,"height":173},"offset":{"x":0,"y":0},"originalSize":{"width":625,"height":173},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[68]],[[{"name":"sound on","rect":{"x":0,"y":0,"width":106,"height":114},"offset":{"x":0,"y":0},"originalSize":{"width":106,"height":114},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[69]],[[[76,"1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{},"tilingOffset",8,[2,10,10,0,0],"mainColor",8,[4,721420287],"emissive",8,[4,4280881920],"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[12,10],[70,1]],[[{"name":"circle 2","rect":{"x":0,"y":0,"width":325,"height":334},"offset":{"x":0,"y":0},"originalSize":{"width":325,"height":334},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[71]],[[[19,"banner"],[87,"banner",33554432,[-6],[[16,-2,[2,"e17D86w65HXZNyxEPY/TC5"],[5,883,104]],[133,-3,[2,"99LbJyFgdAcJ/lDJBBrkm4"],3],[145,-5,[4,5,6,7],[8,9,10],-4]],[6,"1fhpZzUzFPgYg74HaYB6Nw",-1,0],[1,0,-62,0]],[53,"bannr",1,[-8,-9,-10,-11],[[16,-7,[2,"1dgULEWeNBE60JuIUdoW1E"],[5,883,104]]],[6,"0cN6AfjoBCTKHqZw4jlshF",1,0]],[48,"medal",33554432,2,[[16,-12,[2,"51/UlYZtJIhbtZZBC09oRY"],[5,59,77]],[134,-13,[2,"62jnnPGINKNKkUilBy+KI2"]],[61,10,0.18,false,-14,[2,"aeFdvyKmlLho9AZTcWRdiY"],1]],[6,"49zzo1KLhD04GaiyUnONNl",1,0],[1,-253.06,0,0]],[48,"rankText",33554432,2,[[16,-15,[2,"c0On+2CnVHuaX1lQT2SlAD"],[5,33.9,75.6]],[138,"1",60,60,60,false,-16,[2,"78AtAr5M1FOaMh/u8DtIz3"],0],[61,10,0.05,false,-17,[2,"b02nSoROVBWbUqiiCOmvr9"],1]],[6,"d4UrvTY29JPrA7ewk5YyyY",1,0],[1,-380.40000000000003,0,0]],[48,"nameText",33554432,2,[[72,-18,[2,"adrYSXwn5HXZoreA+iN8sx"],[5,94.08,75.6],[0,0,0.5]],[139,"you",60,60,60,false,-19,[2,"82wP70MsBOsqLq5thjK5m7"],[4,4278190080],1],[146,10,0.27,10,false,-20,[2,"e45pkbdh9CdKrOIAXUqXVf"],1]],[6,"8dc5bewTFJRapjweF4pax2",1,0],[1,-203.08999999999997,10,0]],[48,"timer",33554432,2,[[72,-21,[2,"36k0RS+L1F9Z4Wbx7W5KRB"],[5,21.76,75.6],[0,0,0.5]],[140,"",40,60,false,-22,[2,"78kRAPL4dD8phQCLl3OoBw"],[4,4278190080],2],[61,10,0.735797281993205,false,-23,[2,"86W5ky311Efalj4V272Btk"],1]],[6,"83wazhYKdGtaisnfuG+O0o",1,0],[1,208.20900000000006,0,0]]],0,[0,5,1,0,0,1,0,0,1,0,31,2,0,0,1,0,-1,2,0,0,2,0,-1,3,0,-2,4,0,-3,5,0,-4,6,0,0,3,0,0,3,0,0,3,0,0,4,0,0,4,0,0,4,0,0,5,0,0,5,0,0,5,0,0,6,0,0,6,0,0,6,0,8,1,23],[0,0,0,0,0,0,0,0,0,0,0],[13,13,13,3,-1,-2,-3,-4,-1,-2,-3],[9,4,4,25,72,73,74,25,75,76,77]],[[[18,".bin",2689776742,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":7152,"length":2316,"count":579,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":7152,"count":149,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-13.351829528808594,-9.097012519836426,-1.9378661875180114e-7],"maxPosition",8,[1,13.351825714111328,14.153785705566406,2.3124239444732666]]],-1],0,0,[],[],[]],[[[20],[21,"terrain_01",[-2],[6,"b5Qd3c1fJes6v7mFKO1kkV",-1,0]],[22,"terrain_01",1,[[12,-3,[2,"d1T6mroe1Rf5rRJE+lW2OV"],[0],[11],1]],[6,"20gWZ5aqpUeIsoSE8SdrGf",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,5,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[78,26]],[[[23,"terrain_01",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[12,10],[79,1]],[[{"name":"hand","rect":{"x":0,"y":0,"width":96,"height":151},"offset":{"x":0,"y":0},"originalSize":{"width":96,"height":151},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[80]],[[{"name":"silver medal","rect":{"x":0,"y":0,"width":59,"height":77},"offset":{"x":0,"y":0},"originalSize":{"width":59,"height":77},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[81]],[[{"name":"people di","rect":{"x":0,"y":0,"width":197,"height":121},"offset":{"x":0,"y":0},"originalSize":{"width":197,"height":121},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[82]],[[[23,"terrain_06",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[12,10],[83,1]],[[[18,".bin",3032168833,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":11760,"length":1536,"count":384,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":11760,"count":245,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-12.5,-12.5,0],"maxPosition",8,[1,12.5,12.5,3.3172192573547363]]],-1],0,0,[],[],[]],[[[20],[21,"terrain_06",[-2],[6,"39Yg4gdvpXfJljRrkH8pSj",-1,0]],[22,"terrain_06",1,[[12,-3,[2,"44rjrUIeZZeJ/k/3ciO8hy"],[0],[11],1]],[6,"27nahhq4tdv7YWoFN3ceOX",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,5,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[84,27]],[[{"name":"gold medal","rect":{"x":0,"y":0,"width":59,"height":77},"offset":{"x":0,"y":0},"originalSize":{"width":59,"height":77},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[85]],[[[23,"terrain_03",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[12,10],[86,1]],[[[18,".bin",3714978440,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":13488,"length":5280,"count":1320,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":13488,"count":281,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-12.162240028381348,-12.162246704101562,0],"maxPosition",8,[1,12.162240028381348,12.162246704101562,3.50469970703125]]],-1],0,0,[],[],[]],[[[20],[21,"terrain_03",[-2],[6,"19i6LE3Lxbr67QR9kBqRaV",-1,0]],[22,"terrain_03",1,[[12,-3,[2,"d68E2tUmJfjYPy9KtAggue"],[0],[11],1]],[6,"a2K8j5nwxah6iP3wevwRuB",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,5,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[87,28]],[[{"name":"no–tap","rect":{"x":0,"y":0,"width":366,"height":185},"offset":{"x":0,"y":0},"originalSize":{"width":366,"height":185},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[88]],[[{"name":"topInitialPopup","rect":{"x":0,"y":0,"width":1083,"height":202},"offset":{"x":0,"y":0},"originalSize":{"width":1083,"height":202},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[89]],[[[20],[21,"food_skull_01",[-2],[6,"6bH8t7wehYMrRlpqW5xKeO",-1,0]],[22,"food_skull_01",1,[[12,-3,[2,"dcdcQvwNtbk7O17E7skTux"],[0],[11],1]],[6,"46twUe4M1aRarlrApFO9pT",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,5,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[10,11]],[[[18,".bin",2161776520,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":13872,"length":4752,"count":1188,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":13872,"count":289,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.4196104407310486,-0.44333457946777344,-0.4582909345626831],"maxPosition",8,[1,0.4196104407310486,0.44333457946777344,0.4582909345626831]]],-1],0,0,[],[],[]],[[[23,"Food and props",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[12,10],[90,1]],[[{"name":"bronze medal","rect":{"x":0,"y":0,"width":59,"height":77},"offset":{"x":0,"y":0},"originalSize":{"width":59,"height":77},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[91]],[[{"name":"countdown1","rect":{"x":56,"y":20,"width":90,"height":209},"offset":{"x":-2,"y":2.5},"originalSize":{"width":206,"height":254},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[92]],[[{"name":"GainSpeed","rect":{"x":0,"y":0,"width":135,"height":213},"offset":{"x":0,"y":0},"originalSize":{"width":135,"height":213},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[93]],[[[18,".bin",2908190170,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":30048,"length":9168,"count":2292,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":30048,"count":626,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-20.665525436401367,-11.736836433410645,-5.813598704662581e-7],"maxPosition",8,[1,20.665525436401367,11.736836433410645,3.2952888011932373]]],-1],0,0,[],[],[]],[[[20],[21,"terrain_04",[-2],[6,"24p/KMVkhZ/4Kv+WkM8LfU",-1,0]],[22,"terrain_04",1,[[12,-3,[2,"85FsaPzTBfyajmAS7ZcjcL"],[0],[11],1]],[6,"d2kdcDiuRbRrPmIDF/gAm8",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,5,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[94,29]],[[[23,"terrain_04",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[12,10],[95,1]],[[[165,"GameScene"],[88,"Canvas",33554432,"53SKiIhr5MqafaGjzyZ7hn",[-18,-19,-20,-21,-22,-23,-24],[[3,-1,[5,750,1334]],[166,-3,-2],[147,45,-4],[167,-17,[[28,"48d51HOjkBIObFppQAdshF3","touchCallBack",-16]],[[28,"48d51HOjkBIObFppQAdshF3","sliderCallBack",-15]],[[28,"48d51HOjkBIObFppQAdshF3","onGameStart",-14]],-13,-12,-11,-10,-9,-8,-7,-6,-5,96,97]],[1,375,667,0]],[111,"GameScene",[-25,-26,-27,1,-28,-29,-30,-31,-32,-33,-34,-35],[118,[]],[67,[68],[113,1,true,true,2,0,1,0,100,50,0.8,[4,4278979598],[0,2048,2048]],[115,true,115],[117,0,500,1,[4,4293651435]]]],[89,"hudbar",33554432,[-39,-40,-41,-42,-43],[[13,-36,[5,750,180],[0,0.5,1]],[44,0,-37,105],[148,41,-1.6666666666666667,false,false,1081,-38]],[1,0,200,0]],[65,"gameOverPopup",false,1,[-47,-48,-49],[[3,-44,[5,750,1334]],[168,-45,91,92,93],[149,45,false,false,false,false,100,100,-46,1]]],[90,"initialLayer",1,[-53,-54,-55],[[3,-50,[5,750,1334]],[150,45,100,100,-51,1],[123,true,-52,[60],61]]],[65,"cameraDebug",false,1,[-57,-58,-59,-60,-61,-62],[[73,-56]]],[91,"popup",33554432,[-65,-66,-67,-68],[[3,-63,[5,999,835]],[14,-64,74]],[1,0.65,0.65,0.65]],[54,"hud",33554432,4,[-72,-73,-74],[[3,-69,[5,1082,450]],[44,0,-70,83],[77,17,false,-71,4]],[1,0,509.5,0],[1,0.7,0.7,0.7]],[29,"YSlider",33554432,6,[-78,-79,-80],[[[3,-75,[5,300,20]],[17,1,0,-76,39],-77],4,4,1],[1,202.96299999999997,419.55500000000006,0]],[29,"ZSlider",33554432,6,[-84,-85,-86],[[[3,-81,[5,300,20]],[17,1,0,-82,41],-83],4,4,1],[1,28.574,344.504,0]],[29,"XSlider",33554432,6,[-90,-91,-92],[[[3,-87,[5,300,20]],[17,1,0,-88,43],-89],4,4,1],[1,-163.977,419.555,0]],[29,"RYSlider",33554432,6,[-96,-97,-98],[[[3,-93,[5,300,20]],[17,1,0,-94,45],-95],4,4,1],[1,-166.136,276.795,0]],[29,"RXSlider",33554432,6,[-102,-103,-104],[[[3,-99,[5,300,20]],[17,1,0,-100,47],-101],4,4,1],[1,202.963,276.795,0]],[29,"RZSlider",33554432,6,[-108,-109,-110],[[[3,-105,[5,300,20]],[17,1,0,-106,49],-107],4,4,1],[1,31.745,208.743,0]],[54,"initiaDragPopup",33554432,5,[-114,-115],[[3,-111,[5,952,464]],[14,-112,55],[78,4,0.1,false,-113,5]],[1,0,-371.20000000000005,0],[1,0.7,0.7,0.7]],[92,"powerUpProgress",false,33554432,1,[-118,-119,-120],[[3,-116,[5,150,150]],[151,36,0.05,0.05,false,false,-117]],[1,262.5,-525.3,0]],[107,"leaderBoard",33554432,4,[-125,-126],[[[3,-121,[5,1082,952.8571428571429]],[74,1,0,-122],-123,[152,21,0.3,0.2,false,false,250,-124]],4,4,1,4],[1,0,-66.69999999999999,0],[1,0.7,0.7,0.7]],[55,"homeButton",33554432,4,[-132],[[3,-127,[5,300,120]],[17,1,0,-128,86],[62,2,-130,[[28,"607a6e7tMFM2o0KKgjUTxNF","onHomeClicked",4]],[4,4292269782],-129,87,88,89,90],[78,20,0.1,false,-131,4]],[1,0,-473.6,0]],[0,["19i6LE3Lxbr67QR9kBqRaV"]],[0,["39Yg4gdvpXfJljRrkH8pSj"]],[55,"topPopup",33554432,5,[-136],[[3,-133,[5,750,180]],[44,0,-134,51],[153,41,false,false,false,1083,-135,5]],[1,0,577,0]],[56,"countDown",5,[-138,-139,-140,-141],[[73,-137]],[1,0,77.229,0]],[8,"yesButton",33554432,7,[[3,-142,[5,300,140]],[17,1,0,-143,64],[62,2,-145,[[28,"62ee6KEwbpJNKAJo5TmXRgo","onExitYesClicked",1]],[4,4292269782],-144,65,66,67,68],[154,36,0.34984984984984985,0.55,0.15,false,false,false,-146,7]],[1,-199.95000000000005,-222.25,0]],[8,"noButton",33554432,7,[[3,-147,[5,300,140]],[17,1,0,-148,69],[62,2,-150,[[28,"62ee6KEwbpJNKAJo5TmXRgo","hideExitPopup",1]],[4,4292269782],-149,70,71,72,73],[155,12,0.55,0.55,0.15,false,false,false,300,-151,7]],[1,199.95000000000005,-222.25,0]],[29,"scrollBar",33554432,17,[-156],[[[13,-152,[5,12,952.8571428571429],[0,1,0.5]],[17,1,0,-153,84],[156,37,250,1,-154],-155],4,4,4,1],[1,541,0,0]],[49,"soundButton",33554432,3,[[3,-157,[5,108,114]],[17,1,0,-158,94],[80,-159,[[28,"62ee6KEwbpJNKAJo5TmXRgo","onSoundClicked",1]],95],[79,36,0.12,0.15,false,false,-160,3]],[1,252.6,-118.80000000000001,0],[1,0.6,0.6,0.6]],[93,"gameController","63fzU6BcNDT6vtpZB1sA7i",2,[[169,-170,[[40,0],[40,1],[40,2]],[[40,3],[40,4],[40,5]],[6,7],[[51,8,9,10]],[[51,11,12,13]],[[51,14,15,16]],[[51,17,18,19]],-169,-168,-167,-166,-165,-164,-163,-162,-161,4,16,20,21,22,23,24,25,26,27,106,107,108]]],[56,"Hud",1,[3],[[13,-171,[5,750,120],[0,0.5,1]],[157,41,0.4625187406296851,false,false,false,false,100,100,-172],[124,-173,[98],99]],[1,0,667,0]],[30,"Handle",33554432,9,[[[3,-174,[5,32,32]],-175,[39,-177,[4,4292269782],-176,38]],4,1,4],[1,-150,0,0]],[30,"Handle",33554432,10,[[[3,-178,[5,32,32]],-179,[39,-181,[4,4292269782],-180,40]],4,1,4],[1,-150,0,0]],[30,"Handle",33554432,11,[[[3,-182,[5,32,32]],-183,[39,-185,[4,4292269782],-184,42]],4,1,4],[1,-150,0,0]],[30,"Handle",33554432,12,[[[3,-186,[5,32,32]],-187,[39,-189,[4,4292269782],-188,44]],4,1,4],[1,-150,0,0]],[30,"Handle",33554432,13,[[[3,-190,[5,32,32]],-191,[39,-193,[4,4292269782],-192,46]],4,1,4],[1,-150,0,0]],[30,"Handle",33554432,14,[[[3,-194,[5,32,32]],-195,[39,-197,[4,4292269782],-196,48]],4,1,4],[1,-150,0,0]],[56,"exitPopup",1,[7],[[3,-198,[5,750,1334]],[158,45,900,-1.2000000000000002,false,false,false,100,100,-199,1],[125,-200,[75,76]]],[1,900,0,0]],[57,"ProgressBar",33554432,16,[-205],[[3,-201,[5,160,160]],[127,2,1,true,-203,-202],[129,3,0.5,-204,78]]],[57,"powerUpImage",33554432,16,[-208,-209],[[3,-206,[5,90,90]],[135,0,-207,[4,4278242559]]]],[83,"content",33554432,[[13,-210,[5,1082,952.857143],[0,0.5,1]],[77,1,false,-212,-211],[170,2,10,10,10,true,-213]],[1,-10,476.42857142857144,0]],[57,"view",33554432,17,[38],[[3,-214,[5,1082,952.8571428571429]],[130,-215]]],[49,"cloaseButton",33554432,3,[[3,-216,[5,108,114]],[14,-217,100],[80,-218,[[28,"62ee6KEwbpJNKAJo5TmXRgo","onCloseClicked",1]],101],[159,36,0.02,0.15,false,false,false,-219,3]],[1,327.6,-118.80000000000001,0],[1,0.6,0.6,0.6]],[54,"totalPlayer",33554432,3,[-223],[[3,-220,[5,197,121]],[14,-221,104],[79,36,0.22,0.15,false,false,-222,3]],[1,150.9,-116.7,0],[1,0.6,0.6,0.6]],[49,"lastManStanding",33554432,21,[[3,-224,[5,665,54]],[14,-225,50],[160,18,42.5,42.5,-0.2,false,false,665,-226,21]],[1,0,-36,0],[1,0.8,0.8,0.8]],[55,"infiniteSign",33554432,15,[-229],[[3,-227,[5,358,165]],[14,-228,53]],[1,0,-39.544,0]],[8,"moveLabel",33554432,15,[[3,-230,[5,697.86,75.6]],[60,"Drag to move your penguin",60,60,60,false,-231,[4,4278190080],54],[161,1,0.1228448275862069,false,-232,15]],[1,0,137.2,0]],[8,"banner",33554432,7,[[3,-233,[5,670,162]],[14,-234,62],[162,9,-0.03,-0.06,false,false,-235]],[1,-194.47000000000003,386.6,0]],[8,"exitLabel",33554432,7,[[3,-236,[5,625,173]],[14,-237,63],[163,18,-0.007477477477477477,-0.06658682634730538,0.1,false,false,false,-238]],[1,0,83.5,0]],[8,"trophy",33554432,8,[[3,-239,[5,259,278]],[14,-240,80],[164,9,0.05,0.2,false,false,-241,8]],[1,-357.4,-4,0]],[94,"Directional Light","577YE8O9ZC65IMVbMYZAg9",2,[[171,-242,[172]]],[1,0,19.041,26],[3,-0.2997788238798885,0.07482776953602352,0.023593105109223914,0.9507769596760113],[1,-35,9,0]],[95,"cameraNode","08cyYq3xJFUZnw95q+2LAq",2,[-243]],[24,0,null,2,[15,"b5Qd3c1fJes6v7mFKO1kkV",-244,[58,"74+r2G+UFGk7pxLpDyZbFl",null,[[45,[0,["20gWZ5aqpUeIsoSE8SdrGf"]],[[46,29],[43,2]]]],[[1,"TrianglePlatform",["_name"],[0,["b5Qd3c1fJes6v7mFKO1kkV"]]],[10,["_lpos"],[0,["b5Qd3c1fJes6v7mFKO1kkV"]],[1,0,-7.357,0]],[10,["_lrot"],[0,["b5Qd3c1fJes6v7mFKO1kkV"]],[3,0,0,0,1]],[10,["_euler"],[0,["b5Qd3c1fJes6v7mFKO1kkV"]],[1,0,0,0]],[10,["_lpos"],[0,["20gWZ5aqpUeIsoSE8SdrGf"]],[1,0,1.468,0]],[10,["_lscale"],[0,["b5Qd3c1fJes6v7mFKO1kkV"]],[1,2,2,2]],[1,"platform",["_name"],[0,["20gWZ5aqpUeIsoSE8SdrGf"]]],[1,true,["_active"],[0,["20gWZ5aqpUeIsoSE8SdrGf"]]],[1,false,["_active"],[0,["b5Qd3c1fJes6v7mFKO1kkV"]]]]],28]],[24,0,null,2,[15,"19i6LE3Lxbr67QR9kBqRaV",-245,[71,"5eJsGrhbdHrbJIYCeBoEGx",[[45,[0,["a2K8j5nwxah6iP3wevwRuB"]],[[46,31],[43,2]]]],[[5,"CircularPlatform",["_name"],19],[4,["_lpos"],19,[1,0,-7.081,0]],[4,["_lrot"],19,[3,0,0,0,1]],[4,["_euler"],19,[1,0,0,0]],[4,["_lscale"],19,[1,2,2,2]],[5,false,["_active"],19],[1,"platform",["_name"],[0,["a2K8j5nwxah6iP3wevwRuB"]]]]],30]],[24,0,null,2,[15,"24p/KMVkhZ/4Kv+WkM8LfU",-246,[58,"d1EzTqKkdD04C/XelRYzOp",null,[[45,[0,["d2kdcDiuRbRrPmIDF/gAm8"]],[[46,33],[43,2]]]],[[1,"InfinePlatform",["_name"],[0,["24p/KMVkhZ/4Kv+WkM8LfU"]]],[10,["_lpos"],[0,["24p/KMVkhZ/4Kv+WkM8LfU"]],[1,0,-6.649,0]],[10,["_lrot"],[0,["24p/KMVkhZ/4Kv+WkM8LfU"]],[3,0,0,0,1]],[10,["_euler"],[0,["24p/KMVkhZ/4Kv+WkM8LfU"]],[1,0,0,0]],[1,"platform",["_name"],[0,["d2kdcDiuRbRrPmIDF/gAm8"]]],[10,["_lscale"],[0,["24p/KMVkhZ/4Kv+WkM8LfU"]],[1,2,2,2]],[1,false,["_active"],[0,["24p/KMVkhZ/4Kv+WkM8LfU"]]]]],32]],[24,0,null,2,[15,"35qsdnuYxX5KuoRBS5ofmS",-249,[58,"b2t13t6dFMe48ZoxnovB1j",null,[[45,[0,["66hHjhVoxemoUDzsM/1907"]],[[46,35],[43,2]]]],[[1,"StarPlatform",["_name"],[0,["35qsdnuYxX5KuoRBS5ofmS"]]],[10,["_lpos"],[0,["35qsdnuYxX5KuoRBS5ofmS"]],[1,0,-6.517,0]],[10,["_lrot"],[0,["35qsdnuYxX5KuoRBS5ofmS"]],[3,0,0,0,1]],[10,["_euler"],[0,["35qsdnuYxX5KuoRBS5ofmS"]],[1,0,0,0]],[4,["_lscale"],-247,[1,2,2,2]],[1,"platform",["_name"],[0,["66hHjhVoxemoUDzsM/1907"]]],[5,false,["_active"],-248]]],34]],[24,0,null,2,[15,"39Yg4gdvpXfJljRrkH8pSj",-250,[71,"6eEAZX1DdJi5rEX9gP1Nud",[[45,[0,["27nahhq4tdv7YWoFN3ceOX"]],[[46,37],[43,2]]]],[[5,"SquarelPatform",["_name"],20],[4,["_lpos"],20,[1,0,-6.356,0]],[4,["_lrot"],20,[3,0,0,0,1]],[4,["_euler"],20,[1,0,0,0]],[4,["_lscale"],20,[1,2,2,2]],[1,"platform",["_name"],[0,["27nahhq4tdv7YWoFN3ceOX"]]],[5,false,["_active"],20]]],36]],[66,"gameTimer",33554432,3,[[[13,-251,[5,136.56,75.6],[0,0,0.5]],-252],4,1],[1,-355.792,-90,0],[1,0.6,0.6,0.6]],[8,"yaxis",33554432,9,[[3,-253,[5,70.04,50.4]],[37,"Y-axis :",20,20,true,true,-254,[4,4278190080]]],[1,-135.032,35.501,0]],[8,"YSlider",33554432,9,[[13,-255,[5,166.85,50.4],[0,0,0.5]],[38,"",0,20,20,-256,[4,4278190080]]],[1,-93.368,35.501,0]],[8,"zaxis",33554432,10,[[3,-257,[5,70.02,50.4]],[37,"Z-axis :",20,20,true,true,-258,[4,4278190080]]],[1,-135.032,35.501,0]],[8,"ZSlider",33554432,10,[[13,-259,[5,166.85,50.4],[0,0,0.5]],[38,"",0,20,20,-260,[4,4278190080]]],[1,-93.368,35.501,0]],[8,"xaxis",33554432,11,[[3,-261,[5,71.14,50.4]],[37,"X-axis :",20,20,true,true,-262,[4,4278190080]]],[1,-135.032,35.501,0]],[8,"XSlider",33554432,11,[[13,-263,[5,166.85,50.4],[0,0,0.5]],[38,"",0,20,20,-264,[4,4278190080]]],[1,-93.368,35.501,0]],[8,"rotation",33554432,12,[[3,-265,[5,76.31,50.4]],[37,"angle Y:",20,20,true,true,-266,[4,4278190080]]],[1,-135.032,35.501,0]],[8,"RYSlider",33554432,12,[[13,-267,[5,166.85,50.4],[0,0,0.5]],[38,"",0,20,20,-268,[4,4278190080]]],[1,-93.368,35.501,0]],[8,"rotation",33554432,13,[[3,-269,[5,77.79,50.4]],[37,"angle X:",20,20,true,true,-270,[4,4278190080]]],[1,-135.032,35.501,0]],[8,"RXSlider",33554432,13,[[13,-271,[5,166.85,50.4],[0,0,0.5]],[38,"",0,20,20,-272,[4,4278190080]]],[1,-93.368,35.501,0]],[8,"rotation",33554432,14,[[3,-273,[5,76.67,50.4]],[37,"angle Z:",20,20,true,true,-274,[4,4278190080]]],[1,-135.032,35.501,0]],[8,"RZSlider",33554432,14,[[13,-275,[5,166.85,50.4],[0,0,0.5]],[38,"",0,20,20,-276,[4,4278190080]]],[1,-93.368,35.501,0]],[49,"hand",33554432,43,[[3,-277,[5,96,151]],[14,-278,52]],[1,19.013,-58.502,0],[1,0.8,0.8,0.8]],[50,"3",false,33554432,22,[[3,-279,[5,149,209]],[14,-280,56]],[1,0.75,0.75,0.75]],[50,"2",false,33554432,22,[[3,-281,[5,150,211]],[14,-282,57]],[1,0.75,0.75,0.75]],[50,"1",false,33554432,22,[[3,-283,[5,90,209]],[14,-284,58]],[1,0.75,0.75,0.75]],[50,"go",false,33554432,22,[[3,-285,[5,750,216]],[14,-286,59]],[1,0.75,0.75,0.75]],[96,"progressBg",33554432,16,[[3,-287,[5,154,154]],[44,0,-288,77]]],[108,"Bar",33554432,36,[[[3,-289,[5,160,160]],-290],4,1]],[8,"counter",33554432,37,[[3,-291,[5,33.37,75.6]],[141,"0",60,60,60,-292]],[1,0,-28.25,0]],[8,"image",33554432,37,[[3,-293,[5,50,50]],[44,0,-294,79]],[1,0,27.051,0]],[8,"scoreText",33554432,8,[[13,-295,[5,223.6,100.8],[0,1,0.5]],[60,"score :",80,80,80,false,-296,[4,4278190080],81]],[1,172.106,42,0]],[8,"score",33554432,8,[[13,-297,[5,43.52,100.8],[0,0,0.5]],[60,"0",80,80,80,false,-298,[4,4280562667],82]],[1,195.386,30.389,0]],[30,"bar",33554432,25,[[[13,-299,[5,10,156.25],[0,0,0]],-300],4,1],[1,-11,-31.25,0]],[97,"Label",512,33554432,18,[[3,-301,[5,200,100]],[142,"home",60,60,80,1,false,false,-302,85]]],[66,"score",33554432,3,[[[13,-303,[5,136.56,75.6],[0,0,0.5]],-304],4,1],[1,-355.792,-140,0],[1,0.6,0.6,0.6]],[8,"playerCount",33554432,41,[[3,-305,[5,33.9,75.6]],[173,60,"0",60,false,-306,102,103]],[1,40.625,-9.557,0]],[98,"deathPlatform","c6lhDreS5AFpgLZsYRxidk",2,[[59,"Cube<ModelComponent>",-307,[109],[11],110],[174,-308]],[1,0,-0.568,0],[1,400,0.181,400]],[99,"waterTop","9bKWpVubVPiqt9fgUx7aqH",2,[-310],[[59,"Cube<ModelComponent>",-309,[113],[11],114]],[1,0,-7.313,0],[1,500,10,500]],[100,"playerCamera",49,[[175,"Camera<CameraComponent>",60,14,1822425087,-311,[4,4286073907]]],[1,0,17.788,25.71],[3,-0.3007057995042731,0,0,0.9537169507482269],[1,-35,0,0]],[0,["35qsdnuYxX5KuoRBS5ofmS"]],[81,60,"0ssss",60,false,55],[109,"Camera",1,[-312],[1,0,0,1000]],[176,0,1073741824,667,2000,6,41943040,88,[4,4278190080]],[36,0,29],[41,0,9,90],[36,0,30],[41,0,10,92],[36,0,31],[41,0,11,94],[36,0,32],[41,0,12,96],[36,0,33],[41,0,13,98],[36,0,34],[41,0,14,100],[136,3,2,0,1,-1,74,[0,0.5,0.5]],[74,1,0,79],[178,1,25,103],[179,0.23,0.75,false,17,38,104],[81,60,"0ssss",60,false,81],[101,"waterLayer",84,[[59,"Plane<ModelComponent>",-313,[111],[11],112]],[1,0,0.684,0],[1,0.1,0.1,0.1]],[102,"Camera",false,"4a24qmwNFE97GHZ2R7VNHr",2,[[177,"Camera<CameraComponent>",90,100,4,1822425087,-314,[4,4286073907]]],[1,0,20,0],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,-90,0,0]]],0,[0,0,1,0,32,89,0,0,1,0,0,1,0,33,26,0,34,5,0,35,101,0,36,99,0,37,97,0,38,95,0,39,93,0,40,91,0,41,6,0,20,27,0,20,27,0,20,27,0,0,1,0,-1,88,0,-2,6,0,-3,5,0,-4,28,0,-5,35,0,-6,16,0,-7,4,0,-1,48,0,-2,27,0,-3,49,0,-5,83,0,-6,84,0,-7,108,0,-8,50,0,-9,51,0,-10,52,0,-11,53,0,-12,54,0,0,3,0,0,3,0,0,3,0,-1,40,0,-2,26,0,-3,55,0,-4,81,0,-5,41,0,0,4,0,0,4,0,0,4,0,-1,8,0,-2,17,0,-3,18,0,0,5,0,0,5,0,0,5,0,-1,21,0,-2,15,0,-3,22,0,0,6,0,-1,9,0,-2,10,0,-3,11,0,-4,12,0,-5,13,0,-6,14,0,0,7,0,0,7,0,-1,45,0,-2,46,0,-3,23,0,-4,24,0,0,8,0,0,8,0,0,8,0,-1,47,0,-2,77,0,-3,78,0,0,9,0,0,9,0,-3,91,0,-1,29,0,-2,56,0,-3,57,0,0,10,0,0,10,0,-3,93,0,-1,30,0,-2,58,0,-3,59,0,0,11,0,0,11,0,-3,95,0,-1,31,0,-2,60,0,-3,61,0,0,12,0,0,12,0,-3,97,0,-1,32,0,-2,62,0,-3,63,0,0,13,0,0,13,0,-3,99,0,-1,33,0,-2,64,0,-3,65,0,0,14,0,0,14,0,-3,101,0,-1,34,0,-2,66,0,-3,67,0,0,15,0,0,15,0,0,15,0,-1,43,0,-2,44,0,0,16,0,0,16,0,-1,73,0,-2,36,0,-3,37,0,0,17,0,0,17,0,-3,105,0,0,17,0,-1,25,0,-2,39,0,0,18,0,0,18,0,14,18,0,0,18,0,0,18,0,-1,80,0,0,21,0,0,21,0,0,21,0,-1,42,0,0,22,0,-1,69,0,-2,70,0,-3,71,0,-4,72,0,0,23,0,0,23,0,14,23,0,0,23,0,0,23,0,0,24,0,0,24,0,14,24,0,0,24,0,0,24,0,0,25,0,0,25,0,0,25,0,-4,104,0,-1,79,0,0,26,0,0,26,0,0,26,0,0,26,0,42,106,0,43,87,0,44,54,0,45,53,0,46,52,0,47,51,0,48,50,0,49,49,0,50,48,0,0,27,0,0,28,0,0,28,0,0,28,0,0,29,0,-2,90,0,14,29,0,0,29,0,0,30,0,-2,92,0,14,30,0,0,30,0,0,31,0,-2,94,0,14,31,0,0,31,0,0,32,0,-2,96,0,14,32,0,0,32,0,0,33,0,-2,98,0,14,33,0,0,33,0,0,34,0,-2,100,0,14,34,0,0,34,0,0,35,0,0,35,0,0,35,0,0,36,0,25,102,0,0,36,0,0,36,0,-1,74,0,0,37,0,0,37,0,-1,75,0,-2,76,0,0,38,0,14,39,0,0,38,0,0,38,0,0,39,0,0,39,0,0,40,0,0,40,0,0,40,0,0,40,0,0,41,0,0,41,0,0,41,0,-1,82,0,0,42,0,0,42,0,0,42,0,0,43,0,0,43,0,-1,68,0,0,44,0,0,44,0,0,44,0,0,45,0,0,45,0,0,45,0,0,46,0,0,46,0,0,46,0,0,47,0,0,47,0,0,47,0,0,48,0,-1,85,0,5,50,0,5,51,0,5,52,0,1,86,0,1,86,0,5,53,0,5,54,0,0,55,0,-2,87,0,0,56,0,0,56,0,0,57,0,0,57,0,0,58,0,0,58,0,0,59,0,0,59,0,0,60,0,0,60,0,0,61,0,0,61,0,0,62,0,0,62,0,0,63,0,0,63,0,0,64,0,0,64,0,0,65,0,0,65,0,0,66,0,0,66,0,0,67,0,0,67,0,0,68,0,0,68,0,0,69,0,0,69,0,0,70,0,0,70,0,0,71,0,0,71,0,0,72,0,0,72,0,0,73,0,0,73,0,0,74,0,-2,102,0,0,75,0,0,75,0,0,76,0,0,76,0,0,77,0,0,77,0,0,78,0,0,78,0,0,79,0,-2,103,0,0,80,0,0,80,0,0,81,0,-2,106,0,0,82,0,0,82,0,0,83,0,0,83,0,0,84,0,-1,107,0,0,85,0,-1,89,0,0,107,0,0,108,0,51,2,1,9,2,3,9,28,7,9,35,38,9,39,104,52,105,314],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,92,94,96,98,100,102,103,106,106,87,87],[15,15,15,15,15,15,-1,-2,16,17,18,16,17,18,16,17,18,16,17,18,53,54,55,56,57,58,59,60,7,6,7,6,7,6,7,6,7,6,11,3,11,3,11,3,11,3,11,3,11,3,3,3,3,3,13,3,3,3,3,3,-1,19,3,3,3,11,21,22,23,3,11,21,22,23,3,-1,-2,3,3,3,3,13,13,3,3,13,3,11,21,22,23,61,62,63,3,11,64,65,-1,19,3,11,13,24,3,3,66,67,68,-1,6,-1,6,-1,6,69,3,3,3,3,3,3,3,3,13,24,13,24],[2,30,31,2,30,31,96,97,98,99,100,101,3,102,103,104,105,106,107,108,109,110,111,12,112,113,114,115,116,26,117,28,118,29,119,32,120,27,0,6,0,6,0,6,0,6,0,6,0,6,121,122,123,124,4,125,126,127,128,129,33,33,130,131,34,34,35,35,36,37,37,38,38,36,132,133,134,135,136,13,39,4,4,137,138,9,14,14,40,40,14,39,139,140,15,15,141,15,41,41,42,42,9,9,142,143,144,145,146,147,43,148,149,150,43,21,0,0,0,0,0,0,151,152,4,4,4,4]],[[{"name":"sound off","rect":{"x":0,"y":0,"width":106,"height":114},"offset":{"x":0,"y":0},"originalSize":{"width":106,"height":114},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[153]],[[{"name":"1","rect":{"x":0,"y":0,"width":883,"height":104},"offset":{"x":0,"y":0},"originalSize":{"width":883,"height":104},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[154]],[[[19,"bot"],[63,0,null,[15,"59R3ZReSlZU7cMWe65LSQi",-57,[70,"9ftVfwwOxGCavr3F60C6ZW",-56,[[5,"Penguine_Anim",["_name"],-1],[4,["_lpos"],-2,[1,0,0,0]],[4,["_lrot"],-3,[3,0,0,0,1]],[4,["_euler"],-4,[1,0,0,0]],[7,["_defaultClip"],-5,1],[5,false,["playOnLoad"],-6],[7,["_materials","0"],-7,2],[9,["_skinningRoot"],-9,-8],[7,["_materials","0"],-10,3],[9,["_skinningRoot"],-12,-11],[7,["_materials","0"],-13,4],[9,["_skinningRoot"],-15,-14],[7,["_materials","0"],-16,5],[9,["_skinningRoot"],-18,-17],[7,["_materials","0"],-19,6],[9,["_skinningRoot"],-21,-20],[5,false,["_active"],-22],[7,["_materials","0"],-23,7],[9,["_skinningRoot"],-25,-24],[27,["_materials","0"],[0,["c8Mf8OJd9SSopbw7I4dmAK"]],8],[27,["_materials","0"],[0,["52W5PEObtTbK2Gr8yJqCzT"]],9],[27,["_materials","0"],[0,["ac8i6xedBXE6SPaMdY2WcE"]],10],[27,["_materials","0"],[0,["819cNtzSlQ1awf6gO8ffno"]],11],[5,8388608,["_layer"],-26],[1,8388608,["_layer"],[0,["96yw4Q85dVxptKWW2wqF1D"]]],[1,8388608,["_layer"],[0,["c3bbXflZZcNIM9QP0P/TNQ"]]],[1,8388608,["_layer"],[0,["2dV7OdxyhaIruREgjqht4J"]]],[1,8388608,["_layer"],[0,["6ch1kxAMZcdKYx+ifKzvKX"]]],[1,8388608,["_layer"],[0,["8fQ+mHA8xdG74tm4o0kY52"]]],[5,8388608,["_layer"],-27],[5,8388608,["_layer"],-28],[1,8388608,["_layer"],[0,["3ffWIdHGlahIh485X1Qy51"]]],[5,8388608,["_layer"],-29],[1,8388608,["_layer"],[0,["bdyUN4J0FTUpY69AAmjkUK"]]],[1,8388608,["_layer"],[0,["1dwgRR+DhR1bKrV22k3Q0m"]]],[1,8388608,["_layer"],[0,["8avRX+N8lUVI1h+NE3Sgg0"]]],[1,8388608,["_layer"],[0,["694kIJvZpfOI+7rGLgKNWY"]]],[1,8388608,["_layer"],[0,["68NhpExhtfw6GeRnEIVJ+H"]]],[5,8388608,["_layer"],-30],[5,8388608,["_layer"],-31],[5,8388608,["_layer"],-32],[5,8388608,["_layer"],-33],[1,8388608,["_layer"],[0,["a4yLL3/0dYR4ucE0kJtkG6"]]],[1,8388608,["_layer"],[0,["74A0GcUGFZVKYEknTFiqyT"]]],[1,8388608,["_layer"],[0,["277bjaV/1dZormCHG8jRH4"]]],[1,8388608,["_layer"],[0,["274EYf5TFWU4doC6fYRN70"]]],[1,8388608,["_layer"],[0,["c0Rcs1WgNRRrJ+tzsu0urQ"]]],[1,8388608,["_layer"],[0,["55GZhWbz5auZhcrCp3QDHt"]]],[1,8388608,["_layer"],[0,["80/nQRwsNaMaIOSbtpL9GB"]]],[1,8388608,["_layer"],[0,["3dChcWtL5UaaJLZfMNdrab"]]],[1,8388608,["_layer"],[0,["d6RdgISadcMZXx6DCiYt1n"]]],[1,8388608,["_layer"],[0,["8flcT1k0BQpqNhjo7jxtgi"]]],[1,8388608,["_layer"],[0,["91abixZWdZ/aistBp2XL6i"]]],[1,8388608,["_layer"],[0,["db9N/nxB1QNpHixWNxASTY"]]],[1,8388608,["_layer"],[0,["46bK5nNUBRdZeL4RGxzY42"]]],[1,8388608,["_layer"],[0,["8eLx5XRIFZUr9aE68WpRM2"]]],[1,8388608,["_layer"],[0,["c72SjnMxdcobd1Iw3Yveu6"]]],[1,8388608,["_layer"],[0,["ffqPBHD1JeCpeHmLaAvb8u"]]],[1,8388608,["_layer"],[0,["551oQVUEFXF6fwXyOwhKBD"]]],[1,8388608,["_layer"],[0,["e2+eZa9Q1a5alS6EXCdmk8"]]],[1,8388608,["_layer"],[0,["2asmQYCa1QyJa7636Ya9ui"]]],[1,8388608,["_layer"],[0,["04o9XyVkJQgbR2WXK5GW2H"]]],[1,8388608,["_layer"],[0,["ffZxRfYPZcn4+cxOVI7Uu9"]]],[1,8388608,["_layer"],[0,["42jXtMCclehKJI7a/C7jCU"]]],[1,8388608,["_layer"],[0,["34aHiWUutYlJVCW1oti1EV"]]],[1,8388608,["_layer"],[0,["771azSM+hZaZ0+7yxUO7nH"]]],[1,8388608,["_layer"],[0,["28crAR0UdQcK/fT6UOKuRS"]]],[1,8388608,["_layer"],[0,["fbpFzPQa9UVJ6fBjznHFUz"]]],[1,8388608,["_layer"],[0,["e9z1yvYj1Sm6arMonpVzn5"]]],[1,8388608,["_layer"],[0,["ccOxIdPENT3o4LJU0etOMl"]]],[1,8388608,["_layer"],[0,["9crQhRFJpbp4TwcL8vbEAd"]]],[1,8388608,["_layer"],[0,["e7NJLdgyxdFKp36Oi53P9z"]]],[1,8388608,["_layer"],[0,["92gJ2RFBpTPL449CrG7Bk9"]]],[1,8388608,["_layer"],[0,["edmAgawBFaDa9Eq07kTaJV"]]],[1,8388608,["_layer"],[0,["81W3w9sjZRKZdOZpfQD6sW"]]],[1,8388608,["_layer"],[0,["10DfdzrHdeCaZj1sKGa2Kj"]]],[1,8388608,["_layer"],[0,["42md2OMaVeOqrYQZwtzxeb"]]],[1,8388608,["_layer"],[0,["abp4QmWIBaLLouS9gOgDpF"]]],[1,8388608,["_layer"],[0,["95W4swAcJTWbEh/t6egnzM"]]],[4,["_lscale"],-34,[1,2,2,2]],[5,true,["_active"],-35],[5,true,["_active"],-36],[5,true,["_active"],-37],[5,false,["_active"],-38],[5,true,["_active"],-39],[5,true,["_active"],-40],[7,["_materials","0"],-41,12],[9,["_skinningRoot"],-43,-42],[7,["_materials","0"],-44,13],[9,["_skinningRoot"],-46,-45],[7,["_materials","0"],-47,14],[9,["_skinningRoot"],-49,-48],[7,["_materials","0"],-50,15],[9,["_skinningRoot"],-52,-51],[7,["_materials","0"],-53,16],[9,["_skinningRoot"],-55,-54],[1,false,["_active"],[0,["0fGm586DtV1JNUvToFS6mz"]]]]],0]],[52,"bot",[1],[[69,2,0,-59,[2,"59x7ieeltEa4rvb1W6kbV1"],[1,0,0,0]],[26,2,1.5,-60,[2,"643EqAHm1JLryaQlFTjfmI"],[1,0,2.8,0]],[180,-61,[2,"27ekEDysJKkZT8BuFDN6u6"]]],[6,"8auOi9DE1RmYUynG+RD2O9",-58,0],[1,-14.7,0.28,-2.326],[1,0.5,0.5,0.5]],[0,["59R3ZReSlZU7cMWe65LSQi"]],[0,["12Z3qA5LlTuYfRfKQNlUdg"]],[0,["abcyXcjPtYq4Nmb/o/8s3M"]],[0,["ceDhL0m+pZ0rGVulvjLeZL"]],[0,["cfdsdtnK5R6JLMeVwlEFfv"]],[0,["38uO2hvglS+q1AO1isog4B"]],[0,["3cbn2yQcVViL5L5h+em31f"]],[0,["a4XnWWsFpa0q6OII23wIxY"]],[0,["eeimR7NmZccZ+rhZGcguNN"]],[0,["80yrlWw7tX+qfj1eTKKFSr"]],[0,["82bhDJZFFTWZjbeqVpS7C2"]],[0,["8dvUL1vQ5XxoG8o26o+Fcq"]],[0,["46knerlmRVDpcwqpceH8RK"]],[0,["6dsK1yA0layY9a7cZcTtz+"]],[0,["b0x8EtlAhQk7RHG2eMCOf/"]],[0,["faNRfpEktQGYtGG9GzKnCS"]],[0,["25PPxcceNa6LwhFdJjyFNK"]],[0,["bfhvBMNYBe07H5cdfTIjL0"]],[0,["656RzC+cxd/JUJ99/e7JI/"]],[0,["8988B+LalX+KPkcb+WaTPP"]]],0,[0,1,3,0,1,3,0,1,3,0,1,3,0,1,4,0,1,4,0,1,5,0,2,1,0,1,5,0,1,6,0,2,1,0,1,6,0,1,7,0,2,1,0,1,7,0,1,8,0,2,1,0,1,8,0,1,9,0,2,1,0,1,9,0,1,10,0,1,11,0,2,1,0,1,11,0,1,3,0,1,10,0,1,12,0,1,13,0,1,14,0,1,15,0,1,16,0,1,17,0,1,3,0,1,12,0,1,14,0,1,15,0,1,16,0,1,17,0,1,13,0,1,18,0,2,1,0,1,18,0,1,19,0,2,1,0,1,19,0,1,20,0,2,1,0,1,20,0,1,21,0,2,1,0,1,21,0,1,22,0,2,1,0,1,22,0,26,2,0,5,1,0,5,2,0,0,2,0,0,2,0,0,2,0,8,2,1,9,2,61],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[22,23,2,2,2,2,7,3,3,3,24,3,5,5,5,5,7]],[[{"name":"shut","rect":{"x":0,"y":0,"width":108,"height":114},"offset":{"x":0,"y":0},"originalSize":{"width":108,"height":114},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[155]],[[[18,".bin",1025397960,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":8160,"length":2592,"count":648,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":8160,"count":170,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.13970166444778442,-0.13970166444778442,-0.5128788352012634],"maxPosition",8,[1,0.13970166444778442,0.13970166444778442,0.5128788352012634]]],-1],0,0,[],[],[]],[[[20],[21,"food_potion_01",[-2],[6,"03NsyTOWNYjaBy4/B1R5kv",-1,0]],[22,"food_potion_01",1,[[12,-3,[2,"2blSMJNIhfZ5HquXn2tAaR"],[0],[11],1]],[6,"19KwUusmpVk43juGWdCQSW",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,5,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[44,45]],[[[23,"Food and props",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[12,10],[156,1]],[[[19,"PoisionSpeed"],[47,"PoisionSpeed",[[-5,[31,"foodNode",8388608,-7,[6,"26oh2FqHVJL75MfBYfziTE",-6,0],[1,0.667,5.733,1],[3,0,0.7071067811865475,0,0.7071067811865476],[1,20,20,20],[1,0,90,0]]],1,4],[[42,4,0.0001,-2,[2,"afhWzn74lLnoQrBm8+3vnx"]],[33,-3,[2,"acEYzk36FHtK9IU141o3JI"]],[26,15,15,-4,[2,"6dOZ/mvetGi7XFR+FgBRPB"],[1,0,10,0]]],[6,"7fJOPvAvBaN4HLZl7x/4CB",-1,0],[1,-11,0,-5],[1,0.06,0.06,0.06]],[0,["03NsyTOWNYjaBy4/B1R5kv"]],[24,0,null,1,[15,"03NsyTOWNYjaBy4/B1R5kv",-12,[34,"3aLwuxl6pHiaq28SMqCStr",1,[[35,[0,["03NsyTOWNYjaBy4/B1R5kv"]],[-11]]],[[5,"food_potion_01",["_name"],2],[4,["_lpos"],2,[1,0,13.683,0]],[4,["_lrot"],2,[3,0,0,0,1]],[4,["_euler"],2,[1,0,0,0]],[4,["_lscale"],2,[1,10,10,10]],[4,["_lrot"],-8,[3,-0.62721137512625,-0.32650557562197685,0.3265055756219769,0.62721137512625]],[4,["_euler"],-9,[1,-90,0,55]],[4,["_lpos"],-10,[1,0.8,0.15,0.09]]]],0]],[0,["19KwUusmpVk43juGWdCQSW"]],[32,"food_potion_02",3,[[12,-13,[2,"f3JObblAhMI619LpxUY4eP"],[1],[11],2]],[25,"c5gIu80OZGX70OKfgkhHsA",3,3],[1,-0.8,0.15,0.09],[3,-0.62721137512625,0.32650557562197685,-0.3265055756219769,0.62721137512625],[1,-90,0,-55]]],0,[0,5,1,0,0,1,0,0,1,0,0,1,0,-1,3,0,5,1,0,9,1,0,1,4,0,1,4,0,1,4,0,-1,5,0,5,3,0,0,5,0,8,1,13],[0,0,0,0],[7,-1,6,7],[46,44,45,46]],[[{"name":"PoisionSpeed","rect":{"x":0,"y":0,"width":138,"height":190},"offset":{"x":0,"y":0},"originalSize":{"width":138,"height":190},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[157]],[[{"name":"GO","rect":{"x":0,"y":0,"width":750,"height":216},"offset":{"x":0,"y":0},"originalSize":{"width":750,"height":216},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[158]],[[[19,"Sheild"],[47,"Sheild",[[-5,[31,"foodNode",8388608,-7,[6,"d1FfcvxchIU5Jmij/990jz",-6,0],[1,0.667,5.733,1],[3,0,0.7071067811865475,0,0.7071067811865476],[1,20,20,20],[1,0,90,0]]],1,4],[[42,4,0.0001,-2,[2,"afhWzn74lLnoQrBm8+3vnx"]],[33,-3,[2,"acEYzk36FHtK9IU141o3JI"]],[26,15,15,-4,[2,"39Fhd9clxG06gkyRf4Teca"],[1,0,10,0]]],[6,"7fJOPvAvBaN4HLZl7x/4CB",-1,0],[1,-11,0,-5],[1,0.06,0.06,0.06]],[0,["a25tUyq7xTcJPeX+rDtaaI"]],[24,0,null,1,[15,"a25tUyq7xTcJPeX+rDtaaI",-12,[34,"eadpq2fWdFw5KJ1AUxLNqJ",1,[[35,[0,["a25tUyq7xTcJPeX+rDtaaI"]],[-11]]],[[5,"food_shield_01",["_name"],2],[4,["_lpos"],2,[1,0,9.95,0]],[4,["_lrot"],2,[3,0,0,0,1]],[4,["_euler"],2,[1,0,0,0]],[4,["_lscale"],2,[1,10,10,10]],[4,["_lpos"],-8,[1,1,0.45,0]],[4,["_lrot"],-9,[3,-0.6830127018922194,0.1830127018922193,0.6830127018922193,0.18301270189221933]],[4,["_euler"],-10,[1,-150,90,0]]]],0]],[0,["4fxBaRzUVfl7yP7REtxF12"]],[32,"food_shield_02",3,[[12,-13,[2,"fe2aO1wRxLR4D85gWoehT6"],[1],[11],2]],[25,"a52mNNiU5BnrGSWXahqxK8",3,3],[1,-1,0.45,0],[3,-0.6830127018922194,-0.1830127018922193,-0.6830127018922193,0.18301270189221933],[1,-150,-90,0]]],0,[0,5,1,0,0,1,0,0,1,0,0,1,0,-1,3,0,5,1,0,9,1,0,1,4,0,1,4,0,1,4,0,-1,5,0,5,3,0,0,5,0,8,1,13],[0,0,0,0],[7,-1,6,7],[47,48,49,47]],[[{"name":"skinbtn","rect":{"x":0,"y":0,"width":550,"height":179},"offset":{"x":0,"y":0},"originalSize":{"width":550,"height":179},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[159]],[[[18,".bin",402916057,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":18144,"length":1512,"count":378,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":18144,"count":378,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.47761270403862,-0.05840218812227249,-0.5371884107589722],"maxPosition",8,[1,0.47761270403862,0.05840218812227249,0.5371884107589722]]],-1],0,0,[],[],[]],[[[20],[21,"food_shield_01",[-2],[6,"a25tUyq7xTcJPeX+rDtaaI",-1,0]],[22,"food_shield_01",1,[[12,-3,[2,"2e2P8JJklVzZiLIQ1FtR7L"],[0],[11],1]],[6,"4fxBaRzUVfl7yP7REtxF12",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,5,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[48,49]],[[[23,"Food and props",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[12,10],[160,1]],[[{"name":"countdown3","rect":{"x":30,"y":20,"width":149,"height":209},"offset":{"x":1.5,"y":2.5},"originalSize":{"width":206,"height":254},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[161]],[[{"base":"2,2,0,0,2,0","rgbe":false,"mipmaps":[{"front":"e1b096a7-f4dc-4855-9092-87137c0ae1f4@b47c0@e9a6d","back":"e1b096a7-f4dc-4855-9092-87137c0ae1f4@b47c0@40c10","left":"e1b096a7-f4dc-4855-9092-87137c0ae1f4@b47c0@8fd34","right":"e1b096a7-f4dc-4855-9092-87137c0ae1f4@b47c0@74afd","top":"e1b096a7-f4dc-4855-9092-87137c0ae1f4@b47c0@bb97f","bottom":"e1b096a7-f4dc-4855-9092-87137c0ae1f4@b47c0@7d38f"}]}],[26],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[6],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[6],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[6],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[6],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[6],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[6],0,[],[],[]],[[[76,"1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{},{},{}],[[[{},"mainColor",8,[4,251658495]],{},{}],11,0,0]]],0,0,[0],[10],[1]],[[[181,"../Material/waterEffect/water",[{"hash":4232010801,"name":"../Material/waterEffect/water|unlit-vs:vert|unlit-fs:frag","glsl4":{"vert":"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\n  layout(location = 6) in vec4 a_matWorld0;\n  layout(location = 7) in vec4 a_matWorld1;\n  layout(location = 8) in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    layout(location = 9) in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  layout(location = 10) in float a_dyn_batch_id;\n  layout(set = 2, binding = 0) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(set = 2, binding = 0) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\n    int getVertexId() {\n      return gl_VertexIndex;\n    }\n  layout(set = 2, binding = 4) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    layout(set = 2, binding = 6) uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    layout(set = 2, binding = 7) uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    layout(set = 2, binding = 8) uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    layout(location = 4) in u32vec4 a_joints;\n  layout(location = 5) in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      layout(location = 12) in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(set = 2, binding = 3) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(set = 2, binding = 2) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    layout(set = 2, binding = 5) uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(set = 2, binding = 3) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nlayout(location = 0) out vec4 v_uv;\nlayout(location = 1) out vec3 v_normal;\nlayout(location = 2) out vec3 v_view;\nvec4 vert() {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 worldPos = matWorld * In.position;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  v_view = cc_cameraPos.xyz - worldPos.xyz;\n  v_uv.xy = worldPos.xz * 0.05  + cc_time.x * 0.1  ;\n  v_uv.zw = a_texCoord;\n  return cc_matProj * cc_matView * worldPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(location = 0) in vec4 v_uv;\nlayout(location = 1) in vec3 v_normal;\nlayout(location = 2) in vec3 v_view;\nlayout(set = 1, binding = 1) uniform sampler2D noiseTexture;\nlayout(set = 1, binding = 2) uniform samplerCube envTexture;\nlayout(set = 1, binding = 0) uniform Constant {\n  vec4 mainColor;\n  vec4 rimColor;\n};\nvec4 frag () {\n  float t = texture(noiseTexture, v_uv.xy).r;\n  vec3  n = normalize(v_normal);\n  vec3  v = normalize(v_view);\n  vec3  r = -v + t * 0.5;\n  vec3  reflectColor = texture(envTexture, r).rgb;\n  float fresnel = mix(0.15, 1.0, pow(1.0 - dot(n, v), 2.0));\n  vec3  color = mix(mainColor.rgb, reflectColor, fresnel);\n  color = mix(color, vec3(1.0), smoothstep(0.9, 0.901, t));\n  vec2 d = v_uv.zw - vec2(0.5, 0.5);\n  color = mix(color, rimColor.rgb, rimColor.a * smoothstep(0.0, 0.8, dot(d,d)));\n  return vec4(color, mainColor.a);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n  layout(std140) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(std140) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nout vec4 v_uv;\nout vec3 v_normal;\nout vec3 v_view;\nvec4 vert() {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 worldPos = matWorld * In.position;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  v_view = cc_cameraPos.xyz - worldPos.xyz;\n  v_uv.xy = worldPos.xz * 0.05  + cc_time.x * 0.1  ;\n  v_uv.zw = a_texCoord;\n  return cc_matProj * cc_matView * worldPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nin vec4 v_uv;\nin vec3 v_normal;\nin vec3 v_view;\nuniform sampler2D noiseTexture;\nuniform samplerCube envTexture;\nlayout(std140) uniform Constant {\n  vec4 mainColor;\n  vec4 rimColor;\n};\nvec4 frag () {\n  float t = texture(noiseTexture, v_uv.xy).r;\n  vec3  n = normalize(v_normal);\n  vec3  v = normalize(v_view);\n  vec3  r = -v + t * 0.5;\n  vec3  reflectColor = texture(envTexture, r).rgb;\n  float fresnel = mix(0.15, 1.0, pow(1.0 - dot(n, v), 2.0));\n  vec3  color = mix(mainColor.rgb, reflectColor, fresnel);\n  color = mix(color, vec3(1.0), smoothstep(0.9, 0.901, t));\n  vec2 d = v_uv.zw - vec2(0.5, 0.5);\n  color = mix(color, rimColor.rgb, rimColor.a * smoothstep(0.0, 0.8, dot(d,d)));\n  return vec4(color, mainColor.a);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp vec4 cc_time;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp vec4 cc_cameraPos;\n#if USE_INSTANCING\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n  uniform highp mat4 cc_matWorlds[10];\n#else\n  uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      attribute highp vec4 a_jointAnimInfo;\n    #endif\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    uniform highp vec4 cc_joints[90];\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvarying vec4 v_uv;\nvarying vec3 v_normal;\nvarying vec3 v_view;\nvec4 vert() {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 worldPos = matWorld * In.position;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  v_view = cc_cameraPos.xyz - worldPos.xyz;\n  v_uv.xy = worldPos.xz * 0.05  + cc_time.x * 0.1  ;\n  v_uv.zw = a_texCoord;\n  return cc_matProj * cc_matView * worldPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvarying vec4 v_uv;\nvarying vec3 v_normal;\nvarying vec3 v_view;\nuniform sampler2D noiseTexture;\nuniform samplerCube envTexture;\n  uniform vec4 mainColor;\n  uniform vec4 rimColor;\nvec4 frag () {\n  float t = texture2D(noiseTexture, v_uv.xy).r;\n  vec3  n = normalize(v_normal);\n  vec3  v = normalize(v_view);\n  vec3  r = -v + t * 0.5;\n  vec3  reflectColor = textureCube(envTexture, r).rgb;\n  float fresnel = mix(0.15, 1.0, pow(1.0 - dot(n, v), 2.0));\n  vec3  color = mix(mainColor.rgb, reflectColor, fresnel);\n  color = mix(color, vec3(1.0), smoothstep(0.9, 0.901, t));\n  vec2 d = v_uv.zw - vec2(0.5, 0.5);\n  color = mix(color, rimColor.rgb, rimColor.a * smoothstep(0.0, 0.8, dot(d,d)));\n  return vec4(color, mainColor.a);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[]},"locals":{"blocks":[{"name":"CCLocalBatched","defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"CCLocal","defines":["!USE_INSTANCING","!USE_BATCHING"]},{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":194,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":2}},"defines":[{"name":"USE_INSTANCING","type":"boolean","defines":[],"editor":{"elevated":true}},{"name":"USE_BATCHING","type":"boolean","defines":["!USE_INSTANCING"],"editor":{"elevated":true}},{"name":"USE_LIGHTMAP","type":"boolean","defines":["USE_INSTANCING"]},{"name":"CC_USE_MORPH","type":"boolean","defines":[]},{"name":"CC_MORPH_TARGET_COUNT","type":"number","defines":["CC_USE_MORPH"],"range":[2,8]},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_USE_SKINNING","type":"boolean","defines":[]},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean","defines":["CC_USE_SKINNING"]}],"blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"mainColor","type":16,"count":1},{"name":"rimColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"noiseTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]},{"name":"envTexture","type":31,"count":1,"stageFlags":16,"binding":2,"defines":[]}],"attributes":[{"name":"a_matWorld0","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING","USE_LIGHTMAP"]},{"name":"a_dyn_batch_id","type":13,"count":1,"stageFlags":1,"format":11,"location":10,"defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"a_position","type":15,"count":1,"stageFlags":1,"format":32,"location":0,"defines":[]},{"name":"a_normal","type":15,"count":1,"stageFlags":1,"format":32,"location":1,"defines":[]},{"name":"a_texCoord","type":14,"count":1,"stageFlags":1,"format":21,"location":2,"defines":[]},{"name":"a_tangent","type":16,"count":1,"stageFlags":1,"format":44,"location":3,"defines":[]},{"name":"a_vertexId","type":13,"count":1,"stageFlags":1,"format":11,"location":11,"defines":["CC_USE_MORPH"]},{"name":"a_joints","type":"u32vec4","count":1,"stageFlags":1,"location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","type":16,"count":1,"stageFlags":1,"format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":12,"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"]}],"varyings":[{"name":"v_uv","type":16,"count":1,"stageFlags":1,"location":0,"defines":[]},{"name":"v_normal","type":15,"count":1,"stageFlags":1,"location":1,"defines":[]},{"name":"v_view","type":15,"count":1,"stageFlags":1,"location":2,"defines":[]}]}],[{"name":"opaque","passes":[{"program":"../Material/waterEffect/water|unlit-vs:vert|unlit-fs:frag","properties":{"noiseTexture":{"value":"white","type":28},"envTexture":{"value":"white","type":31},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"type":"color"}},"rimColor":{"type":16,"value":[1,1,1,1],"editor":{"type":"color"}}}}]}]]],0,0,[],[],[]],[[{"name":"tap bar di","rect":{"x":0,"y":0,"width":1081,"height":198},"offset":{"x":0,"y":0},"originalSize":{"width":1081,"height":198},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[162]],[[{"name":"countdown","rect":{"x":29,"y":18,"width":150,"height":211},"offset":{"x":1,"y":3.5},"originalSize":{"width":206,"height":254},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[163]],[[{"name":"default_radio_button_off","rect":{"x":3,"y":3,"width":26,"height":26},"offset":{"x":0,"y":0},"originalSize":{"width":32,"height":32},"rotated":false,"capInsets":[13,13,13,13],"packable":true}],[0],0,[0],[4],[164]],[[{"name":"di","rect":{"x":0,"y":0,"width":1082,"height":532},"offset":{"x":0,"y":0},"originalSize":{"width":1082,"height":532},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[165]],[[[23,"terrain_05",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[12,10],[166,1]],[[[20],[21,"terrain_05",[-2],[6,"35qsdnuYxX5KuoRBS5ofmS",-1,0]],[22,"terrain_05",1,[[12,-3,[2,"0asUK/NwVaqK6UDizjo1fK"],[0],[11],1]],[6,"66hHjhVoxemoUDzsM/1907",1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,5,1,0,-1,2,0,0,2,0,8,1,3],[0,0],[-1,6],[167,32]],[[[18,".bin",2206778167,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":18768,"length":5796,"count":1449,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":18768,"count":391,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-13.52660083770752,-12.873780250549316,-0.0000027130126909469254],"maxPosition",8,[1,13.52660083770752,12.873780250549316,3.2294259071350098]]],-1],0,0,[],[],[]],[[{"name":"Sheild","rect":{"x":0,"y":0,"width":156,"height":184},"offset":{"x":0,"y":0},"originalSize":{"width":156,"height":184},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[168]],[[{"name":"infineSign","rect":{"x":0,"y":0,"width":358,"height":165},"offset":{"x":0,"y":0},"originalSize":{"width":358,"height":165},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[169]],[[{"name":"Trophy 2","rect":{"x":0,"y":0,"width":258,"height":278},"offset":{"x":0,"y":0},"originalSize":{"width":258,"height":278},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[0],0,[0],[4],[170]],[[{"name":"default_scrollbar_vertical_bg","rect":{"x":0,"y":0,"width":15,"height":30},"offset":{"x":0,"y":0},"originalSize":{"width":15,"height":30},"rotated":false,"capInsets":[4,10,4,10],"packable":true}],[0],0,[0],[4],[171]]]]
